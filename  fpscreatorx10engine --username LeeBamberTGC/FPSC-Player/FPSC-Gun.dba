rem
rem GUN CORE
rem


_gun_init:

rem Load all guns into memory
gosub _gun_scaninall_ref

rem Force all weapons into weapon slots (initial default start)
if level=1 then gosub _gun_gatherslotorder

rem No gun to start with
weaponammoindex=0
autoloadgun=-1
gunid=0

return

_gun_loadonlypresent:
 `
 rem Load only active guns from slots (and from playerstartentry)
 for tww=1 to 10
  gunid=weaponslot(tww).pref
  if gunid>0 then gun(gunid).activeingame=1
 next tww
 `
 rem load in any guns that entities specify
 for e=1 to entityelementlist
  entid=entityelement(e).bankindex
  gunid=entityprofile(entid).hasweapon
  if gunid>0 then gun(gunid).activeingame=1
  gunid=entityprofile(entid).isweapon
  if gunid>0 then gun(gunid).activeingame=1
 next e
 `
 rem Load all guns that have been activated
 for gunid=1 to gunmax
  if gun(gunid).activeingame=1
   gun$=gun(gunid).name$ : gosub _gun_load
  endif
 next gunid
 `
 rem And now fill in player weapon details
 for tww=1 to 10
  gunid=weaponslot(tww).pref
  if gunid>0
   if gun(gunid).activeingame=1
    weaponhud(tww)=gun(gunid).hudimage
   endif
  endif
 next tww
 `
 rem Ensure gun vars are reset
 gunid=0
 `
return

_gun_resetgunsettings:
 `
 rem Reset weapons (1=restart)
 if tcopyorrestart=0
  rem copy
  dim copyweaponslot(10) as weaponslottype
  dim copyweaponammo(10) as integer
  dim copyweaponclipammo(10) as integer
  dim copyweaponhud(10) as integer
  for ws=1 to 10
   copyweaponslot(ws)=weaponslot(ws)
   copyweaponammo(ws)=weaponammo(ws)
   copyweaponclipammo(ws)=weaponclipammo(ws)
   copyweaponhud(ws)=weaponhud(ws)
  next ws
 else
  rem restore
  for ws=1 to 10
   weaponslot(ws)=copyweaponslot(ws)
   weaponammo(ws)=copyweaponammo(ws)
   weaponclipammo(ws)=copyweaponclipammo(ws)
   weaponhud(ws)=copyweaponhud(ws)
  next ws
 endif
 `
return

_gun_manager:

rem Gun controls
gunclick=player(1).state.firingmode
if gunmode<100
 rem Gun Firing
 if gunclick<>1 then gunmustreleasefirst=0
 if gunclick<>0
  if gunclick=1 and gunmustreleasefirst=0 then gunmode=101
  if gunclick=2 then gunmode=121
 else
  rem Gun Movement
  if gunmode<21 or gunmode>39
   if player(1).state.moving=1 then gunmode=21
  endif
 endif
endif

rem Gun Selection
if gunselectionlockdown=0
 if player(1).command.newweapon>0
  sel=player(1).command.newweapon
  player(1).command.newweapon=0
  if weaponammoindex>0
   rem only if 'different weapon'
   if weaponslot(weaponammoindex).pref<>sel
    gunmode=31 : gunselectionafterhide=sel
   endif
  else
   gunmode=131 : autoloadgun=sel
  endif
 endif
endif

rem Change weapon
gosub _gun_change

rem Need to update hud object for gun here (and again after SYNC)
gosub _gun_update_hud

rem Gun control
if gunid>0
 if object exist(currentgunobj)=1
  gosub _gun_control
  gosub _gun_shoot
  if gun(gunid).settings.flashlimb>=0 then gosub _gun_flash
  if gun(gunid).settings.brasslimb>=0 then gosub _gun_brass
  `x9if gun(gunid).settings.brasslimb>=0 then gosub _gun_smoke
  if gun(gunid).settings.smokelimb>=0 then gosub _gun_smoke
  gosub _gun_soundcontrol
 endif
endif

rem Independent handling (no matter which guns is selected)
gosub _gun_brass_indi

return

_gun_change:

if autoloadgun<>-1
 `
 rem Free the old gun
 gosub _gun_free
 `
 rem Gun selection
 gunid=autoloadgun
 gun$=gun(gunid).name$
 autoloadgun=-1
 hudcrosshair=0
 `
 rem If gun selection valid, load it
 if gun$<>"" then gosub _gun_selectandorload

 rem cause gun lighting to reset
 currentguncolr=-1 : gosub _lighting_applyplayerlighting

 rem Show gun as active
 currentgunobj=gun(gunid).obj
 if currentgunobj>0
  set object interpolation currentgunobj,100
  set object frame currentgunobj,gun(gunid).action.show.s
  show object currentgunobj
 else
  gunid=0
 endif

 rem Default gun action is to SHOW and reveal gun (then goes to gunmode=5 idle)
 gunmode=131 : keyboardpress=0

 rem locate slot for ammo usage
 weaponammoindex=0
 if gunid>0
  for ws=1 to 10
   if weaponslot(ws).pref=gunid
    weaponammoindex=ws : exit
   endif
  next ws
 endif

endif

return

_gun_update_hud:

rem HUD marker update
if object exist(hudbankoffset+2)=1
 gunax#=camera angle x(playercam) : gunay#=camera angle y(playercam)
 position object hudbankoffset+2,camera position x(playercam),camera position y(playercam),camera position z(playercam)
 if gunsafetymode=1
  rem X10 - 061207 - drop gun downwards to avoid shooting allies ad neutrals
  rotate object hudbankoffset+2,curveangle(gunax#+9,object angle x(hudbankoffset+2),5.0),gunay#,0
 else
  rem V109 - 140109 - for MP5 guns (with arms) can see end of arms and gun flicks on Y (so restore X9 functionality)
  `rotate object hudbankoffset+2,curveangle(gunax#,object angle x(hudbankoffset+2),2.0),gunay#,0
  rotate object hudbankoffset+2,gunax#,gunay#,0
 endif
 if currentgunobj>0
  if object exist(currentgunobj)=1
   if player(1).health>0
    show object currentgunobj
   else
    hide object currentgunobj
   endif
  endif
 endif
endif

return

_gun_update_overlay:
return

_gun_control:

rem X10 gun animation speed (before timer based mod)
gunanimationspeed#=75.0

rem gun position offset and rotation
if plrzoomin#<>0.0
 plrzoomaccuracy#=gun(gunid).settings.zoomaccuracy/100.0
 position object currentgunobj,gun(gunid).horiz#,gun(gunid).vert#,gun(gunid).forward#-(plrzoomin#*10.0)
else
 position object currentgunobj,gun(gunid).horiz#,gun(gunid).vert#,gun(gunid).forward#
endif
rotate object currentgunobj,0,180,0

rem hide the object if weapon-ammo and no qty left
if gun(gunid).settings.weaponisammo=1
 if weaponammo(weaponammoindex)=0
  hide object currentgunobj
 else
  show object currentgunobj
 endif
endif

rem gun idle control ((4*0.75)=3.0)
if gunmode=5
 gunmode=6
 guninterp=4
 stop object currentgunobj
 set object interpolation currentgunobj,25
 set object frame currentgunobj,gun(gunid).action.idle.s+3.0
endif
if gunmode=6
 dec guninterp,1
 if guninterp<=0
  set object interpolation currentgunobj,100
  set object frame currentgunobj,gun(gunid).action.idle.s+3.0
  gunmode=7
 endif
endif
if gunmode=7
 gunmode=8
 play object currentgunobj,gun(gunid).action.idle.s+3.0,gun(gunid).action.idle.e
endif
if gunmode=8
 if object frame(currentgunobj)>=gun(gunid).action.idle.e then gunmode=9
endif
if gunmode=9
 gunmode=10
 guninterp=4
 stop object currentgunobj
 set object interpolation currentgunobj,25
 set object frame currentgunobj,gun(gunid).action.idle.s+3.0
endif
if gunmode=10
 dec guninterp,1
 if guninterp<=0
  set object interpolation currentgunobj,100
  set object frame currentgunobj,gun(gunid).action.idle.s+3.0
  gunmode=7
 endif
endif

rem gun movment control ((4*0.75)=3.0
if gunmode=21
 gunmode=22
 guninterp=4
 stop object currentgunobj
 set object interpolation currentgunobj,25
 set object frame currentgunobj,gun(gunid).action.move.s+3.0
endif
if gunmode=22
 dec guninterp,1
 if guninterp<=0
  set object interpolation currentgunobj,100
  set object frame currentgunobj,gun(gunid).action.move.s+3.0
  gunmode=23
 endif
endif
if gunmode>=23 and gunmode<=26
 if movement=0 then gunmode=5
endif
if gunmode=23
 gunmode=24
 play object currentgunobj,gun(gunid).action.move.s+3.0,gun(gunid).action.move.e
endif
if gunmode=24
 if object frame(currentgunobj)>=gun(gunid).action.move.e then gunmode=25
endif
if gunmode=25
 gunmode=26
 guninterp=4
 stop object currentgunobj
 set object interpolation currentgunobj,25
 set object frame currentgunobj,gun(gunid).action.move.s+3.0
endif
if gunmode=26
 dec guninterp,1
 if guninterp<=0
  set object interpolation currentgunobj,100
  set object frame currentgunobj,gun(gunid).action.move.s+3.0
  gunmode=23
 endif
endif

rem gun put away and hide control
if gunmode=31
 gunmode=32
 guninterp=4
 gunselectionlockdown=1
 stop object currentgunobj
 set object interpolation currentgunobj,25
 set object frame currentgunobj,gun(gunid).action.hide.s
 rem play sound of gun select-change
 if gunsound(gunid,4).soundid>0
  if sound exist(gunsound(gunid,4).soundid)=1
   if sound playing(gunsound(gunid,4).soundid)=0
    playinternalBC3dsound(gunsound(gunid,4).soundid,camera position x(playercam),camera position y(playercam),camera position z(playercam),1)
   endif
  endif
 endif
endif
if gunmode=32
 dec guninterp,1
 if guninterp<=0
  set object interpolation currentgunobj,100
  set object frame currentgunobj,gun(gunid).action.hide.s
  gunanimationspeed#=125.0
  gunmode=33
 endif
endif
if gunmode=33
 gunmode=34
 set object interpolation currentgunobj,100
 play object currentgunobj,gun(gunid).action.hide.s,gun(gunid).action.hide.e
endif
if gunmode=34
 if object frame(currentgunobj)>=gun(gunid).action.hide.e then gunmode=35
endif
if gunmode=35
 gunanimationspeed#=75.0
 autoloadgun=gunselectionafterhide
 gunselectionlockdown=0
 gunmode=5
endif

rem X10 - 061207 - scan direction of gun, ensure cannot point at neutral or allies
gunsafetymode=0
gunsafetymodeoverride=0
closestfriendly#=99999.9
closestenemy#=99999.9
if bloodmode$="off"
 for friendscane=1 to entityelementlist
  if entityelement(friendscane).active=1
   friendscanentid=entityelement(friendscane).bankindex
   if entityprofile(friendscanentid).ischaracter=1
    friendscanobj=entityelement(friendscane).obj
    if friendscanobj>0
     if object exist(friendscanobj)=1
      if object in screen(friendscanobj)=1
       friendscanx=object screen x(friendscanobj)
       friendscany=object screen y(friendscanobj)
       friendscanwidth=screen width()/5
       friendscanheight=screen height()/4
       if friendscanx>(screen width()/2)-friendscanwidth
        if friendscanx<(screen width()/2)+friendscanwidth
         if friendscany>(screen height()/2)-friendscanheight
          if friendscany<(screen height()/2)+friendscanheight
           if entityelement(friendscane).eleprof.ex.alignment=1
            rem at least one enemy in view, so keep gun raised (HL2 style)
            if gunmode=104
             rem but only if was already firing!
             closestenemy#=0
            else
             rem or closer than any friendly (see below)
             ttdx#=entityelement(friendscane).x-mex#
             ttdz#=entityelement(friendscane).z-mez#
             closestenemy#=sqrt(abs(ttdx#*ttdx#)+abs(ttdz#*ttdz#))
            endif
            gunsafetymodeoverride=1
           else
            rem any none enemy character cannot be shot          
            ttdx#=entityelement(friendscane).x-mex#
            ttdz#=entityelement(friendscane).z-mez#
            closestfriendly#=sqrt(abs(ttdx#*ttdx#)+abs(ttdz#*ttdz#))
            gunsafetymode=1
           endif
          endif
         endif
        endif
       endif 
      endif
     endif
    endif
   endif
  endif
 next friendscane
endif
if gunsafetymodeoverride=1
 if closestenemy#<closestfriendly#
  gunsafetymode=0
 endif
endif

rem gun firing control
if gunmode=101
 if gunsafetymode=1
  gunmode=107
 else
  if gun(gunid).settings.reloadqty=0 then weaponammo(weaponammoindex)=99999
  if weaponammo(weaponammoindex)>0
   gunmode=102
   set object interpolation currentgunobj,100
   play object currentgunobj,gun(gunid).action.start.s,gun(gunid).action.start.e
  else
   if gunclick<>1
    if gunsound(gunid,3).soundid>0
     if sound exist(gunsound(gunid,3).soundid)=1
      if sound playing(gunsound(gunid,3).soundid)=0
       playinternalBC3dsound(gunsound(gunid,3).soundid,camera position x(playercam),camera position y(playercam),camera position z(playercam),100)
      endif
     endif
    endif
    gunmode=107
   endif
  endif
 endif
endif
if gunmode=102
 if gunsafetymode=1
  gunmode=107
 else
  if object frame(currentgunobj)>=gun(gunid).action.start.e then gunmode=103
 endif
endif
if gunmode=103
 if gunsafetymode=1
  gunmode=107
 else
  gunmode=104 : gunflash=1
  gunshoot=1 : guntimercount=6
  weaponammo(weaponammoindex)=weaponammo(weaponammoindex)-1
  if gun(gunid).settings.brasslimb<>-1 then gunbrass=1 : gunbrasscount=6
  if gun(gunid).settings.smokelimb<>-1 then gunsmoke=1 : gunsmokecount=6
  sndid=gunsound(gunid,1).soundid
  if sndid>0
   if sound exist(sndid)=1
    if gun(gunid).action.automatic.s>0
     loop object currentgunobj,gun(gunid).action.automatic.s,gun(gunid).action.automatic.e
     set sound volume sndid,soundvolumes(0)
     play sound sndid,gun(gunid).sound.fireloopend : rem some sound bug
     loop sound sndid,0,gun(gunid).sound.fireloopend
     gunstartedaloopsoundsndid=sndid
     gunstartedaloopsoundattimer=timer()
    endif
   endif
  endif
 endif
endif
if gunmode=104
 if gunsafetymode=1
  gunmode=107
 else
  if weaponammo(weaponammoindex)>0
   if gunflash=0 then gunflash=1
   gunbrasscount=gunbrasscount-timebasepercycle#
   gunsmokecount=gunsmokecount-timebasepercycle#
   guntimercount=guntimercount-timebasepercycle#
   if gunbrasscount<=0 and gun(gunid).settings.brasslimb<>-1 then gunbrass=1 : gunbrasscount=6
   if gunsmokecount<=0 and gun(gunid).settings.smokelimb<>-1 then gunsmoke=1 : gunsmokecount=6
   if guntimercount<=0 then gunshoot=1 : guntimercount=6 : weaponammo(weaponammoindex)=weaponammo(weaponammoindex)-1
   if gun(gunid).action.automatic.s=0 then gunmode=105
   if gunclick<>1 then gunmode=105
   sndid=gunsound(gunid,1).soundid
   if sndid>0
    if sound exist(sndid)=1
     position sound sndid,camera position x(playercam),camera position y(playercam),camera position z(playercam)
     broadcast3dplrsound(camera position x(playercam),camera position y(playercam),camera position z(playercam),100)
     set sound volume sndid,soundvolumes(0)
    endif
   endif
  else
   gunmode=105
  endif
 endif
endif
if gunmode=105
 if gunsafetymode=1
  gunmode=107
 else
  if gun(gunid).action.automatic.s>0
   rem automatic weapons cannot resume firing right away
  else
   gunmustreleasefirst=1
  endif
  if gun(gunid).action.finish.s>0
   gunmode=106
   play object currentgunobj,gun(gunid).action.finish.s,gun(gunid).action.finish.e
   sndid=gunsound(gunid,1).soundid
   if sndid>0
    if sound exist(sndid)=1
     position sound sndid,camera position x(playercam),camera position y(playercam),camera position z(playercam)
     set sound volume sndid,soundvolumes(0)
     play sound sndid,gun(gunid).sound.fireloopend
    endif
   endif
   broadcast3dplrsound(camera position x(playercam),camera position y(playercam),camera position z(playercam),100)
  else
   gunmode=107
  endif
 endif
endif
if gunmode=106
 if gunsafetymode=1
  gunmode=107
 else
  if object frame(currentgunobj)>=gun(gunid).action.finish.e then gunmode=107
 endif
endif
if gunmode=107
 rem X10 stop stray fire sound (loop can be left on)
 rem also added more code doing the same thing below
 sndid=gunsound(gunid,1).soundid
 if sndid>0
  if sound exist(sndid)=1
   if gun(gunid).action.automatic.s>0
    if sound playing(sndid)=1
     stop sound sndid
    endif
   endif
  endif
 endif
 rem reset to normal
 gunmode=5
 rem auto-reload if no bullets
 if weaponammo(weaponammoindex)=0
  if weaponclipammo(weaponammoindex)>0
   rem direct into reload
   gunmode=121
  endif
 endif
endif

rem X10 - 071007 - sound loop can be left on
if gunmode<101 or gunmode>106
 if timer()-gunstartedaloopsoundattimer>1000
  sndid=gunstartedaloopsoundsndid
  gunstartedaloopsoundsndid=0
  if sndid>0
   if sound exist(sndid)=1
    stop sound sndid
   endif
  endif
 endif
endif

rem gun reload and cock control
if gunmode=121
 if weaponclipammo(weaponammoindex)=0 or gun(gunid).settings.weaponisammo=1
  if gun(gunid).settings.weaponisammo=0
   if gunsound(gunid,3).soundid>0
    if sound exist(gunsound(gunid,3).soundid)=1
     if sound playing(gunsound(gunid,3).soundid)=0
      playinternalBC3dsound(gunsound(gunid,3).soundid,camera position x(playercam),camera position y(playercam),camera position z(playercam),50)
      set sound volume gunsound(gunid,3).soundid,soundvolumes(0)
     endif
    endif
   endif
  endif
  gunmode=5
 else
  gunmode=122
  guninterp=4
  stop object currentgunobj
  set object interpolation currentgunobj,25
  set object frame currentgunobj,gun(gunid).action.startreload.s
 endif
endif
if gunmode=122
 dec guninterp,1
 if guninterp<=0
  set object interpolation currentgunobj,100
  set object frame currentgunobj,gun(gunid).action.startreload.s
  gunmode=123
 endif
endif
if gunmode=123
 gunmode=124
 set object interpolation currentgunobj,100
 play object currentgunobj,gun(gunid).action.startreload.s,gun(gunid).action.cock.e
 if gunsound(gunid,2).soundid>0
  if sound exist(gunsound(gunid,2).soundid)=1
   position sound gunsound(gunid,2).soundid,camera position x(playercam),camera position y(playercam),camera position z(playercam)
  endif
 endif
endif
if gunmode=124
 if object frame(currentgunobj)>=gun(gunid).action.cock.e then gunmode=125
endif
if gunmode=125
 rem actual reload
 tneedfromclip=gun(gunid).settings.reloadqty-weaponammo(weaponammoindex)
 if tneedfromclip>weaponclipammo(weaponammoindex) then tneedfromclip=weaponclipammo(weaponammoindex)
 if tneedfromclip>0
  weaponammo(weaponammoindex)=weaponammo(weaponammoindex)+tneedfromclip
  weaponclipammo(weaponammoindex)=weaponclipammo(weaponammoindex)-tneedfromclip
 endif
 gunmode=5
endif

rem gun reveal
if gunmode=131
 set object interpolation currentgunobj,100
 set object frame currentgunobj,gun(gunid).action.show.s
 play object currentgunobj,gun(gunid).action.show.s,gun(gunid).action.show.e
 if gunsound(gunid,2).soundid>0
  if sound exist(gunsound(gunid,2).soundid)=1
   position sound gunsound(gunid,2).soundid,camera position x(playercam),camera position y(playercam),camera position z(playercam)
  endif
 endif
 gunmode=132
endif
if gunmode=132
 if object frame(currentgunobj)>=gun(gunid).action.show.e then gunmode=5
endif

rem X10 timer based speed - if we ran at 60fps, animspeed# would be exactly 1.0
rem if we ran at 30fps, animspeed# would be 2.0, and 120fps would be 0.5
animspeed#=(1.0/40.0)*(timer()-lastanimspeedtime) : lastanimspeedtime=timer()
set object speed currentgunobj,gunanimationspeed#*animspeed#

return

_gun_flash:

if plrzoomin#<>0.0
 rem X10 - 101007 - ensure muzzle flash is hidden when in zoom mode
 gunflash=3 `gunflash=0
endif
if gunflash=1
 `
 rem fire flash init
 gunflash=2
 gunflashcount=6
 rotate object hudbankoffset+5,0,0,rnd(360)
 show object hudbankoffset+5
 if gun(gunid).settings.flashlimb2<>-1
  rotate object hudbankoffset+32,0,0,rnd(360)
  show object hudbankoffset+32
 endif
 `
 rem light flash init
 if spotmultiplier#<>5.0
  spotflash=100 : spotmultiplier#=1.0
  tx#=camera position x(playercam)
  ty#=camera position y(playercam)
  tz#=camera position z(playercam)
  tcolr=gun(gunid).settings.muzzlecolorr/3
  tcolg=gun(gunid).settings.muzzlecolorg/3
  tcolb=gun(gunid).settings.muzzlecolorb/3
  gosub _lighting_spotflash
 endif
 `
endif
if gunflash=2
 gunflashcount=gunflashcount-timebasepercycle#
 if gunflashcount<=4
  rem hide early
  hide object hudbankoffset+5
  hide object hudbankoffset+32
 endif
 if gunflashcount<=0
  gunflash=3
 endif
endif
if gunflash=3
 gunflash=0
 rem final hide
 hide object hudbankoffset+5
 hide object hudbankoffset+32
endif

return

_gun_brass:

rem FPSCV104RC5-twingun
gunbrass2=0 : if gunbrass=1 and gun(gunid).settings.flashlimb2<>-1 then gunbrass2=1

rem find free shell and expell
for o=6 to 20
 obj=hudbankoffset+o
 if object visible(obj)=0 and gunbrass=1
  lx#=limb position x(currentgunobj,gun(gunid).settings.brasslimb)+1.0-(rnd(20)/10.0)
  ly#=limb position y(currentgunobj,gun(gunid).settings.brasslimb)
  lz#=limb position z(currentgunobj,gun(gunid).settings.brasslimb)+1.0-(rnd(20)/10.0)
  position object obj,lx#,ly#,lz#
  set object to object orientation obj,hudbankoffset+2
  roll object left obj,25+rnd(10)
  brassfallcount(o)=15
  show object obj
  gunbrass=0
 endif
 if object visible(obj)=0 and gunbrass=0 and gunbrass2=1
  lx#=limb position x(currentgunobj,gun(gunid).settings.brasslimb2)+1.0-(rnd(20)/10.0)
  ly#=limb position y(currentgunobj,gun(gunid).settings.brasslimb2)
  lz#=limb position z(currentgunobj,gun(gunid).settings.brasslimb2)+1.0-(rnd(20)/10.0)
  position object obj,lx#,ly#,lz#
  set object to object orientation obj,hudbankoffset+2
  roll object left obj,25+rnd(10)
  brassfallcount(o)=15
  show object obj
  gunbrass2=0
 endif
next o

return

_gun_brass_indi:
 for o=6 to 20
  obj=hudbankoffset+o
  if object visible(obj)=1
   if brassfallcount(o)>5
    eject#=1.0
   else
    eject#=brassfallcount(o)/5.0
   endif
   move object right obj,1.0
   if object position y(obj)>object position y(hudbankoffset+2)-20
    if brassfallcount(o)>0
     brassfallcount(o)=brassfallcount(o)-1
     roll object right obj,4.0
    endif
   endif
   position object obj,object position x(obj),object position y(obj)-((1.0-eject#)*1.0),object position z(obj)
   if object position y(obj)<object position y(hudbankoffset+2)-50 or object in screen(obj)=0
    hide object obj
   endif
  endif
 next o
return

_gun_smoke:

rem FPSCV104RC5-twingun
gunsmoke2=0 : if gunsmoke=1 and gun(gunid).settings.flashlimb2<>-1 then gunsmoke2=1

rem find free smoke and puff
for o=21 to 30
 obj=hudbankoffset+o
 if object visible(obj)=0 and gunsmoke=1
  ttsmokelimb=gun(gunid).settings.smokelimb
  if ttsmokelimb<=0 then ttsmokelimb=gun(gunid).settings.brasslimb
  lx#=limb position x(currentgunobj,ttsmokelimb)+1.0-(rnd(20)/10.0)
  ly#=limb position y(currentgunobj,ttsmokelimb)+1.0-(rnd(20)/10.0)
  lz#=limb position z(currentgunobj,ttsmokelimb)+1.0-(rnd(20)/10.0)
  position object obj,lx#,ly#,lz#
  show object obj
  gunsmoke=0 : smokeframe=0
 endif
 if object visible(obj)=0 and gunsmoke=0 and gunsmoke2=1
  ttsmokelimb=gun(gunid).settings.smokelimb2
  if ttsmokelimb<=0 then ttsmokelimb=gun(gunid).settings.brasslimb
  lx#=limb position x(currentgunobj,ttsmokelimb)+1.0-(rnd(20)/10.0)
  ly#=limb position y(currentgunobj,ttsmokelimb)+1.0-(rnd(20)/10.0)
  lz#=limb position z(currentgunobj,ttsmokelimb)+1.0-(rnd(20)/10.0)
  position object obj,lx#,ly#,lz#
  show object obj
  gunsmoke2=0 : smokeframe=0
 endif
 if object visible(obj)=1
  point object obj,camera position x(playercam),camera position y(playercam),camera position z(playercam)
  smokerisespeed#=gun(gunid).settings.smokespeed/100.0
  position object obj,object position x(obj),object position y(obj)+smokerisespeed#,object position z(obj)
  smokeframe=(object position y(obj)-ly#)/0.75
  if object in screen(obj)=1 and smokeframe<=15
   ty=smokeframe/4
   tx=smokeframe-(ty*4)
   q#=1.0/4.0 : tx#=tx*q# : ty#=ty*q#
   rem vertex data lock mode of 1=update (faster method if mesh size unchanged)
   lock vertexdata for limb obj,0,1
   rem X10 plane
   if 1
    set vertexdata uv 0,tx#,ty#
    set vertexdata uv 1,tx#+q#,ty#
    set vertexdata uv 2,tx#,ty#+q#
    set vertexdata uv 3,tx#+q#,ty#
    set vertexdata uv 4,tx#+q#,ty#+q#
    set vertexdata uv 5,tx#,ty#+q#
   else
    set vertexdata uv 0,tx#+q#,ty#
    set vertexdata uv 1,tx#,ty#
    set vertexdata uv 2,tx#+q#,ty#+q#
    set vertexdata uv 3,tx#,ty#
    set vertexdata uv 4,tx#,ty#+q#
    set vertexdata uv 5,tx#+q#,ty#+q#
   endif
   unlock vertexdata
  else
   hide object obj
  endif
 endif
next o

return

_gun_shoot:

rem when fire line active
if gunshoot=1
 if gun(gunid).settings.flakindex=0
  `
  rem BULLET
  rem gun data controls iterations and accuracy
  trayiter=1+gun(gunid).settings.iterate
  trayaccuracy=gun(gunid).settings.accuracy
  bulletdamage=gun(gunid).settings.damage
  `
  rem Special ZOOMODE kill in multiplayer
  if gmultiplayergame=1
   if gunzoommode<>0
    bulletdamage=65500
   endif
  endif
  `
  rem for some weapons, blunderbus style five-ray shot
  multiplayerdamagecollected=0
  for traycount=1 to trayiter
   `
   rem project gun-line-for-shot
   x1#=camera position x(playercam)+(trayaccuracy/2)-rnd(trayaccuracy)
   y1#=camera position y(playercam)+(trayaccuracy/2)-rnd(trayaccuracy)
   z1#=camera position z(playercam)+(trayaccuracy/2)-rnd(trayaccuracy)
   position object hudbankoffset+3,x1#,y1#,z1#
   set object to camera orientation hudbankoffset+3
   move object hudbankoffset+3,gun(gunid).settings.range
   disable object zdepth hudbankoffset+3
   x2#=object position x(hudbankoffset+3)+trayaccuracy-rnd(trayaccuracy*2)
   y2#=object position y(hudbankoffset+3)+trayaccuracy-rnd(trayaccuracy*2)
   z2#=object position z(hudbankoffset+3)+trayaccuracy-rnd(trayaccuracy*2)
   `
   rem reset bullethit vars
   bullethit=0 : bullethitstatic=0
   tbullethitmaterial=0 : tbullethitflesh=0
   bulletraytype=gun(gunid).settings.damagetype
   gunrange#=gun(gunid).settings.range
   `
   rem raycast to surface (bullets path)
   rem 120807 - moved to before _entity_hasbulletrayhit so I can shorten destination
   rem if the wall is going to stop the bullet and cut short the current ray
   dstwallhit#=static raycast(x1#,y1#,z1#,x2#,y2#,z2#)
   if dstwallhit#>0
    wallhitx#=checklist fvalue a(6)
    wallhity#=checklist fvalue b(6)
    wallhitz#=checklist fvalue c(6)
    wallhitmaterial=get static collision value()-1
    rem 120807 - cut short this ray if bullet hits wall
    x2#=wallhitx#
    y2#=wallhity#
    z2#=wallhitz#
   endif
   `
   rem raycastto entity
   gosub _entity_hasbulletrayhit
   `
   rem has bullet hit any entity
   if tcloseste>0 and (dstwallhit#=0 or dstwallhit#>tclosestdist#)
    `
    rem complete rayhit if wall not in way (must come right after _entity_hasbulletrayhit)
    gosub _entity_completerayhit
    `
    rem move entity by that direction with some force (non-multiplayer)
    useknockbackasplayershotcharacter=1
    e=bulletrayhit : gosub _entity_shotbygun
    remstart
    rem this was moved to a subroutine we can call as the player or as ally/enemy
    tentid=entityelement(e).bankindex
    if gmultiplayergame=0
     if bulletraytype=2
      tforce#=gun(gunid).settings.damage/5.0
     else
      tforce#=gun(gunid).settings.damage/30.0
     endif
     rem entity prone to force
     if entityelement(e).eleprof.isimmobile=0
      rem apply force
      rem X10 also, if a ragdoll when shot, also apply force
      rem X10 or it is a character (soon to be ragdoll)
      if entityelement(e).eleprof.physics=1
       rem using advanced physics (force is soft if entity destroyed in hit)
       todee=e : tdx#=tix# : tdy#=tiy# : tdz#=tiz# : todefalloff#=0.0
       rem X10 apply general force for any entity forced by shot
       todeforce#=tforce#*25.0
       tpx#=x# : tpy#=y# : tpz#=z# : gosub _physics_applypointforce
      else
       if entityprofile(tentid).ischaracter=1
        rem used later when convert to ragdoll
        if entityelement(e).health<=0
         rem if health low
         entityelement(e).force.active=1+tforce#
         entityelement(e).force.ix=tix#
         entityelement(e).force.iy=tiy#
         entityelement(e).force.iz=tiz#
         rem 040707 - provide origin of force (for later use in ragdoll velocity)
         entityelement(e).force.originx=x1#
         entityelement(e).force.originy=y1#
         entityelement(e).force.originz=z1#
        endif
       else
        rem using regular force calc
        entityelement(e).force.active=1
        entityelement(e).force.ix=tix#*tforce#
        entityelement(e).force.iy=tiy#*tforce#
        entityelement(e).force.iz=tiz#*tforce#
        rem 040707 - provide origin of force
        entityelement(e).force.originx=x1#
        entityelement(e).force.originy=y1#
        entityelement(e).force.originz=z1#
       endif
      endif
     endif
    endif
    remend
    if entityprofile(tentid).ischaracter=1
     rem only if character full of red blood (and had health)!
     tbullethitflesh=entityprofile(tentid).bloodscorch
    endif
    bullethit=1
    `
   else
    `
    rem has bullet hit some debris between gun and wall
    if dstwallhit#>0
     tforce#=gun(gunid).settings.damage/5.0
     gosub _part_movedebrisifinray
    endif
    `
   endif
   `
   rem had bulletray hit anything solid
   if bulletrayhit>0
    if tbullethitflesh=0
     if bulletrayhitdist#<dstwallhit# then dstwallhit#=0.0
    else
     rem work out size of blood splat based on distance from flesh to surface (0-100)
     t#=abs(dstwallhit#-bulletrayhitdist#)
     if t#<200
      tbullethitflesh=t#/2.0
     else
      dstwallhit#=0.0
     endif
    endif
   endif
   `
   rem wallhit?
   tsoundtrigger=0 : tsoundmaterial=0
   if dstwallhit#>0
    rem flag the creation of a scorch for the solid surface
    x#=wallhitx# : y#=wallhity# : z#=wallhitz#
    if wallhitmaterial>=1 then tbullethitmaterial=wallhitmaterial
    bullethitstatic=1 : bullethit=1
    rem trigger a sound for this material type (1-stone/4-glass)
    if wallhitmaterial>=0
     tmatindex=wallhitmaterial
     if tmatindex>=0 and tmatindex<=gmaterialmax
      tsoundmaterial=1+tmatindex
      tsoundtrigger=material(tmatindex).impactid
      tsx#=wallhitx# : tsy#=wallhity# : tsz#=wallhitz#
      tspd#=(material(tmatindex).freq*2)+rnd(material(tmatindex).freq)
     endif
    endif
   endif
   `
   rem if material sound triggered
   tvol#=100 : gosub _physics_triggermaterialsound
   gosub _decal_triggermaterialdebris
   `
   rem bullet result
   if bullethit=1
    `
    rem trigger decal for blood splat/whatever effect
    if bulletrayhit>0
     e=bulletrayhit
     tentid=entityelement(e).bankindex
     decalid=entitydecal(tentid,1)
     if decalid>0
      rem direction from player to entity
      tix#=x2#-x1# : tiy#=y2#-y1# : tiz#=z2#-z1#
      tdd#=sqrt(abs(tix#*tix#)+abs(tiy#*tiy#)+abs(tiz#*tiz#))
      tix#=tix#/tdd# : tiy#=tiy#/tdd# : tiz#=tiz#/tdd#
      rem find point of impact
      tix#=tix#*(bulletrayhitdist#-10.0)
      tiy#=tiy#*(bulletrayhitdist#-10.0)
      tiz#=tiz#*(bulletrayhitdist#-10.0)
      rem create a splat decal
      decalscalemodx=0 : rem FPSCV101 - fix
      decalorient=0 : decalx=x1#+tix# : decaly=y1#+tiy# : decalz=z1#+tiz#
      originatore=-1 : gosub _decalelement_create
     endif
    endif
    `
    rem add scorch if hit universe static polygons
    if bullethitstatic=1
     `
     rem add scorch to universe
     tscorchtype=gun(gunid).settings.scorchtype
     gosub _entity_doscorch
     `
     rem X10 impact smoke (short-lived smoke emit)
     rem only if above waterline
     if wallhity#>waterlevel#
      if particlegunsmoke<>0
       inc particlegunsmoke
       if particlegunsmoke>5 then particlegunsmoke=1
       rem work out a step back direction
       tix#=x2#-x1# : tiy#=y2#-y1# : tiz#=z2#-z1#
       tdd#=sqrt(abs(tix#*tix#)+abs(tiy#*tiy#)+abs(tiz#*tiz#))
       tix#=tix#/tdd# : tiy#=tiy#/tdd# : tiz#=tiz#/tdd#
       tix#=tix#*15 : tiy#=tiy#*15 : tiz#=tiz#*15
       emit particle particlegunsmoke,wallhitx#-tix#,wallhity#-tiy#,wallhitz#-tiz#
      endif
     endif
     `
    endif
    `
   endif
   `
  rem repeat ray over
  next traycount
  `
  rem after all rays of shot, deal damage OR missed-shot (multiplayer)
  if gmultiplayergame<>0
   rem inform session when make a shot
   gosub _multi_playershoots
   rem deal damage if collected for character hit
   if multiplayerdamagecollected>0
    rem deal damage to entitycharacter (to multiplayerdamagechar)
    tdamage=multiplayerdamagecollected
    e=multiplayerdamagechar : gosub _entity_deducthealth
   endif
  endif
  `
  rem shot over
  gunshoot=0
  `
 else
  `
  rem FLAK
  rem create-projectile-for-shot
  flakid=gun(gunid).settings.flakindex
  if flakid>0
   flakangle=camera angle y(playercam) : flakpitch=camera angle x(playercam) : flakowner=0
   if gun(gunid).settings.flashlimb<>-1
    rem x10 need to update muzzle-obj to latest glued position
    position object hudbankoffset+5,object position x(hudbankoffset+5),object position y(hudbankoffset+5),object position z(hudbankoffset+5)
    flakx=limb position x(hudbankoffset+5,0)
    flaky=limb position y(hudbankoffset+5,0)
    flakz=limb position z(hudbankoffset+5,0)
   else
    flakx=camera position x(playercam)+newxvalue(0,flakangle+flak(flakid).throwangle,flak(flakid).throwforward)
    flaky=camera position y(playercam)+flak(flakid).throwheight
    flakz=camera position z(playercam)+newzvalue(0,flakangle+flak(flakid).throwangle,flak(flakid).throwforward)
    flaky=flaky-(sin(flakpitch)*flak(flakid).throwforward)
   endif
   flakspeed#=1.0
   gosub _flakelement_create
   rem if something blocking launch, explode flak
   texplodeflakinstantly=0
   flakx=flakelement(tf).xpos
   flaky=flakelement(tf).ypos
   flakz=flakelement(tf).zpos
   if static raycast(camerapositionx,camerapositiony,camerapositionz,flakx,flaky,flakz)<>0
    texplodeflakinstantly=1
   endif
   rem intensive scan for solid entity obstacles
   for te=1 to entityelementlist
    if entityelement(te).active=1
     if entityelement(te).obj>0 and entityelement(te).collisionactive=1
      tentid=entityelement(te).bankindex
      if intersect object(entityelement(te).obj,camerapositionx,camerapositiony,camerapositionz,flakx,flaky,flakz)<>0
       texplodeflakinstantly=1 : exit
      endif
     endif
    endif
   next te
   if texplodeflakinstantly=1
    flakelement(tf).profile.weight=0
    flakelement(tf).profile.xinc=0
    flakelement(tf).profile.yinc=0
    flakelement(tf).profile.zinc=0
    flakelement(tf).xpos=camerapositionx
    flakelement(tf).ypos=camerapositiony
    flakelement(tf).zpos=camerapositionz
    gosub _flakelement_explodeinstantly
   endif
  endif
  `
  rem shot over
  gunshoot=0
  `
 endif
endif

return

_gun_soundcontrol:

rem Play sound frames when object frame matches
if gun(gunid).sound.soundframes>0
 for p=0 to gun(gunid).sound.soundframes-1
  sndid=gunsound(gunid,gunsounditem(gunid,p).playsound).soundid
  if gun(gunid).action.automatic.s>0 and p=0 then sndid=0
  if sndid>0
   rem X10 - 241007 - to prevent END of object frame anim leaking to End+1 (causing a sound effect being triggered for neighboring sound, use FRM+1)
   `if int(gunsounditem(gunid,p).keyframe)=int(object frame(currentgunobj))
   if int(gunsounditem(gunid,p).keyframe)+1=int(object frame(currentgunobj))
    if gunsounditem(gunid,p).lastplay=0
     gunsounditem(gunid,p).lastplay=1
     broadcast3dplrsound(camera position x(playercam),camera position y(playercam),camera position z(playercam),50)
     if sound exist(sndid)=1
      set sound volume sndid,soundvolumes(0)      
      play sound sndid
     endif
    endif
   else
    gunsounditem(gunid,p).lastplay=0
   endif
  endif
 next p
endif

return

`
` Gun Resources
`

_gun_create_hud:

rem Setup HUD Center Marker
make object box hudbankoffset+2,30,100,30
set object collision off hudbankoffset+2
hide object hudbankoffset+2

rem Setup HUD Gun-line Marker (shows impact coord)
make object cube hudbankoffset+3,5
set object collision off hudbankoffset+3
hide object hudbankoffset+3

rem Muzzle Flash(es)
for t=0 to 1
 if t=0 then tobj=hudbankoffset+5
 if t=1 then tobj=hudbankoffset+32
 make object plain tobj,25,25
 set object collision off tobj
 set object transparency tobj,1
 disable object zdepth tobj
 set object ambient tobj,0
 set object light tobj,0
 set object cull tobj,0
 set object fov tobj,45
 hide object tobj
 rem X10 - HUD object is for main scene ONLY
 set object mask tobj,%100000,%0,%0
next t

rem Brass
for o=6 to 20
 obj=hudbankoffset+o
 make object sphere obj,5
 set object collision off obj
 disable object zdepth obj
 set object fov obj,45
 hide object obj
 rem X10 - HUD object is for main scene ONLY
 set object mask tobj,%100000,%0,%0
next o

rem Smoke
for o=21 to 30
 obj=hudbankoffset+o
 make object plain obj,20,20
 set object collision off obj
 disable object zdepth obj
 disable object zwrite obj
 set object transparency obj,1
 set object ambient obj,0
 set object light obj,0
 set object cull obj,0
 set object fov obj,45
 hide object obj
 rem X10 - HUD object is for main scene ONLY
 set object mask obj,%100000,%0,%0
next obj

`x9rem crosshair hud object - cross hair should be HUD item
`obj=hudbankoffset+31
`make object cube obj,25
`set object collision off obj
`disable object zdepth obj
`disable object zwrite obj
`lock object on obj
`position object obj,0,0,400
`ghost object on obj
`set object ambient obj,0
`set object light obj,0
`set object cull obj,0
`hide object obj
`rem X10 - HUD object is for main scene ONLY
`set object mask obj,%100000,%0,%0

return

_gun_setup:

rem Create common resources for gun
gosub _gun_create_hud

return

_gun_gatherslotorder:

tslotmax=0
gunslotmax=0
dim data$(100)
filename$=setupfilename$
if file exist(filename$)=0 then debugstring(strarr$(375),filename$)
load array filename$,data$()
for l=0 to 99
 line$=data$(l)
 if len(line$)>0
  if left$(line$,1)<>";"
   `
   rem take fieldname and value
   for c=0 to len(line$)
    if mid$(line$,c)="=" then mid=c : exit
   next c
   field$=lower$(removeedgespaces(left$(line$,mid-1)))
   value$=removeedgespaces(right$(line$,len(line$)-mid))
   `
   rem gather gun type from slot
   for tww=1 to 9
    tryfield$="slot"+str$(tww)
    if field$=tryfield$
     rem find gun id from name
     findgun$=value$
     gosub _gun_findweaponindexbyname
     weaponslot(tww).pref=foundgunid
     if foundgunid>0 then gunslotmax=tww
    endif
   next tww
   `
  endif
 endif
next l
undim data$()

return

_gun_loaddata:

rem X10 - 240907 - default values if not set in gunspec.txt
gun(gunid).settings.impactforce=25

dim data$(100)
filename$="gamecore\guns\"+gun$+"\gunspec.txt"
if file exist(filename$)=1
load array filename$,data$()
addfiletocollection(filename$)
for l=0 to 99
 line$=data$(l)
 if len(line$)>0
  if left$(line$,1)<>";"
   `
   rem take fieldname and value
   for c=0 to len(line$)
    if mid$(line$,c)="=" then mid=c : exit
   next c
   field$=lower$(removeedgespaces(left$(line$,mid-1)))
   value$=removeedgespaces(right$(line$,len(line$)-mid))
   `
   rem take value 1 and 2 from value
   for c=0 to len(value$)
    if mid$(value$,c)="," then mid=c : exit
   next c
   value1=val(removeedgespaces(left$(value$,mid-1)))
   value2=val(removeedgespaces(right$(value$,len(value$)-mid)))
   `
   rem GUN SETTINGS
   if field$="muzzleflash" then gun(gunid).settings.muzzleflash=value1
   if field$="muzzlelasertype" then gun(gunid).settings.muzzlelasertype=value1
   if field$="muzzlesize" then gun(gunid).settings.muzzlesize#=value1
   if field$="muzzlecolorr" then gun(gunid).settings.muzzlecolorr=value1
   if field$="muzzlecolorg" then gun(gunid).settings.muzzlecolorg=value1
   if field$="muzzlecolorb" then gun(gunid).settings.muzzlecolorb=value1
   if field$="brass" then gun(gunid).settings.brass=value1
   if field$="smoke" then gun(gunid).settings.smoke=value1
   if field$="flak" then gun(gunid).settings.flakname$=value$
   if field$="second" then gun(gunid).settings.seconduse=value1
   if field$="damage" then gun(gunid).settings.damage=value1
   if field$="damagetype" then gun(gunid).settings.damagetype=value1
   if field$="scorchtype" then gun(gunid).settings.scorchtype=value1
   if field$="reloadqty" then gun(gunid).settings.reloadqty=value1
   if field$="weaponisammo" then gun(gunid).settings.weaponisammo=value1
   if field$="iterate" then gun(gunid).settings.iterate=value1
   if field$="accuracy" then gun(gunid).settings.accuracy=value1
   if field$="zoommode" then gun(gunid).settings.zoommode=value1
   if field$="zoomaccuracy" then gun(gunid).settings.zoomaccuracy=value1
   if field$="range" then gun(gunid).settings.range=value1
   if field$="decal" then gun(gunid).decal$=value$
   if field$="smokespeed" then gun(gunid).settings.smokespeed=value1
   if field$="smokedecal" then gun(gunid).settings.smokedecal$=value$
   `
   rem GUN VISUALS
   tryfield$="textured"
   if field$=tryfield$ then gun(gunid).texd$=value$
   tryfield$="effect"
   if field$=tryfield$ then gun(gunid).effect$=value$
   tryfield$="transparency"
   if field$=tryfield$ then gun(gunid).transparency=value1
   tryfield$="zoomscope"
   if field$=tryfield$ then gun(gunid).zoomscope$=value$
   tryfield$="weapontype"
   if field$=tryfield$ then gun(gunid).weapontype=value1
   `
   rem GUN SOUNDS
   if field$="fireloop" then gun(gunid).sound.fireloopend=value1
   for p=1 to 5 : rem V109 - 020209 - from 4 to 5
    tryfield$="sound"+str$(p)
    if field$=tryfield$ then gunsound(gunid,p).name$=value$
   next p
   `
   rem GUN AND MUZZLE ALIGNMENT
   if field$="horiz" then gun(gunid).horiz#=value1
   if field$="vert" then gun(gunid).vert#=value1
   if field$="forward" then gun(gunid).forward#=value1
   if field$="alignx" then gun(gunid).settings.muzzlex#=value1
   if field$="aligny" then gun(gunid).settings.muzzley#=value1
   if field$="alignz" then gun(gunid).settings.muzzlez#=value1
   `
   rem HUD ANIMATION DATA
   if field$="select" then gun(gunid).action.show.s=value1 : gun(gunid).action.show.e=value2
   if field$="idle" then gun(gunid).action.idle.s=value1 : gun(gunid).action.idle.e=value2
   if field$="move" then gun(gunid).action.move.s=value1 : gun(gunid).action.move.e=value2
   if field$="fire" then gun(gunid).action.start.s=value1 : gun(gunid).action.start.e=value1 : gun(gunid).action.finish.s=value1 : gun(gunid).action.finish.e=value2
   if field$="start fire" then gun(gunid).action.start.s=value1 : gun(gunid).action.start.e=value2
   if field$="automatic fire" then gun(gunid).action.automatic.s=value1 : gun(gunid).action.automatic.e=value2
   if field$="end fire" then gun(gunid).action.finish.s=value1 : gun(gunid).action.finish.e=value2
   if field$="reload"
    gun(gunid).action.startreload.s=value1 : gun(gunid).action.startreload.e=value2
    gun(gunid).action.reloadloop.s=value2 : gun(gunid).action.reloadloop.e=value2
    gun(gunid).action.endreload.s=value2 : gun(gunid).action.endreload.e=value2
   endif
   if field$="start reload" then gun(gunid).action.startreload.s=value1 : gun(gunid).action.startreload.e=value2
   if field$="reload loop" then gun(gunid).action.reloadloop.s=value1 : gun(gunid).action.reloadloop.e=value2
   if field$="end reload" then gun(gunid).action.endreload.s=value1 : gun(gunid).action.endreload.e=value2
   if field$="cock" then gun(gunid).action.cock.s=value1 : gun(gunid).action.cock.e=value2
   if field$="putaway" then gun(gunid).action.hide.s=value1 : gun(gunid).action.hide.e=value2
   if field$="keyframe ratio" then keyframeratio=value1
   `
   rem GUN SOUND FRAMES DATA
   tryfield$="soundframes"
   if field$=tryfield$ then gun(gunid).sound.soundframes=value1
   if gun(gunid).sound.soundframes>0
    for p=0 to gun(gunid).sound.soundframes
     tryfield$="sframe"+str$(p)
     if field$=tryfield$
      gunsounditem(gunid,p).keyframe=(value1*keyframeratio)
      `
      rem V109 - 020209 - array only goes to five (MP9 uses 6?)
      if value2>5 then value2=0
      gunsounditem(gunid,p).playsound=value2
      `
     endif
    next p
   endif
   `
  endif
 endif
next l
undim data$()
endif

rem If no COCK animation, fill with end of reload data
if gun(gunid).action.cock.e=0
 gun(gunid).action.cock.s=gun(gunid).action.endreload.e
 gun(gunid).action.cock.e=gun(gunid).action.endreload.e
endif

rem FPSCV104RC5 if no muzzle colour, go with default
if gun(gunid).settings.muzzlecolorr=0 and gun(gunid).settings.muzzlecolorg=0 and gun(gunid).settings.muzzlecolorb=0
 gun(gunid).settings.muzzlecolorr=255
 gun(gunid).settings.muzzlecolorg=255
 gun(gunid).settings.muzzlecolorb=0
endif

rem FPSCV104RC8 - can set the smoke speed
if gun(gunid).settings.smokespeed=0
 gun(gunid).settings.smokespeed=25
endif

rem FPSCV104RC9
if gun(gunid).settings.smokedecal$=""
 gun(gunid).settings.smokedecal$="smoke1"
endif

rem Find the decal specified
gun(gunid).decalid=0
if gun(gunid).decal$<>""
 decal$=gun(gunid).decal$ : gosub _decal_find
 if decalid<0
  decalid=0
 else
  decal(decalid).active=1
  gun(gunid).decalid=decalid
 endif
endif

rem Default gun range
if gun(gunid).settings.range=0 then gun(gunid).settings.range=1000

return

_gun_selectandorload:

rem Load gun if not selected
if gun(gunid).obj=0
 gosub _gun_load
endif

rem Associate gun with player
currentgunobj=gun(gunid).obj

rem Setup gun with muzzle flash image
if gun(gunid).settings.flashlimb<>-1
 texture object hudbankoffset+5,gun(gunid).settings.flashimg
 glue object to limb hudbankoffset+5,hudbankoffset+2,0
 position object hudbankoffset+5,gun(gunid).settings.muzzlex#,gun(gunid).settings.muzzley#,gun(gunid).settings.muzzlez#
 size#=gun(gunid).settings.muzzlesize# : if size#=0.0 then size#=100.0
 scale object hudbankoffset+5,size#,size#,size#
endif
if gun(gunid).settings.flashlimb2<>-1
 texture object hudbankoffset+32,gun(gunid).settings.flashimg
 glue object to limb hudbankoffset+32,hudbankoffset+2,0
 position object hudbankoffset+32,gun(gunid).settings.muzzlex#*-1,gun(gunid).settings.muzzley#,gun(gunid).settings.muzzlez#
 size#=gun(gunid).settings.muzzlesize# : if size#=0.0 then size#=100.0
 scale object hudbankoffset+32,size#,size#,size#
else
 scale object hudbankoffset+32,0,0,0
endif

rem Setup gun with brass models
if gun(gunid).settings.brasslimb<>-1
 for o=6 to 20
  obj=hudbankoffset+o
  if object exist(obj)=1 then delete object obj
  `x9 instance object obj,gun(gunid).settings.brassobjmaster
  clone object obj,gun(gunid).settings.brassobjmaster
  set object collision off obj
  disable object zdepth obj
  set object fov obj,45
  hide object obj
 next o
endif

rem Setup gun with smoke images
`x9if gun(gunid).settings.brasslimb<>-1
if gun(gunid).settings.smokelimb<>-1
 for o=21 to 30
  obj=hudbankoffset+o
  texture object obj,gun(gunid).settings.smokeimg
  hide object obj
 next o
endif

rem X10 provide crosshair image value to HUD global
hudcrosshair=gun(gunid).settings.crosshairimg

`x9rem Setup gun with crosshair
`obj=hudbankoffset+31
`timg=gun(gunid).settings.crosshairimg
`texture object obj,timg
`crosshairx=(screen width()-image width(timg))/2
`crosshairy=(screen height()-image height(timg))/2
`ts#=(100.0/64.0)*image width(timg)
`scale object obj,ts#,ts#,ts#
`show object obj

`rem Second-Handed Weapon Mode
`if gun(gunid).settings.seconduse=1
` currentgunsecondobj=gun(gunid).secondobj
` glue object to limb currentgunsecondobj,hudbankoffset+2,0
` if gun(gunid).settings.flashlimb<>-1
`  texture object hudbankoffset+32,gun(gunid).settings.flashimg
`  glue object to limb hudbankoffset+32,hudbankoffset+2,0
`  position object hudbankoffset+32,gun(gunid).settings.muzzlex#*-1.0,gun(gunid).settings.muzzley#,gun(gunid).settings.muzzlez#
`  size#=gun(gunid).settings.muzzlesize# : if size#=0.0 then size#=100.0
`  scale object hudbankoffset+32,size#,size#,size#
` endif
`else
` hide object hudbankoffset+32
`endif

return

_gun_load:

rem Load gun data
gosub _gun_loaddata

rem Load gun models
currentgunobj=loadgun("gamecore\guns\"+gun$+"\HUD.x")
gun(gunid).obj=currentgunobj

rem X10 - HUD object is for main scene ONLY
set object mask currentgunobj,%100000,%0,%0

rem FPSCV10X - ensure multi-textures in HUD are recorded for final build
nout$=findmaterialtexturesinmodelfile("gamecore\guns\"+gun$+"\HUD.x","gamecore\guns\"+gun$+"\")

rem Set the unique FOV aspect of the gun
set object fov currentgunobj,45

rem Perform scan to determine hotspot markers
flashlimb=-1 : brasslimb=-1 : smokelimb=-1 : handlimb=-1
flashlimb2=-1 : brasslimb2=-1 : smokelimb2=-1
perform checklist for object limbs currentgunobj
for c=1 to checklist quantity()
 name$=upper$(checklist string$(c))
 if name$="FIRESPOT" then flashlimb=c-1
 if name$="X3DS_FIRESPOT" then flashlimb=c-1
 if name$="FIRESPOT02" then flashlimb2=c-1
 if name$="BRASS" then brasslimb=c-1
 if name$="X3DS_BRASS" then brasslimb=c-1
 if name$="BRASS02" then brasslimb2=c-1
 if name$="SMOKE" then smokelimb=c-1
 if name$="X3DS_SMOKE" then smokelimb=c-1
 if name$="SMOKE02" then smokelimb2=c-1
 if name$="HAND" then handlimb=c-1
 if name$="X3DS_HAND" then handlimb=c-1
next c

rem Store limbs in limb-data
gun(gunid).settings.flashlimb=flashlimb
gun(gunid).settings.brasslimb=brasslimb
gun(gunid).settings.handlimb=handlimb
rem FPSCV104RC5 - new fields
gun(gunid).settings.smokelimb=smokelimb
gun(gunid).settings.flashlimb2=flashlimb2
gun(gunid).settings.brasslimb2=brasslimb2
gun(gunid).settings.smokelimb2=smokelimb2

rem Determine number of frames per keyframe
if keyframeratio>0
 ratio#=keyframeratio
else
 ratio#=1
endif

rem Adjust animation data based on actual number of keyframes
gun(gunid).action.show.s = gun(gunid).action.show.s * ratio#
gun(gunid).action.show.e = gun(gunid).action.show.e * ratio#
gun(gunid).action.idle.s = gun(gunid).action.idle.s * ratio#
gun(gunid).action.idle.e = gun(gunid).action.idle.e * ratio#
gun(gunid).action.move.s = gun(gunid).action.move.s * ratio#
gun(gunid).action.move.e = gun(gunid).action.move.e * ratio#
gun(gunid).action.start.s = gun(gunid).action.start.s * ratio#
gun(gunid).action.start.e = gun(gunid).action.start.e * ratio#
gun(gunid).action.automatic.s = gun(gunid).action.automatic.s * ratio#
gun(gunid).action.automatic.e = gun(gunid).action.automatic.e * ratio#
gun(gunid).action.finish.s = gun(gunid).action.finish.s * ratio#
gun(gunid).action.finish.e = gun(gunid).action.finish.e * ratio#
gun(gunid).action.startreload.s = gun(gunid).action.startreload.s * ratio#
gun(gunid).action.startreload.e = gun(gunid).action.startreload.e * ratio#
gun(gunid).action.reloadloop.s = gun(gunid).action.reloadloop.s * ratio#
gun(gunid).action.reloadloop.e = gun(gunid).action.reloadloop.e * ratio#
gun(gunid).action.endreload.s = gun(gunid).action.endreload.s * ratio#
gun(gunid).action.endreload.e = gun(gunid).action.endreload.e * ratio#
gun(gunid).action.cock.s = gun(gunid).action.cock.s * ratio#
gun(gunid).action.cock.e = gun(gunid).action.cock.e * ratio#
gun(gunid).action.hide.s = gun(gunid).action.hide.s * ratio#
gun(gunid).action.hide.e = gun(gunid).action.hide.e * ratio#

rem Load Effect
rem X10 new gun system shader
dirbefore$=get dir$() : set dir commoneffects$
tfile$="weapon.fx" : addfiletocollection(commoneffects$+tfile$)
tweaponeffectid=loadinternaleffectunique(tfile$,0)
tfile$="weaponhand.fx" : addfiletocollection(commoneffects$+tfile$)
tskineffectid=loadinternaleffectunique(tfile$,0)
set dir dirbefore$

if tweaponeffectid>0
 rem V109 - 140109 - switch technique at end of file scan if _N not found
 foundNtexture=0
 set object effect currentgunobj,tweaponeffectid
 perform checklist for object limbs currentgunobj
 for c=1 to checklist quantity()
  rem change texture of limb if DNRS available
  tlimbid=c-1 : texname$=lower$(limb texture name(currentgunobj,tlimbid))
  rem 190907 - if gun specifies a texture (ignore limb and apply texture to each limb - for guns like minigun with a lost texture name in the model)
  if gun(gunid).texd$<>"" then texname$=lower$(gun(gunid).texd$)
  if len(texname$)>0
   if right$(texname$,7)="_d2.dds" or right$(texname$,7)="_d2.tga"
    rem Replace D2 with shader set D+N+S/R
    texnamebase$=left$(texname$,len(texname$)-7)
    rem V109 - 140109 - check if N exists, and flag for later
    texname$=texnamebase$+"_N.dds" : img$="gamecore\guns\"+gun$+"\"+texname$
    if file exist(img$)=1 then foundNtexture=1
    texname$=texnamebase$+"_D.dds" : img$="gamecore\guns\"+gun$+"\"+texname$
    if file exist(img$)=1
     rem Apply bump mapping DNS
     realtexstage=0
     for texstage=0 to 2
      if texstage=0 then texname$=texnamebase$+"_D.dds"
      if texstage=1 then texname$=texnamebase$+"_N.dds"
      if texstage=2 then texname$=texnamebase$+"_S.dds"
      img$="gamecore\guns\"+gun$+"\"+texname$
      if file exist(img$)=0 and texstage=2
       rem X10 - 280807 - Try for R is S not available
       texname$=texnamebase$+"_R.dds"
       img$="gamecore\guns\"+gun$+"\"+texname$
      endif
      if file exist(img$)=1
       imgid=loadinternalimagecompressquality(img$,0,1)
       texture limb currentgunobj,tlimbid,realtexstage,imgid
       inc realtexstage
      endif
     next texstage
    endif
   endif
   rem V109 - 060209 - moved code below out of ELSE _D2 check as texture can be anything
   if foundNtexture=0
    rem D2 only, use blank textures
    `
    rem V109 - 060209 - also need to load and apply a 'specified' gun D2 texture
    tfile$=gun(gunid).texd$
    if len(tfile$)=0 then tfile$="gun_D2.tga"
    img$="gamecore\guns\"+gun$+"\"+tfile$
    imgD2id=loadinternalimagecompressquality(img$,0,1)
    if len(gun(gunid).texd$)>0 and left$(gun(gunid).texd$,1)<>" "
     texture object currentgunobj,0,imgD2id
    endif
    `
    rem V109 - 140109 - for guns that use Relief Mapping, we need special normal with
    rem 128,128,128 in the apha channel for the height information (seals the polygons)
    `img$="texturebank\common\defaultnormals.tga"
    img$="texturebank\common\defaultrelief.dds"
    imgid=loadinternalimagecompressquality(img$,0,1)
    texture limb currentgunobj,tlimbid,1,imgid
    img$="texturebank\common\defaultspecular.tga"
    imgid=loadinternalimagecompressquality(img$,0,1)
    texture limb currentgunobj,tlimbid,2,imgid
   endif
  endif
  rem change shader of limb if hand detected (requires bone animation on GPU)
  if left$(lower$(checklist string$(c)),4)="hand"
   set limb effect currentgunobj,tlimbid,tskineffectid
  endif
 next c
 rem V109 - 140109 - if NORMAL not found, use simpler weapon shader via technique
 if foundNtexture=0
  set effect technique tweaponeffectid,"DrawSimple"
  set effect technique tskineffectid,"DrawSimple"
 endif
endif

rem X10 V109 - 170309 - include extra gun files that may be present (and are needed for EXE)
dirbefore$=get dir$() : set dir "gamecore\guns\"+gun$+"\"
perform checklist for files
for tc=1 to checklist quantity()
 tttfile$=lower$(checklist string$(tc))
 if tttfile$<>"." and tttfile$<>".."
  if right$(tttfile$,4)=".dds" or right$(tttfile$,4)=".jpg"
   addfiletocollection("gamecore\guns\"+gun$+"\"+tttfile$)
  endif
 endif
next tc
set dir dirbefore$

remstart
img$="gamecore\guns\"+gun$+"\gun_D.dds" : imgDid=loadinternalimagecompressquality(img$,0,1)
img$="gamecore\guns\"+gun$+"\gun_N.dds" : imgNid=loadinternalimagecompressquality(img$,0,1)
img$="gamecore\guns\"+gun$+"\gun_R.dds" : imgRid=loadinternalimagecompressquality(img$,0,1)
texture object currentgunobj,0,imgDid
texture object currentgunobj,1,imgNid
texture object currentgunobj,2,imgRid
set object effect currentgunobj,tweaponeffectid
tlimbid=-1
perform checklist for object limbs currentgunobj
for c=1 to checklist quantity()
 if left$(lower$(checklist string$(c)),4)="hand" then tlimbid=c-1
next c
if tlimbid>=0
 img$="gamecore\guns\"+gun$+"\hand_D.dds" : imgDid=loadinternalimagecompressquality(img$,0,1)
 img$="gamecore\guns\"+gun$+"\hand_N.dds" : imgNid=loadinternalimagecompressquality(img$,0,1)
 img$="gamecore\guns\"+gun$+"\hand_S.dds" : imgSid=loadinternalimagecompressquality(img$,0,1)
 texture limb currentgunobj,tlimbid,0,imgDid
 texture limb currentgunobj,tlimbid,1,imgNid
 texture limb currentgunobj,tlimbid,2,imgSid
 set limb effect currentgunobj,tlimbid,tskineffectid
endif
remend

remstart 
X9 approach
`if guseeffectongunsstate=1 and gun(gunid).effect$<>""
` tfile$=gun(gunid).effect$
` debugfilename(tfile$,"effect for gun")
` teffectid=loadinternaleffect(tfile$)
`else
` teffectid=0
`endif

rem Setup gun model materiual properties
set object diffuse currentgunobj,rgb(255,255,255)
set object ambience currentgunobj,rgb(255,255,255)
set object specular currentgunobj,0
set object emissive currentgunobj,0

rem First Textures are PLATES
if teffectid>0
 `
 rem Load effect textures
 if gun(gunid).transparency>2
  img$="gamecore\guns\"+gun$+"\gun_D.tga" : imgDid=loadinternalimagecompressquality(img$,0,1)
  img$="gamecore\guns\"+gun$+"\gun_N.tga" : imgNid=loadinternalimagecompressquality(img$,0,1)
  img$="gamecore\guns\"+gun$+"\gun_R.tga" : imgRid=loadinternalimagecompressquality(img$,0,1)
 else
  img$="gamecore\guns\"+gun$+"\gun_D.tga" : imgDid=loadinternalimagecompress(img$,5)
  img$="gamecore\guns\"+gun$+"\gun_N.tga" : imgNid=loadinternalimage(img$)
  img$="gamecore\guns\"+gun$+"\gun_R.tga" : imgRid=loadinternalimage(img$)
 endif
 `
 rem Last Texture Image is CUBE
 img$="gamecore\guns\"+gun$+"\gun_cube.dds" : imgCUBEid=loadinternalimage(img$)
 if file exist(img$)=1 then load image img$,imgCUBEid,2
 `
 rem Bump Quality
 texture object currentgunobj,0,imgDid
 texture object currentgunobj,1,imgNid
 texture object currentgunobj,2,imgRid
 texture object currentgunobj,3,imgCUBEid
 `
 rem Apply effect to object
 gun(gunid).effectidused=teffectid
 set object effect currentgunobj,teffectid
 `
else
 `
 rem Basic Diffuse2 for Gun (and AmmoClip) - if specified in gunspec.txt
 tfile$=gun(gunid).texd$
 if len(tfile$)=0 then tfile$="gun_D2.tga"
 img$="gamecore\guns\"+gun$+"\"+tfile$
 if gun(gunid).transparency>2
  imgD2id=loadinternalimagecompressquality(img$,0,1)
 else
  imgD2id=loadinternalimagecompress(img$,5)
 endif
 if len(gun(gunid).texd$)>0 and left$(gun(gunid).texd$,1)<>" "
  texture object currentgunobj,imgD2id
 endif
 tfile$="ammo_D2.tga"
 img$="gamecore\guns\"+gun$+"\"+tfile$
 if gun(gunid).transparency>2
  imgD2id=loadinternalimagecompressquality(img$,0,1)
 else
  imgD2id=loadinternalimagecompress(img$,5)
 endif
 tfile$="scope_D2.tga"
 img$="gamecore\guns\"+gun$+"\"+tfile$
 if gun(gunid).transparency>2
  imgD2id=loadinternalimagecompressquality(img$,0,1)
 else
  imgD2id=loadinternalimagecompress(img$,5)
 endif
 rem FPSCV104RC10
 tfile$="hand_D2.tga"
 img$="gamecore\guns\"+gun$+"\"+tfile$
 if gun(gunid).transparency>2
  imgD2id=loadinternalimagecompressquality(img$,0,1)
 else
  imgD2id=loadinternalimagecompress(img$,5)
 endif
 tfile$="supressor_D2.tga"
 img$="gamecore\guns\"+gun$+"\"+tfile$
 if gun(gunid).transparency>2
  imgD2id=loadinternalimagecompressquality(img$,0,1)
 else
  imgD2id=loadinternalimagecompress(img$,5)
 endif
 `
endif
remend

rem load in scope if any
if gun(gunid).zoomscope$<>""
 img$="gamecore\guns\"+gun$+"\"+gun(gunid).zoomscope$
 gun(gunid).zoomscope=loadinternalimagecompress(img$,5)
 addfiletocollection(img$)
else
 gun(gunid).zoomscope=0
endif

rem Glue gun to HUD-Gun-Marker
glue object to limb currentgunobj,hudbankoffset+2,0

rem Setup gun for correct visuals (special transparency for after-shadow setting)
if gun(gunid).transparency=5
 rem X10 - 071007 - new transparency mode for PLASMA type weapons (CHUGSHOT)
 rem 100 wil cause all the weapons transparency to be used (but creates problems in MINIGUN where texture used to cap the end of a polygon tube)
 set alpha mapping on currentgunobj,100
else
 rem 0 will cause all the weapons transparency NOT to be used (but such things as plasma will be solid)
 rem 10 will allow 10 percent of the objects alpha data to come through
 set alpha mapping on currentgunobj,10
 if gun(gunid).transparency>2
  set object transparency currentgunobj,gun(gunid).transparency
 else
  set object transparency currentgunobj,2
 endif
endif
disable object zdepth currentgunobj

rem Setup gun for animation
loop object currentgunobj

rem Setup gun with muzzle flash image
num=gun(gunid).settings.muzzleflash : if num=0 then num=1
size#=gun(gunid).settings.muzzlesize# : if size#=0.0 then size#=100.0
muzzleflash$="gamecore\muzzleflash\flash"+str$(num)+".tga"
imgid=loadmuzzle(muzzleflash$)
gun(gunid).settings.flashimg=imgid

rem X10 new muzzle flash used primary by characters
muzzleflash$="gamecore\muzzleflash\mflash"+str$(num)+".tga"
imgid=loadinternalimagecompress(muzzleflash$,5)
if imgid=0
 rem X10 No MFLASH texture (must be an old model pack)
 muzzleflash$="gamecore\muzzleflash\mflash"+str$(1)+".tga"
 imgid=loadinternalimagecompress(muzzleflash$,5)
 gun(gunid).settings.newflashimg=imgid
else
 gun(gunid).settings.newflashimg=imgid
endif
`
rem Setup gun with brass models
num=gun(gunid).settings.brass : if num=0 then num=1
brass$="gamecore\brass\brass"+str$(num)+"\brass"+str$(num)+".x"
brassobj=loadbrass(brass$)
addfiletocollection("gamecore\brass\brass"+str$(num)+"\brass"+str$(num)+"_D2.dds")
gun(gunid).settings.brassobjmaster=brassobj

rem Setup gun with smoke images
num=gun(gunid).settings.smoke
if len(gun(gunid).settings.smokedecal$)>0
 smoke$="gamecore\decals\"+gun(gunid).settings.smokedecal$+"\decal.tga"
 imgid=loadsmoke(smoke$)
else
 if num=0 then num=1
 rem FPSCV04RC9 0- replace smoke1 usage with gunsmoke usage (better visual)
 if num=1
  smoke$="gamecore\decals\gunsmoke\decal.tga"
 else
  smoke$="gamecore\decals\smoke"+str$(num)+"\decal.tga"
 endif
 imgid=loadsmoke(smoke$)
endif
gun(gunid).settings.smokeimg=imgid

rem Setup gun with crosshair
crosshair$="gamecore\guns\"+gun$+"\crosshair.dds"
rem V109 - 090109 - changed to quality of 2, new mode for X10, to use color to make alpha (colorkey)
crosshairimage=loadinternalimagecompressquality(crosshair$,5,9) `090109 - used to be ,1)
gun(gunid).settings.crosshairimg=crosshairimage
gun(gunid).secondobj=0

rem Load gun sounds (and companions)
for p=1 to 5
 if gunsound(gunid,p).name$<>""
  rem main sound for player
  snd$="gamecore\guns\"+gun$+"\"+gunsound(gunid,p).name$
  timestampactivity(0,"Loading Sound:"+snd$)
  gunsound(gunid,p).soundid=loadinternalsound(snd$)
  rem FPSCV104RC4 - extra sound value checks in many places
  if gunsound(gunid,p).soundid>0
   if sound exist(gunsound(gunid,p).soundid)=0
    gunsound(gunid,p).soundid=0
   endif
  endif
  rem companion sounds for other weapon sound uses
  if p<=3
   gunsoundcompanion(gunid,p,0).soundid=loadinternalsoundcore(snd$,1)
   gunsoundcompanion(gunid,p,1).soundid=loadinternalsoundcore(snd$,1)
   gunsoundcompanion(gunid,p,2).soundid=loadinternalsoundcore(snd$,1)
  endif
 endif
next p

rem Load HUD image (ammo and weapon selected image)
img$="gamecore\guns\"+gun$+"\hud_icon.tga" : addfiletocollection(img$)
gun(gunid).hudimage=loadinternalimagecompressquality(img$,5,1)

rem Find and store flak index for later use
if gun(gunid).settings.flakname$<>""
 flak$=gun(gunid).settings.flakname$ : gosub _flak_findindex
 gun(gunid).settings.flakindex=tindex
endif

return

_gun_freeafterlevel:
 `
 rem Free the old gun
 autoloadgun=0 : gosub _gun_change
 `
return

_gun_scaninall:

rem Scan entire guns folder
gosub _gun_scaninall_ref

rem Load all guns
for gunid=1 to gunmax
 gun$=gun(gunid).name$ : gosub _gun_load
next gunid

return

_gun_scaninall_dataonly:
 for gunid=1 to gunmax
  gun$=gun(gunid).name$ : gosub _gun_loaddata
 next gunid
return

`
` NEW MUZZLE FLASH SUBROUTINES
`

_muzzle_createall:
 `
 rem create all muzzle flash resources
 for m=1 to newmuzzlemax
  mobj=newmuzzleobjstart+m
  if m=1
   load object "gamecore\muzzleflash\mflash.X",mobj
   addfiletocollection("gamecore\muzzleflash\mflash.X")
  else
   clone object mobj,newmuzzleobjstart+1
  endif
  rem textured when shoot the resource
  set object transparency mobj,2
  disable object zwrite mobj
  hide object mobj
  set object cull mobj,0
  set object light mobj,0
  set object rotation zyx mobj
  ghost object on mobj
 next m
 `
return

_muzzle_placeflash:
 `
 rem trigger a muzzle flash
 inc muzzlecycle
 if muzzlecycle>newmuzzlemax then muzzlecycle=1
 newmuzzle(muzzlecycle)=1
 mobj=newmuzzleobjstart+muzzlecycle
 texture object mobj,gun(muzzlegunid).settings.newflashimg
 position object mobj,muzzlex#,muzzley#,muzzlez#
 rotate object mobj,muzzlerx#,muzzlery#,muzzlerz#
 if gun(muzzlegunid).settings.muzzlelasertype=1
  rem laser type
  muzzlelaserdistance#=muzzlelaserdistance#/19.0
  scale object mobj,25,25,100*muzzlelaserdistance#
  move object mobj,-10 : rem move it out of gun
  `
  rem E passed in from entity shooting this laser
  rem point gun if they have acquired a target and shot is a laser
  x3#=muzzlex#-entityelement(e).actualtargetx
  y3#=muzzley#-entityelement(e).actualtargety
  z3#=muzzlez#-entityelement(e).actualtargetz
  point object mobj,muzzlex#+x3#,muzzley#+y3#,muzzlez#+z3#
  `  
 else
  rem blast type
  scale object mobj,(80+rnd(20))*muzzlescale#,(80+rnd(20))*muzzlescale#,(80+rnd(20))*muzzlescale#
  move object mobj,-2 : rem move it out of gun
 endif
 show object mobj
 `
return

_muzzle_control:
 `
 rem control all muzzle flashes
 for m=1 to newmuzzlemax
  if newmuzzle(m)>0
   fu#=(newmuzzle(m)-1)*0.25
   mobj=newmuzzleobjstart+m
   lock vertexdata for limb mobj,1
   rem head
   set vertexdata uv 0,fu#+0,0
   set vertexdata uv 1,fu#+0.25,0
   set vertexdata uv 2,fu#,0.25
   set vertexdata uv 3,fu#+0.25,0.25
   set vertexdata uv 4,fu#,0.25
   set vertexdata uv 5,fu#+0.25,0
   rem horiz plane diag
   set vertexdata uv 6,fu#,1
   set vertexdata uv 7,fu#,0.25
   set vertexdata uv 8,fu#+0.25,1
   set vertexdata uv 9,fu#+0.25,0.25
   set vertexdata uv 10,fu#+0.25,1
   set vertexdata uv 11,fu#,0.25
   rem vert plane diag
   set vertexdata uv 12,fu#,1
   set vertexdata uv 13,fu#,0.25
   set vertexdata uv 14,fu#+0.25,1
   set vertexdata uv 15,fu#+0.25,0.25
   set vertexdata uv 16,fu#+0.25,1
   set vertexdata uv 17,fu#,0.25
   unlock vertexdata
   newmuzzle(m)=newmuzzle(m)+1
   if newmuzzle(m)>4
    newmuzzle(m)=0
    hide object mobj
   endif
  endif
 next m
 `
return
