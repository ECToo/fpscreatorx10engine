rem
rem ENTITIES DATA (shared by X9 and X10)
rem

_entity_loaddata:

rem Blank entity desc
entityprofileheader(entid).desc$=""

rem Ensure entity profile still exists
tprofile$=left$(entdir$+ent$,len(entdir$+ent$)-4)+".bin"
tprofile$=turnfilenameuserlocal(tprofile$)
if isbinaryfileolderthantxtfile(tprofile$,entdir$+ent$)=1 then delete file tprofile$

rem if profile desc exists
if file exist(entdir$+ent$)=1 or file exist(tprofile$)=1

rem Export entity FPE file if flagged
if gexportassets=1
 tthumbbmpfile$=left$(entdir$+ent$,len(entdir$+ent$)-4)+".bmp"
 addfiletocollection(entdir$+ent$) : addfiletocollection(tthumbbmpfile$)
endif

rem X10 - 021107 - submit BIN file as relative (not absolute which filecollection ignores)
trelativeprofile$=right$(tprofile$,len(tprofile$)-len(myownrootdir$))
addfiletocollection(trelativeprofile$)

rem Check if binary version of entity profile exists (DELETE BIN AT MOMEMENT!)
if file exist(tprofile$)=0
 `
 rem Must be reset before parse
 entityprofile(entid).limbmax=0
 entityprofile(entid).animmax=0
 entityprofile(entid).headlimb=-1
 entityprofile(entid).firespotlimb=-1
 entityprofile(entid).physics=1
 entityprofile(entid).phyweight=100
 entityprofile(entid).phyfriction=0
 `
 rem X10 defaults for new fields
 entityprofile(entid).ex.alignment=1
 entityprofile(entid).ex.initmode=3
 entityprofile(entid).ex.seemode=1
 entityprofile(entid).ex.trigmode=1
 entityprofile(entid).ex.hurtmode=2
 entityprofile(entid).ex.hurtvalue=50
 entityprofile(entid).ex.canstrafe=1
 entityprofile(entid).ex.canduck=1
 entityprofile(entid).ex.canhear=1
 entityprofile(entid).ex.loadedweapon=0
 entityprofile(entid).ex.attackrange=150
 entityprofile(entid).ex.viewrange=500
 entityprofile(entid).ex.maxrange=600
 entityprofile(entid).ex.texturearray=1
 entityprofile(entid).ex.showhealthbar=1
 entityprofile(entid).ex.lungcapacity=500
 entityprofile(entid).ex.glassstyle=0
 entityprofile(entid).ex.score=-1
 entityprofile(entid).ex.showallyicon=1
 entityprofile(entid).ex.factor=1
 entityprofile(entid).ex.impactforce=25
 entityprofile(entid).ex.decaytime=10
 entityprofile(entid).ex.jumpheight=50
 entityprofile(entid).ex.autolodmed=0
 entityprofile(entid).ex.autolodlow=0
 entityprofile(entid).hardscalex=0
 entityprofile(entid).hardscaley=0
 entityprofile(entid).hardscalez=0
 entityprofile(entid).noragdoll=0
 for q=0 to 99 : entityanim(entid,q).speed=1 : next q 
 entityprofile(entid).characterinstancingmode=0
 `
 `X10 additions
 entityprofile(entid).objattachmentmaster=0
 `
 rem Load entity Data from file
 dim data$(400)
 load array entdir$+ent$,data$()
 for l=0 to 399
  line$=data$(l)
  if len(line$)>0
   if left$(line$,1)<>";"
    `
    rem take fieldname and value
    for c=0 to len(line$)
     if mid$(line$,c)="=" then mid=c : exit
    next c
    field$=lower$(removeedgespaces(left$(line$,mid-1)))
    value$=removeedgespaces(right$(line$,len(line$)-mid))
    `
    rem take value 1 and 2 from value
    for c=0 to len(value$)
     if mid$(value$,c)="," then mid=c : exit
    next c
    value1=val(removeedgespaces(left$(value$,mid-1)))
    value2$=removeedgespaces(right$(value$,len(value$)-mid))
    if len(value2$)>0 then value2=val(value2$) else value2=-1
    `
    rem entity header
    if field$="desc" then entityprofileheader(entid).desc$=value$
    `
    rem entity AI
    tryfield$="aiinit"
    if field$=tryfield$ then entityprofile(entid).aiinit$=value$
    tryfield$="aimain"
    if field$=tryfield$ then entityprofile(entid).aimain$=value$
    tryfield$="aidestroy"
    if field$=tryfield$ then entityprofile(entid).aidestroy$=value$
    tryfield$="aishoot"
    if field$=tryfield$ then entityprofile(entid).aishoot$=value$
    tryfield$="soundset"
    if field$=tryfield$ then entityprofile(entid).soundset$=value$
    tryfield$="soundset1"
    if field$=tryfield$ then entityprofile(entid).soundset1$=value$
    `
    rem entity DARKAI
    tryfield$="alignment"
    if field$=tryfield$ then entityprofile(entid).ex.alignment=value1
    tryfield$="initmode"
    if field$=tryfield$ then entityprofile(entid).ex.initmode=value1
    tryfield$="seemode"
    if field$=tryfield$ then entityprofile(entid).ex.seemode=value1
    tryfield$="trigmode"
    if field$=tryfield$ then entityprofile(entid).ex.trigmode=value1
    tryfield$="hurtmode"
    if field$=tryfield$ then entityprofile(entid).ex.hurtmode=value1
    tryfield$="hurtvalue"
    if field$=tryfield$ then entityprofile(entid).ex.hurtvalue=value1
    tryfield$="canstrafe"
    if field$=tryfield$ then entityprofile(entid).ex.canstrafe=value1
    tryfield$="canduck"
    if field$=tryfield$ then entityprofile(entid).ex.canduck=value1
    tryfield$="canhear"
    if field$=tryfield$ then entityprofile(entid).ex.canhear=value1
    `
    rem cone of sight
    tryfield$="coneheight"
    if field$=tryfield$ then entityprofile(entid).coneheight=value1
    tryfield$="coneangle"
    if field$=tryfield$ then entityprofile(entid).coneangle=value1
    tryfield$="attackrange"
    if field$=tryfield$ then entityprofile(entid).ex.attackrange=value1
    tryfield$="viewrange"
    if field$=tryfield$ then entityprofile(entid).ex.viewrange=value1
    tryfield$="maxrange"
    if field$=tryfield$ then entityprofile(entid).ex.maxrange=value1
    `
    rem entity AI related vars
    tryfield$="usekey"
    if field$=tryfield$ then entityprofile(entid).usekey$=value$
    tryfield$="ifused"
    if field$=tryfield$ then entityprofile(entid).ifused$=value$
    tryfield$="ifusednear"
    if field$=tryfield$ then entityprofile(entid).ifusednear$=value$
    `
    rem entity SPAWN
    tryfield$="spawnmax"
    if field$=tryfield$ then entityprofile(entid).spawnmax=value1
    tryfield$="spawndelay"
    if field$=tryfield$ then entityprofile(entid).spawndelay=value1
    tryfield$="spawnqty"
    if field$=tryfield$ then entityprofile(entid).spawnqty=value1
    `
    rem entity orientation
    tryfield$="model"
    if field$=tryfield$ then entityprofile(entid).model$=value$
    tryfield$="offx"
    if field$=tryfield$ then entityprofile(entid).offx=value1
    tryfield$="offy"
    if field$=tryfield$ then entityprofile(entid).offy=value1
    tryfield$="offz"
    if field$=tryfield$ then entityprofile(entid).offz=value1
    tryfield$="rotx"
    if field$=tryfield$ then entityprofile(entid).rotx=value1
    tryfield$="roty"
    if field$=tryfield$ then entityprofile(entid).roty=value1
    tryfield$="rotz"
    if field$=tryfield$ then entityprofile(entid).rotz=value1
    tryfield$="scale"
    if field$=tryfield$ then entityprofile(entid).scale=value1
    tryfield$="fixnewy"
    if field$=tryfield$ then entityprofile(entid).fixnewy=value1
    tryfield$="forwardfacing"
    if field$=tryfield$ then entityprofile(entid).forwardfacing=value1
    tryfield$="defaultheight"
    if field$=tryfield$ then entityprofile(entid).defaultheight=value1
    tryfield$="defaultstatic"
    if field$=tryfield$ then entityprofile(entid).defaultstatic=value1
    tryfield$="collisionmode"
    if field$=tryfield$ then entityprofile(entid).collisionmode=value1
    tryfield$="materialindex"
    if field$=tryfield$ then entityprofile(entid).materialindex=value1
    tryfield$="debrisshape"
    if field$=tryfield$ then entityprofile(entid).debrisshapeindex=value1
    `
    rem X10 - 171007 - new hard scale (for physical mesh resize to DBO)
    tryfield$="hardscalex"
    if field$=tryfield$ then entityprofile(entid).hardscalex=value1
    tryfield$="hardscaley"
    if field$=tryfield$ then entityprofile(entid).hardscaley=value1
    tryfield$="hardscalez"
    if field$=tryfield$ then entityprofile(entid).hardscalez=value1    
    rem X10 - 100309 - added NORAGDOLL to entity profile
    tryfield$="noragdoll"
    if field$=tryfield$ then entityprofile(entid).noragdoll=value1    
    `
    rem physics setup
    tryfield$="physics"
    if field$=tryfield$ then entityprofile(entid).physics=value1
    tryfield$="phyweight"
    if field$=tryfield$ then entityprofile(entid).phyweight=value1
    tryfield$="phyfriction"
    if field$=tryfield$ then entityprofile(entid).phyfriction=value1
    tryfield$="explodable"
    if field$=tryfield$ then entityprofile(entid).explodable=value1
    `
    rem visual info
    tryfield$="texturepath"
    if field$=tryfield$ then entityprofile(entid).texpath$=value$
    tryfield$="textured"
    if field$=tryfield$ then entityprofile(entid).texd$=value$
    tryfield$="texturealtd"
    if field$=tryfield$ then entityprofile(entid).texaltd$=value$
    tryfield$="effect"
    if field$=tryfield$ then entityprofile(entid).effect$=value$
    tryfield$="transparency"
    if field$=tryfield$ then entityprofile(entid).transparency=value1
    tryfield$="reducetexture"
    if field$=tryfield$ then entityprofile(entid).reducetexture=value1
    tryfield$="castshadow"
    if field$=tryfield$ then entityprofile(entid).castshadow=value1
    tryfield$="texturearray"
    if field$=tryfield$ then entityprofile(entid).ex.texturearray=value1
    tryfield$="glassstyle"
    if field$=tryfield$ then entityprofile(entid).ex.glassstyle=value1
    tryfield$="autolodmed"
    if field$=tryfield$ then entityprofile(entid).ex.autolodmed=value1
    tryfield$="autolodlow"
    if field$=tryfield$ then entityprofile(entid).ex.autolodlow=value1
    `
    rem entity identity details
    tryfield$="strength"
    if field$=tryfield$ then entityprofile(entid).strength=value1
    tryfield$="lives"
    if field$=tryfield$ then entityprofile(entid).lives=value1
    tryfield$="speed"
    if field$=tryfield$ then entityprofile(entid).speed=value1
    tryfield$="hurtfall"
    if field$=tryfield$ then entityprofile(entid).hurtfall=value1
    tryfield$="lungcapacity"
    if field$=tryfield$ then entityprofile(entid).ex.lungcapacity=value1
    `
    tryfield$="isimmobile"
    if field$=tryfield$ then entityprofile(entid).isimmobile=value1
    tryfield$="isobjective"
    if field$=tryfield$ then entityprofile(entid).isobjective=value1
    `
    tryfield$="ischaracter"
    if field$=tryfield$ then entityprofile(entid).ischaracter=value1
    tryfield$="cantakeweapon"
    if field$=tryfield$ then entityprofile(entid).cantakeweapon=value1
    tryfield$="isweapon"
    if field$=tryfield$ then entityprofile(entid).isweapon$=value$
    tryfield$="isammo"
    if field$=tryfield$ then entityprofile(entid).isammo=value1
    tryfield$="hasweapon"
    if field$=tryfield$ then entityprofile(entid).hasweapon$=value$
    tryfield$="ishealth"
    if field$=tryfield$ then entityprofile(entid).ishealth=value1
    tryfield$="isflak"
    if field$=tryfield$ then entityprofile(entid).isflak=value1
    tryfield$="loadedweapon"
    if field$=tryfield$ then entityprofile(entid).ex.loadedweapon=value1
    `
    rem marker extras
    tryfield$="ismarker"
    if field$=tryfield$ then entityprofile(entid).ismarker=value1
    tryfield$="markerindex"
    if field$=tryfield$ then entityprofile(entid).markerindex=value1
    `
    rem light extras
    tryfield$="lightcolor"
    if field$=tryfield$ then entityprofile(entid).light.color=value1
    tryfield$="lightrange"
    if field$=tryfield$ then entityprofile(entid).light.range=value1
    `
    rem trigger extras
    tryfield$="areax"
    if field$=tryfield$ then entityprofile(entid).trigger.areax1=value1 : entityprofile(entid).trigger.areax2=value2
    tryfield$="areay"
    if field$=tryfield$ then entityprofile(entid).trigger.areay1=value1 : entityprofile(entid).trigger.areay2=value2
    tryfield$="areaz"
    if field$=tryfield$ then entityprofile(entid).trigger.areaz1=value1 : entityprofile(entid).trigger.areaz2=value2
    `
    rem entity body part list
    tryfield$="limbmax"
    if field$=tryfield$ then entityprofile(entid).limbmax=value1
    if entityprofile(entid).limbmax>0
     for q=0 to entityprofile(entid).limbmax-1
      tryfield$="limb"+str$(q)
      if field$=tryfield$
       entitybodypart(entid,q)=value1
       if value1=1
        rem record head seperately too
        entityprofile(entid).headlimb=q
       endif
      endif
     next q
    endif
    `
    rem entity decal refs
    tryfield$="decalmax"
    if field$=tryfield$ then entityprofile(entid).decalmax=value1
    if entityprofile(entid).decalmax>0
     for q=0 to entityprofile(entid).decalmax-1
      tryfield$="decal"+str$(q)
      if field$=tryfield$ then entitydecal$(entid,q)=value$
     next q
    endif
    `
    rem entity animation sets
    tryfield$="animmax"
    if field$=tryfield$ then entityprofile(entid).animmax=value1
    if entityprofile(entid).animmax>0
     for q=0 to entityprofile(entid).animmax-1
      tryfield$="anim"+str$(q)
      if field$=tryfield$ then entityanim(entid,q).start=value1 : entityanim(entid,q).finish=value2
     next q
    endif
    `
    rem entity animation speed sets
    if entityprofile(entid).animmax>0
     for q=0 to entityprofile(entid).animmax-1
      tryfield$="animspeed"+str$(q)
      if field$=tryfield$
       entityanim(entid,q).speed=(value1+0.0)/100.0
      endif
     next q
    endif
    `
    rem more data
    tryfield$="quantity"
    if field$=tryfield$ then entityprofile(entid).quantity=value1
    tryfield$="score"
    if field$=tryfield$ then entityprofile(entid).ex.score=value1
    tryfield$="factor"
    if field$=tryfield$ then entityprofile(entid).ex.factor=value1
    tryfield$="impactforce"
    if field$=tryfield$ then entityprofile(entid).ex.impactforce=value1
    tryfield$="decaytime"
    if field$=tryfield$ then entityprofile(entid).ex.decaytime=value1
    `
   endif
  endif
 next l
 undim data$()
 `
 rem Localisation must change desc to local name
 if entityprofileheader(entid).desc$<>""
  if left$(entityprofileheader(entid).desc$,1)<>"%"
   tflocalfilename$="languagebank\"+language$+"\textfiles\library\"+entdir$+ent$
   tflocalfilename$=left$(tflocalfilename$,len(tflocalfilename$)-4)+".loc"
   if file exist(tflocalfilename$)=1
    dim tflocal$(1)
    load array tflocalfilename$,tflocal$()
    entityprofileheader(entid).desc$=tflocal$(0)
    undim tflocal$()
   endif
  endif
 endif
 `
 rem Translate entity references inside entity profile (token translations)
 if lower$(entityprofileheader(entid).desc$)="%key"
  entityprofileheader(entid).desc$=strarr$(472)
 endif
 if lower$(entityprofileheader(entid).desc$)="%light"
  entityprofileheader(entid).desc$=strarr$(473)
 endif
 if lower$(entityprofileheader(entid).desc$)="%remote door"
  entityprofileheader(entid).desc$=strarr$(474)
 endif
 if lower$(entityprofileheader(entid).desc$)="%teleporter in"
  entityprofileheader(entid).desc$=strarr$(615)
 endif
 if lower$(entityprofileheader(entid).desc$)="%teleporter out"
  entityprofileheader(entid).desc$=strarr$(616)
 endif
 if lower$(entityprofileheader(entid).desc$)="%lift"
  entityprofileheader(entid).desc$=strarr$(617)
 endif
 if lower$(entityprofile(entid).usekey$)="%key"
  entityprofile(entid).usekey$=strarr$(472)
 endif
 if lower$(entityprofile(entid).ifused$)="%light"
  entityprofile(entid).ifused$=strarr$(473)
 endif
 if lower$(entityprofile(entid).ifused$)="%remote door"
  entityprofile(entid).ifused$=strarr$(474)
 endif
 if lower$(entityprofile(entid).ifused$)="%teleporter in"
  entityprofile(entid).ifused$=strarr$(615)
 endif
 if lower$(entityprofile(entid).ifused$)="%teleporter out"
  entityprofile(entid).ifused$=strarr$(616)
 endif
 if lower$(entityprofile(entid).ifused$)="%lift"
  entityprofile(entid).ifused$=strarr$(617)
 endif
 `
 rem All profile defaults
 if entityprofile(entid).ismarker<>1
  if entityprofile(entid).lives<1 then entityprofile(entid).lives=1
 endif
 if entityprofile(entid).speed=0 then entityprofile(entid).speed=100
 if entityprofile(entid).hurtfall=0 then entityprofile(entid).hurtfall=100
 if entityprofile(entid).ischaracter=1
  if entityprofile(entid).quantity=0 then entityprofile(entid).quantity=1
 endif
 `
 rem LOD defaults
 if entityprofile(entid).ex.autolodmed=0 then entityprofile(entid).ex.autolodmed=400
 if entityprofile(entid).ex.autolodlow=0 then entityprofile(entid).ex.autolodlow=800
 `
 rem Physics Data Defaults
 if entityprofile(entid).ismarker=0
  rem default physics settings (weight and friction done during object load (we need the obj size!)
  entityprofile(entid).phyalways=0
  entityprofile(entid).phyforcedamage=100
  entityprofile(entid).rotatethrow=1
  entityprofile(entid).explodedamage=100
  entityprofile(entid).phyweight=0
  entityprofile(entid).phyfriction=0
  rem health packs have no physics by default for A compatibility
  if entityprofile(entid).ishealth<>0
   entityprofile(entid).physics=0
  endif
 else
  entityprofile(entid).physics=0
 endif
 `
 rem Score default for non markers
 if entityprofile(entid).ex.score=-1
  if entityprofile(entid).ismarker=0
   entityprofile(entid).ex.score=10
  else
   entityprofile(entid).ex.score=0
  endif
 endif
 `
 rem Spawn defaults
 entityprofile(entid).spawnatstart=1
 entityprofile(entid).spawndelayrandom=0
 entityprofile(entid).spawnqtyrandom=0
 entityprofile(entid).spawnvel=0
 entityprofile(entid).spawnvelrandom=0
 entityprofile(entid).spawnangle=90
 entityprofile(entid).spawnanglerandom=0
 entityprofile(entid).spawnlife=0
 if entityprofile(entid).spawnmax>0
  entityprofile(entid).spawnupto=entityprofile(entid).spawnmax
  entityprofile(entid).spawnafterdelay=1
  if entityprofile(entid).ischaracter=1
   entityprofile(entid).spawnwhendead=1
  else
   entityprofile(entid).spawnwhendead=0
  endif
 else
  entityprofile(entid).spawnupto=0
  entityprofile(entid).spawnafterdelay=0
  entityprofile(entid).spawnwhendead=0
 endif
 `
 rem If animation data insufficient, make up rest with basic null sets
 if entityprofile(entid).animmax>0
  if entityprofile(entid).animmax<100
   rem AI animation code relies on standard animation-set-numbers
   for q=entityprofile(entid).animmax to 99
    entityanim(entid,q).start=0
    entityanim(entid,q).finish=1
    entityanim(entid,q).speed=1
   next q
   entityprofile(entid).animmax=100
  endif
 endif
 `
 rem Save entity profile as binary
 dim tempe(0) as entityprofiletype
 open to write 1,tprofile$
 write string 1,entityprofileheader(entid).desc$
 tempe(0)=entityprofile(entid)
 if memblock exist(1)=1 then delete memblock 1
 tempe(0).aiinit$=free string()
 tempe(0).aimain$=free string()
 tempe(0).aidestroy$=free string()
 tempe(0).aishoot$=free string()
 tempe(0).soundset$=free string()
 tempe(0).soundset1$=free string()
 tempe(0).usekey$=free string()
 tempe(0).ifused$=free string()
 tempe(0).ifusednear$=free string()
 tempe(0).model$=free string()
 tempe(0).texpath$=free string()
 tempe(0).texd$=free string()
 tempe(0).texaltd$=free string()
 tempe(0).effect$=free string()
 tempe(0).isweapon$=free string()
 tempe(0).hasweapon$=free string()
 make memblock from array 1,tempe(0)
 write memblock 1,1
 write string 1,entityprofile(entid).aiinit$
 write string 1,entityprofile(entid).aimain$
 write string 1,entityprofile(entid).aidestroy$
 write string 1,entityprofile(entid).aishoot$
 write string 1,entityprofile(entid).soundset$
 write string 1,entityprofile(entid).soundset1$
 write string 1,entityprofile(entid).usekey$
 write string 1,entityprofile(entid).ifused$
 write string 1,entityprofile(entid).ifusednear$
 write string 1,entityprofile(entid).model$
 write string 1,entityprofile(entid).texpath$
 write string 1,entityprofile(entid).texd$
 write string 1,entityprofile(entid).texaltd$
 write string 1,entityprofile(entid).effect$
 write string 1,entityprofile(entid).isweapon$
 write string 1,entityprofile(entid).hasweapon$
 for q = 0 to entityprofile(entid).animmax-1
  write file 1,entityanim(entid,q).start
  write file 1,entityanim(entid,q).finish
  write file 1,entityanim(entid,q).speed
 next q
 for q = 0 to entityprofile(entid).decalmax-1
  write string 1,entitydecal$(entid,q)
 next q
 close file 1
 delete memblock 1
 undim tempe(0)
 `
else
 `
 rem load binary version of entity profile file
 dim tempe(0) as entityprofiletype
 open to read 1,tprofile$
 read string 1,tstr$ : entityprofileheader(entid).desc$=tstr$
 read memblock 1,1
 make array from memblock tempe(0),1
 entityprofile(entid)=tempe(0)
 read string 1,tstr$ : entityprofile(entid).aiinit$=tstr$
 read string 1,tstr$ : entityprofile(entid).aimain$=tstr$
 read string 1,tstr$ : entityprofile(entid).aidestroy$=tstr$
 read string 1,tstr$ : entityprofile(entid).aishoot$=tstr$
 read string 1,tstr$ : entityprofile(entid).soundset$=tstr$
 read string 1,tstr$ : entityprofile(entid).soundset1$=tstr$
 read string 1,tstr$ : entityprofile(entid).usekey$=tstr$
 read string 1,tstr$ : entityprofile(entid).ifused$=tstr$
 read string 1,tstr$ : entityprofile(entid).ifusednear$=tstr$
 read string 1,tstr$ : entityprofile(entid).model$=tstr$
 read string 1,tstr$ : entityprofile(entid).texpath$=tstr$
 read string 1,tstr$ : entityprofile(entid).texd$=tstr$
 read string 1,tstr$ : entityprofile(entid).texaltd$=tstr$
 read string 1,tstr$ : entityprofile(entid).effect$=tstr$
 read string 1,tstr$ : entityprofile(entid).isweapon$=tstr$
 read string 1,tstr$ : entityprofile(entid).hasweapon$=tstr$
 for q = 0 to entityprofile(entid).animmax-1
  read file 1,a : entityanim(entid,q).start=a
  read file 1,a : entityanim(entid,q).finish=a
  read file 1,a : entityanim(entid,q).speed=a
 next q
 for q = 0 to entityprofile(entid).decalmax-1
  read string 1,entitydecal$(entid,q)
 next q
 close file 1
 delete memblock 1
 undim tempe(0)
 `
endif

rem V110 - 130110 - if from legacy model pack, force NORAGDOLL and also
rem add DDS/JPG/TGA/PNG textures from the final folder to ensure entities
rem have textures when a final standalone executable is created
entnoslash$=ent$
if mid$(entnoslash$,1)="\" then entnoslash$=right$(entnoslash$,len(entnoslash$)-1)
if entityprofile(entid).ischaracter=1
 tlegacypackentity=0
 t$="model pack 4" : if lower$(left$(entnoslash$,len(t$)))=t$ then tlegacypackentity=1
 t$="cartoonfantasypack" : if lower$(left$(entnoslash$,len(t$)))=t$ then tlegacypackentity=1
 t$="dungeonpack" : if lower$(left$(entnoslash$,len(t$)))=t$ then tlegacypackentity=1
 t$="egyptian characters" : if lower$(left$(entnoslash$,len(t$)))=t$ then tlegacypackentity=1
 t$="fantasy characters" : if lower$(left$(entnoslash$,len(t$)))=t$ then tlegacypackentity=1
 t$="fantasypack" : if lower$(left$(entnoslash$,len(t$)))=t$ then tlegacypackentity=1
 t$="freaks and abominations" : if lower$(left$(entnoslash$,len(t$)))=t$ then tlegacypackentity=1
 t$="medievalpack" : if lower$(left$(entnoslash$,len(t$)))=t$ then tlegacypackentity=1
 t$="romanpack" : if lower$(left$(entnoslash$,len(t$)))=t$ then tlegacypackentity=1
 t$="tropical pack" : if lower$(left$(entnoslash$,len(t$)))=t$ then tlegacypackentity=1
 t$="vikingpack" : if lower$(left$(entnoslash$,len(t$)))=t$ then tlegacypackentity=1
 if tlegacypackentity=1
  rem No Ragdoll (X9 packs not designed with ragdoll bone structures in mind)
  entityprofile(entid).noragdoll=1
  rem Also scan final folder and scan for all textures that X9 packs used
  trememberolddir$=get dir$()
  if path exist(entdir$+getpath(ent$))=1
   set dir entdir$+getpath(ent$)
   perform checklist for files
   for c=1 to checklist quantity()
    tscannedfile$=lower$(checklist string$(c))
    if tscannedfile$<>"." and tscannedfile$<>".."
     tfileistexture=0
     if right$(tscannedfile$,4)=".dds" then tfileistexture=1
     if right$(tscannedfile$,4)=".jpg" then tfileistexture=1
     if right$(tscannedfile$,4)=".png" then tfileistexture=1
     if right$(tscannedfile$,4)=".tga" then tfileistexture=1
     if tfileistexture=1
      addfiletocollection(entdir$+getpath(ent$)+"\"+tscannedfile$)
     endif
    endif
   next c
   set dir trememberolddir$
  endif
 endif
endif

rem fileexistelse
else
 rem File not exist, provide debug information (only if file specified (old entities can be renamed and still hang around inside FPMs)
 if len(entdir$+ent$)>len("entitybank\")
  debugfilename(entdir$+ent$,tprofile$)
 endif
endif

return

_entity_saveelementsdata:

rem Uses elementfilename$
if elementsfilename$="" then elementsfilename$=myownrootdir$+"mapbank\testmap\map.ele"

rem Reduce list size if later elements blank
e=entityelementlist
while e>0
 if entityelement(e).maintype=0 then dec e else exit
endwhile
entityelementlist=e

rem Save entity element list
dw as DWORD
versionnumbersave=200
if file exist(elementsfilename$)=1 then delete file elementsfilename$
open to write 1,elementsfilename$
 write file 1,versionnumbersave
 write file 1,entityelementlist
 if entityelementlist>0
  for e=1 to entityelementlist
   if versionnumbersave>=101
    rem Version 1.01 - EA
    a=entityelement(e).maintype : write file 1,a
    a=entityelement(e).bankindex : write file 1,a
    a=entityelement(e).staticflag : write file 1,a
    a#=entityelement(e).x : write float 1,a#
    a#=entityelement(e).y : write float 1,a#
    a#=entityelement(e).z : write float 1,a#
    a#=entityelement(e).rx : write float 1,a#
    a#=entityelement(e).ry : write float 1,a#
    a#=entityelement(e).rz : write float 1,a#
    a$=entityelement(e).eleprof.name$ : write string 1,a$
    a$=entityelement(e).eleprof.aiinit$ : write string 1,a$
    a$=entityelement(e).eleprof.aimain$ : write string 1,a$
    a$=entityelement(e).eleprof.aidestroy$ : write string 1,a$
    a=entityelement(e).eleprof.isobjective : write file 1,a
    a$=entityelement(e).eleprof.usekey$ : write string 1,a$
    a$=entityelement(e).eleprof.ifused$ : write string 1,a$
    a$=entityelement(e).eleprof.ifusednear$ : write string 1,a$
    a=entityelement(e).eleprof.uniqueelement : write file 1,a
    a$=entityelement(e).eleprof.texd$ : write string 1,a$
    a$=entityelement(e).eleprof.texaltd$ : write string 1,a$
    a$=entityelement(e).eleprof.effect$ : write string 1,a$
    a=entityelement(e).eleprof.transparency : write file 1,a
    a=entityelement(e).editorfixed : write file 1,a
    a$=entityelement(e).eleprof.soundset$ : write string 1,a$
    a$=entityelement(e).eleprof.soundset1$ : write string 1,a$
    a=entityelement(e).eleprof.spawnmax : write file 1,a
    a=entityelement(e).eleprof.spawndelay : write file 1,a
    a=entityelement(e).eleprof.spawnqty : write file 1,a
    a=entityelement(e).eleprof.hurtfall : write file 1,a
    a=entityelement(e).eleprof.castshadow : write file 1,a
    a=entityelement(e).eleprof.reducetexture : write file 1,a
    a=entityelement(e).eleprof.speed : write file 1,a
    a$=entityelement(e).eleprof.aishoot$ : write string 1,a$
    a$=entityelement(e).eleprof.hasweapon$ : write string 1,a$
    a=entityelement(e).eleprof.lives : write file 1,a
    a=entityelement(e).spawn.max : write file 1,a
    a=entityelement(e).spawn.delay : write file 1,a
    a=entityelement(e).spawn.qty : write file 1,a
    a#=entityelement(e).eleprof.scale : write float 1,a#
    a#=entityelement(e).eleprof.coneheight : write float 1,a#
    a#=entityelement(e).eleprof.coneangle : write float 1,a#
    a=entityelement(e).eleprof.strength : write file 1,a
    a=entityelement(e).eleprof.isimmobile : write file 1,a
    a=entityelement(e).eleprof.cantakeweapon : write file 1,a
    a=entityelement(e).eleprof.quantity : write file 1,a
    a=entityelement(e).eleprof.markerindex : write file 1,a
    dw=entityelement(e).eleprof.light.color : dw=(dw<<8)>>8 : a=dw : write file 1,a
    a=entityelement(e).eleprof.light.range : write file 1,a
    a=entityelement(e).eleprof.trigger.areax1 : write file 1,a
    a=entityelement(e).eleprof.trigger.areay1 : write file 1,a
    a=entityelement(e).eleprof.trigger.areaz1 : write file 1,a
    a=entityelement(e).eleprof.trigger.areax2 : write file 1,a
    a=entityelement(e).eleprof.trigger.areay2 : write file 1,a
    a=entityelement(e).eleprof.trigger.areaz2 : write file 1,a
    a$=entityelement(e).eleprof.basedecal$ : write string 1,a$
   endif
   if versionnumbersave>=102
    a=entityelement(e).eleprof.rateoffire : write file 1,a
    a=entityelement(e).eleprof.damage : write file 1,a
    a=entityelement(e).eleprof.accuracy : write file 1,a
    a=entityelement(e).eleprof.reloadqty : write file 1,a
    a=entityelement(e).eleprof.fireiterations : write file 1,a
    a=entityelement(e).eleprof.lifespan : write file 1,a
    a#=entityelement(e).eleprof.throwspeed : write float 1,a#
    a#=entityelement(e).eleprof.throwangle : write float 1,a#
    a=entityelement(e).eleprof.bounceqty : write file 1,a
    a=entityelement(e).eleprof.explodeonhit : write file 1,a
    a=entityelement(e).eleprof.weaponisammo : write file 1,a
    a=entityelement(e).eleprof.spawnupto : write file 1,a
    a=entityelement(e).eleprof.spawnafterdelay : write file 1,a
    a=entityelement(e).eleprof.spawnwhendead : write file 1,a
    a=entityelement(e).eleprof.spare1 : write file 1,a
    a=entityelement(e).eleprof.spare1 : write file 1,a
    a=entityelement(e).eleprof.spare1 : write file 1,a
    a=entityelement(e).eleprof.spare1 : write file 1,a
    a=entityelement(e).eleprof.spare1 : write file 1,a
    a=entityelement(e).eleprof.spare1 : write file 1,a
   endif
   if versionnumbersave>=103
    rem V1 first draft - physics
    a=entityelement(e).eleprof.physics : write file 1,a
    a=entityelement(e).eleprof.phyweight : write file 1,a
    a=entityelement(e).eleprof.phyfriction : write file 1,a
    a=entityelement(e).eleprof.phyforcedamage : write file 1,a
    a=entityelement(e).eleprof.rotatethrow : write file 1,a
    a=entityelement(e).eleprof.explodable : write file 1,a
    a=entityelement(e).eleprof.explodedamage : write file 1,a
    a=entityelement(e).eleprof.uniquetimer : write file 1,a
    a=entityelement(e).eleprof.phydw2 : write file 1,a
   endif
   if versionnumbersave>=104
    rem Addition of new physics field for BETA4
    a=entityelement(e).eleprof.phyalways : write file 1,a
   endif
   if versionnumbersave>=105
    rem Addition of new spawn fields for BETA8
    a=entityelement(e).eleprof.spawndelayrandom : write file 1,a
    a=entityelement(e).eleprof.spawnqtyrandom : write file 1,a
    a=entityelement(e).eleprof.spawnvel : write file 1,a
    a=entityelement(e).eleprof.spawnvelrandom : write file 1,a
    a=entityelement(e).eleprof.spawnangle : write file 1,a
    a=entityelement(e).eleprof.spawnanglerandom : write file 1,a
   endif
   if versionnumbersave>=106
    rem Addition of new fields for BETA10
    a=entityelement(e).eleprof.spawnatstart : write file 1,a
    a=entityelement(e).eleprof.spawnlife : write file 1,a
   endif
   if versionnumbersave>=107
    rem FPSCV104RC8 - forgot to save infinilight index (dynamic lights in final build never worked)
    a=entityelement(e).eleprof.light.index : write file 1,a
   endif
   if versionnumbersave>=199
    rem X10 0.9.0 BETA
    a=entityelement(e).eleprof.ex.alignment : write file 1,a
    a=entityelement(e).eleprof.ex.initmode : write file 1,a
    a=entityelement(e).eleprof.ex.seemode : write file 1,a
    a=entityelement(e).eleprof.ex.trigmode : write file 1,a
    a=entityelement(e).eleprof.ex.hurtmode : write file 1,a
    a=entityelement(e).eleprof.ex.hurtvalue : write file 1,a
    a=entityelement(e).eleprof.ex.canstrafe : write file 1,a
    a=entityelement(e).eleprof.ex.canduck : write file 1,a
    a=entityelement(e).eleprof.ex.canhear : write file 1,a
    a=entityelement(e).eleprof.ex.loadedweapon : write file 1,a
    a=entityelement(e).eleprof.ex.attackrange : write file 1,a
    a=entityelement(e).eleprof.ex.viewrange : write file 1,a
    a=entityelement(e).eleprof.ex.maxrange : write file 1,a
    a=entityelement(e).eleprof.ex.texturearray : write file 1,a
    a=entityelement(e).eleprof.ex.showhealthbar : write file 1,a
    a=entityelement(e).eleprof.ex.lungcapacity : write file 1,a
    a=entityelement(e).eleprof.ex.glassstyle : write file 1,a
   endif
   if versionnumbersave>=200
    rem X10 BETA 190707
    a=entityelement(e).eleprof.ex.score : write file 1,a
    a=entityelement(e).eleprof.ex.showallyicon : write file 1,a
    a=entityelement(e).eleprof.ex.factor : write file 1,a
    a=entityelement(e).eleprof.ex.impactforce : write file 1,a
    a=entityelement(e).eleprof.ex.decaytime : write file 1,a
    a=entityelement(e).eleprof.ex.jumpheight : write file 1,a    
   endif
  next e
 endif
close file 1

return

_entity_deleteelementsdata:

rem Free any old elements
gosub _entity_deleteelements

rem Clear counter for new load
entityelementlist=0
entityelementmax=0

return

_entity_loadelementsdata:

rem Free any old elements
gosub _entity_deleteelementsdata

rem Uses elementfilename$
if elementsfilename$="" then elementsfilename$=myownrootdir$+"mapbank\testmap\map.ele"

rem load entity element list
dw as DWORD
versionnumbersupported=200
if file exist(elementsfilename$)=1
 `
 open to read 1,elementsfilename$
  read file 1,versionnumberload
  if versionnumberload<100
   rem Pre-version data - development only
   entityelementlist=versionnumberload
   versionnumberload=100
  else
   read file 1,entityelementlist
  endif
  if versionnumberload<=versionnumbersupported
   if entityelementlist>0
    undim entityelement()
    undim entitydebug$()
    entityelementmax=entityelementlist
    dim entityelement(entityelementmax) as entitytype
    dim entitydebug$(entityelementmax)
    dim entityelementwhichslot(entityelementmax)
    dim entityelementusingode(entityelementmax)
    dim entityelementwhichobj(entityelementmax)
    dim entityelementtexarrayindex(entityelementmax)
    dim entityelementusingrefraction(entityelementmax)
    dim lastentityraycast(entityelementmax)
    dim lastentityraycast2#(entityelementmax)  
    dim lastentityshadowlength#(entityelementmax)
    for e=1 to entityelementlist
     `
     rem actual file data
     if versionnumberload>=101
      rem Version 1.01
      read file 1,a : entityelement(e).maintype=a
      read file 1,a : entityelement(e).bankindex=a
      read file 1,a : entityelement(e).staticflag=a
      read float 1,a# : entityelement(e).x=a#
      read float 1,a# : entityelement(e).y=a#
      read float 1,a# : entityelement(e).z=a#
      read float 1,a# : entityelement(e).rx=a#
      read float 1,a# : entityelement(e).ry=a#
      read float 1,a# : entityelement(e).rz=a#
      read string 1,a$ : entityelement(e).eleprof.name$=a$
      read string 1,a$ : entityelement(e).eleprof.aiinit$=a$
      read string 1,a$ : entityelement(e).eleprof.aimain$=a$
      read string 1,a$ : entityelement(e).eleprof.aidestroy$=a$
      read file 1,a : entityelement(e).eleprof.isobjective=a
      read string 1,a$ : entityelement(e).eleprof.usekey$=a$
      read string 1,a$ : entityelement(e).eleprof.ifused$=a$
      read string 1,a$ : entityelement(e).eleprof.ifusednear$=a$
      read file 1,a : entityelement(e).eleprof.uniqueelement=a
      read string 1,a$ : entityelement(e).eleprof.texd$=a$
      read string 1,a$ : entityelement(e).eleprof.texaltd$=a$
      read string 1,a$ : entityelement(e).eleprof.effect$=a$
      read file 1,a : entityelement(e).eleprof.transparency=a
      read file 1,a : entityelement(e).editorfixed=a
      read string 1,a$ : entityelement(e).eleprof.soundset$=a$
      read string 1,a$ : entityelement(e).eleprof.soundset1$=a$
      read file 1,a : entityelement(e).eleprof.spawnmax=a
      read file 1,a : entityelement(e).eleprof.spawndelay=a
      read file 1,a : entityelement(e).eleprof.spawnqty=a
      read file 1,a : entityelement(e).eleprof.hurtfall=a
      read file 1,a : entityelement(e).eleprof.castshadow=a
      read file 1,a : entityelement(e).eleprof.reducetexture=a
      read file 1,a : entityelement(e).eleprof.speed=a
      read string 1,a$ : entityelement(e).eleprof.aishoot$=a$
      read string 1,a$ : entityelement(e).eleprof.hasweapon$=a$
      read file 1,a : entityelement(e).eleprof.lives=a
      read file 1,a : entityelement(e).spawn.max=a
      read file 1,a : entityelement(e).spawn.delay=a
      read file 1,a : entityelement(e).spawn.qty=a
      read float 1,a# : entityelement(e).eleprof.scale=a#
      read float 1,a# : entityelement(e).eleprof.coneheight=a#
      read float 1,a# : entityelement(e).eleprof.coneangle=a#
      read file 1,a : entityelement(e).eleprof.strength=a
      read file 1,a : entityelement(e).eleprof.isimmobile=a
      read file 1,a : entityelement(e).eleprof.cantakeweapon=a
      read file 1,a : entityelement(e).eleprof.quantity=a
      read file 1,a : entityelement(e).eleprof.markerindex=a
      read file 1,a : dw=a : dw=dw+0xFF000000 : entityelement(e).eleprof.light.color=dw
      read file 1,a : entityelement(e).eleprof.light.range=a
      read file 1,a : entityelement(e).eleprof.trigger.areax1=a
      read file 1,a : entityelement(e).eleprof.trigger.areay1=a
      read file 1,a : entityelement(e).eleprof.trigger.areaz1=a
      read file 1,a : entityelement(e).eleprof.trigger.areax2=a
      read file 1,a : entityelement(e).eleprof.trigger.areay2=a
      read file 1,a : entityelement(e).eleprof.trigger.areaz2=a
      read string 1,a$ : entityelement(e).eleprof.basedecal$=a$
     endif
     if versionnumberload>=102
      rem Version 1.02
      read file 1,a : entityelement(e).eleprof.rateoffire=a
      read file 1,a : entityelement(e).eleprof.damage=a
      read file 1,a : entityelement(e).eleprof.accuracy=a
      read file 1,a : entityelement(e).eleprof.reloadqty=a
      read file 1,a : entityelement(e).eleprof.fireiterations=a
      read file 1,a : entityelement(e).eleprof.lifespan=a
      read float 1,a# : entityelement(e).eleprof.throwspeed=a#
      read float 1,a# : entityelement(e).eleprof.throwangle=a#
      read file 1,a : entityelement(e).eleprof.bounceqty=a
      read file 1,a : entityelement(e).eleprof.explodeonhit=a
      read file 1,a : entityelement(e).eleprof.weaponisammo=a
      read file 1,a : entityelement(e).eleprof.spawnupto=a
      read file 1,a : entityelement(e).eleprof.spawnafterdelay=a
      read file 1,a : entityelement(e).eleprof.spawnwhendead=a
      read file 1,a : entityelement(e).eleprof.spare1=a
      read file 1,a : entityelement(e).eleprof.spare1=a
      read file 1,a : entityelement(e).eleprof.spare1=a
      read file 1,a : entityelement(e).eleprof.spare1=a
      read file 1,a : entityelement(e).eleprof.spare1=a
      read file 1,a : entityelement(e).eleprof.spare1=a
     endif
     if versionnumberload>=103
      rem Version 1.03 - V1 draft physics
      read file 1,a : entityelement(e).eleprof.physics=a
      read file 1,a : entityelement(e).eleprof.phyweight=a
      read file 1,a : entityelement(e).eleprof.phyfriction=a
      read file 1,a : entityelement(e).eleprof.phyforcedamage=a
      read file 1,a : entityelement(e).eleprof.rotatethrow=a
      read file 1,a : entityelement(e).eleprof.explodable=a
      read file 1,a : entityelement(e).eleprof.explodedamage=a
      read file 1,a : entityelement(e).eleprof.uniquetimer=a
      read file 1,a : entityelement(e).eleprof.phydw2=a
     endif
     if versionnumberload>=104
      rem Version 1.04 - BETA4 extra field
      read file 1,a : entityelement(e).eleprof.phyalways=a
     endif
     if versionnumberload>=105
      rem Version 1.05 - BETA8 extra fields
      read file 1,a : entityelement(e).eleprof.spawndelayrandom=a
      read file 1,a : entityelement(e).eleprof.spawnqtyrandom=a
      read file 1,a : entityelement(e).eleprof.spawnvel=a
      read file 1,a : entityelement(e).eleprof.spawnvelrandom=a
      read file 1,a : entityelement(e).eleprof.spawnangle=a
      read file 1,a : entityelement(e).eleprof.spawnanglerandom=a
     endif
     if versionnumberload>=106
      rem Version 1.06 - BETA10 extra fields
      read file 1,a : entityelement(e).eleprof.spawnatstart=a
      read file 1,a : entityelement(e).eleprof.spawnlife=a
     endif
     if versionnumberload>=107
      rem FPSCV104RC8 - forgot to save infinilight index (dynamic lights in final build never worked)
      read file 1,a : entityelement(e).eleprof.light.index=a
     endif
     if versionnumberload>=199
      rem X10 BETA
      read file 1,a : entityelement(e).eleprof.ex.alignment=a
      read file 1,a : entityelement(e).eleprof.ex.initmode=a
      read file 1,a : entityelement(e).eleprof.ex.seemode=a
      read file 1,a : entityelement(e).eleprof.ex.trigmode=a
      read file 1,a : entityelement(e).eleprof.ex.hurtmode=a
      read file 1,a : entityelement(e).eleprof.ex.hurtvalue=a
      read file 1,a : entityelement(e).eleprof.ex.canstrafe=a
      read file 1,a : entityelement(e).eleprof.ex.canduck=a
      read file 1,a : entityelement(e).eleprof.ex.canhear=a
      read file 1,a : entityelement(e).eleprof.ex.loadedweapon=a
      read file 1,a : entityelement(e).eleprof.ex.attackrange=a
      read file 1,a : entityelement(e).eleprof.ex.viewrange=a
      read file 1,a : entityelement(e).eleprof.ex.maxrange=a
      read file 1,a : entityelement(e).eleprof.ex.texturearray=a
      read file 1,a : entityelement(e).eleprof.ex.showhealthbar=a
      read file 1,a : entityelement(e).eleprof.ex.lungcapacity=a
      read file 1,a : entityelement(e).eleprof.ex.glassstyle=a
     endif
     if versionnumberload>=200
      rem X10 BETA 190707
      read file 1,a : entityelement(e).eleprof.ex.score=a
      read file 1,a : entityelement(e).eleprof.ex.showallyicon=a
      read file 1,a : entityelement(e).eleprof.ex.factor=a
      read file 1,a : entityelement(e).eleprof.ex.impactforce=a
      read file 1,a : entityelement(e).eleprof.ex.decaytime=a
      read file 1,a : entityelement(e).eleprof.ex.jumpheight=a
     endif
     `
     rem fill in the blanks if load older version
     ttentid=entityelement(e).bankindex
     if versionnumberload<103
      rem Version 1.03 - V1 draft physics (-1 means calculate at entobj-loadtime)
      entityelement(e).eleprof.physics=entityprofile(ttentid).physics
      entityelement(e).eleprof.phyweight=entityprofile(ttentid).phyweight
      entityelement(e).eleprof.phyfriction=entityprofile(ttentid).phyfriction
      entityelement(e).eleprof.phyforcedamage=entityprofile(ttentid).phyforcedamage
      entityelement(e).eleprof.rotatethrow=entityprofile(ttentid).rotatethrow
      entityelement(e).eleprof.explodable=entityprofile(ttentid).explodable
      entityelement(e).eleprof.uniquetimer=0
      entityelement(e).eleprof.phydw2=0
     endif
     if versionnumberload<104
      rem Version 1.04 - BETA4 extra field
      entityelement(e).eleprof.phyalways=entityprofile(ttentid).phyalways
     endif
     if versionnumberload<105
      rem Version 1.05 - BETA8
      entityelement(e).eleprof.spawndelayrandom=entityprofile(ttentid).spawndelayrandom
      entityelement(e).eleprof.spawnqtyrandom=entityprofile(ttentid).spawnqtyrandom
      entityelement(e).eleprof.spawnvel=entityprofile(ttentid).spawnvel
      entityelement(e).eleprof.spawnvelrandom=entityprofile(ttentid).spawnvelrandom
      entityelement(e).eleprof.spawnangle=entityprofile(ttentid).spawnangle
      entityelement(e).eleprof.spawnanglerandom=entityprofile(ttentid).spawnanglerandom
     endif
     if versionnumberload<106
      rem Version 1.06 - BETA10
      entityelement(e).eleprof.spawnatstart=entityprofile(ttentid).spawnatstart
      entityelement(e).eleprof.spawnlife=entityprofile(ttentid).spawnlife
     endif
     if versionnumberload<199
      rem X10 - BETA
      entityelement(e).eleprof.ex=entityprofile(ttentid).ex
     endif
     if versionnumberload<200
      rem X10 - RELEASE
     endif
     `
    next e
   endif
  else
   debugstring(strarr$(101),"")
  endif
 close file 1
 `
 rem 310707 - this code moved into here as without entitiy data, the code is wrong!
 rem and erase any elements that DO NOT have a valid profile (file moved/deleted)
 for e=1 to entityelementlist
  entid=entityelement(e).bankindex
  if entid>0
   if entid<array count(entitybank$())
    if len(entitybank$(entid))=0
     entityelement(e).bankindex=0
    endif
   endif
  endif
 next e
 `
 rem X10 set uber instance mode if entity re-used more than X times
 for entid=1 to entidmaster
  entityprofile(entid).characterinstancingmode=0
  for e=1 to entityelementlist
   tentid=entityelement(e).bankindex
   if entid=tentid
    entityprofile(entid).characterinstancingmode=entityprofile(entid).characterinstancingmode+1
   endif
  next e  
  if entityprofile(entid).characterinstancingmode>10
   rem we are going to use GPU instancing, keep clones
   entityprofile(entid).characterinstancingmode=1
  else
   rem we are NOT going to use instancing, use regular clone code
   entityprofile(entid).characterinstancingmode=0
   rem 250707 - and delete parent slot clones as we dont need them now (and it will save GPU space)
   if entityprofile(entid).slotcloneobj>0
    for o=0 to entityprofileslotclonequantity-1
     tscobj=entityprofile(entid).slotcloneobj+o
     delete object tscobj
    next o
    entityprofile(entid).slotcloneobj=0
   endif
  endif
 next e
 `
 rem X10 - 240907 - if loading pre-X10 level, change character main AI for DarkAI use
 if versionnumberload<versionnumbersupported
  for e=1 to entityelementlist
   entid=entityelement(e).bankindex
   if entid>0
    if entityprofile(entid).ischaracter=1
     entityelement(e).eleprof.aiinit$="appear1.fpi"
     entityelement(e).eleprof.aimain$="people\darkai.fpi"
     entityelement(e).eleprof.aidestroy$="people\darkdestroy.fpi"
    endif
   endif
  next e
 endif
 `
endif

return

_entity_fillelementfromprofile:
 `
 rem Name
 entityelement(e).eleprof.name$=entityprofileheader(entid).desc$
 `
 rem AI values
 entityelement(e).eleprof.aiinit$=entityprofile(entid).aiinit$
 entityelement(e).eleprof.aimain$=entityprofile(entid).aimain$
 entityelement(e).eleprof.aidestroy$=entityprofile(entid).aidestroy$
 entityelement(e).eleprof.aishoot$=entityprofile(entid).aishoot$
 `
 rem AI use vars
 entityelement(e).eleprof.usekey$=entityprofile(entid).usekey$
 entityelement(e).eleprof.ifused$=entityprofile(entid).ifused$
 entityelement(e).eleprof.ifusednear$=entityprofile(entid).ifusednear$
 `
 rem Spawn
 entityelement(e).eleprof.spawnatstart=entityprofile(entid).spawnatstart
 entityelement(e).eleprof.spawnmax=entityprofile(entid).spawnmax
 entityelement(e).eleprof.spawndelay=entityprofile(entid).spawndelay
 entityelement(e).eleprof.spawnqty=entityprofile(entid).spawnqty
 entityelement(e).eleprof.spawnupto=entityprofile(entid).spawnupto
 entityelement(e).eleprof.spawnafterdelay=entityprofile(entid).spawnafterdelay
 entityelement(e).eleprof.spawnwhendead=entityprofile(entid).spawnwhendead
 entityelement(e).eleprof.spawndelayrandom=entityprofile(entid).spawndelayrandom
 entityelement(e).eleprof.spawnqtyrandom=entityprofile(entid).spawnqtyrandom
 entityelement(e).eleprof.spawnvel=entityprofile(entid).spawnvel
 entityelement(e).eleprof.spawnvelrandom=entityprofile(entid).spawnvelrandom
 entityelement(e).eleprof.spawnangle=entityprofile(entid).spawnangle
 entityelement(e).eleprof.spawnanglerandom=entityprofile(entid).spawnanglerandom
 entityelement(e).eleprof.spawnlife=entityprofile(entid).spawnlife
 `
 rem Scale, Cone
 entityelement(e).eleprof.scale=entityprofile(entid).scale
 entityelement(e).eleprof.coneheight=entityprofile(entid).coneheight
 entityelement(e).eleprof.coneangle=entityprofile(entid).coneangle
 `
 rem Textre and Effect Data (zero to begin with
 entityelement(e).eleprof.uniqueelement=0
 entityelement(e).eleprof.texd$=entityprofile(entid).texd$
 entityelement(e).eleprof.texaltd$=entityprofile(entid).texaltd$
 entityelement(e).eleprof.effect$=entityprofile(entid).effect$
 entityelement(e).eleprof.transparency=entityprofile(entid).transparency
 entityelement(e).eleprof.castshadow=entityprofile(entid).castshadow
 entityelement(e).eleprof.reducetexture=entityprofile(entid).reducetexture
 `
 rem Strength and Quantity
 entityelement(e).eleprof.strength=entityprofile(entid).strength
 entityelement(e).eleprof.lives=entityprofile(entid).lives
 entityelement(e).eleprof.isimmobile=entityprofile(entid).isimmobile
 entityelement(e).eleprof.cantakeweapon=entityprofile(entid).cantakeweapon
 entityelement(e).eleprof.hasweapon$=entityprofile(entid).hasweapon$
 entityelement(e).eleprof.quantity=entityprofile(entid).quantity
 entityelement(e).eleprof.isobjective=entityprofile(entid).isobjective
 entityelement(e).eleprof.speed=entityprofile(entid).speed
 entityelement(e).eleprof.hurtfall=entityprofile(entid).hurtfall
 `
 rem Decal and Soundset Name
 entityelement(e).eleprof.basedecal$=entitydecal$(entid,0)
 entityelement(e).eleprof.soundset$=entityprofile(entid).soundset$
 entityelement(e).eleprof.soundset1$=entityprofile(entid).soundset1$
 `
 rem Marker Data
 entityelement(e).eleprof.markerindex=entityprofile(entid).markerindex
 entityelement(e).eleprof.light=entityprofile(entid).light
 entityelement(e).eleprof.trigger=entityprofile(entid).trigger
 `
 rem Copy over EXTRAS data (from X10)
 entityelement(e).eleprof.ex=entityprofile(entid).ex
 `
 rem Data Extracted From GUN and FLAK
 tgunid$=entityprofile(entid).isweapon$
 gosub _entity_getgunidandflakid
 entityelement(e).eleprof.rateoffire=85
 entityelement(e).eleprof.weaponisammo=0
 if tgunid>0
  entityelement(e).eleprof.accuracy=gun(tgunid).settings.accuracy
  entityelement(e).eleprof.reloadqty=gun(tgunid).settings.reloadqty
  entityelement(e).eleprof.fireiterations=gun(tgunid).settings.iterate
  entityelement(e).eleprof.ex.impactforce=gun(tgunid).settings.impactforce
  if tflakid=0
   entityelement(e).eleprof.damage=gun(tgunid).settings.damage
  else
   entityelement(e).eleprof.damage=flak(tflakid).profile.damage
   entityelement(e).eleprof.lifespan=flak(tflakid).profile.lifespan
   entityelement(e).eleprof.throwspeed=flak(tflakid).profile.zinc
   entityelement(e).eleprof.throwangle=flak(tflakid).profile.yinc
   entityelement(e).eleprof.bounceqty=flak(tflakid).profile.bounceonhit
   entityelement(e).eleprof.explodeonhit=flak(tflakid).profile.explodeonhit
   entityelement(e).eleprof.weaponisammo=tflakid
  endif
 endif
 `
 rem Physics Data
 entityelement(e).eleprof.physics=entityprofile(entid).physics
 entityelement(e).eleprof.phyalways=entityprofile(entid).phyalways
 entityelement(e).eleprof.phyweight=entityprofile(entid).phyweight
 entityelement(e).eleprof.phyfriction=entityprofile(entid).phyfriction
 entityelement(e).eleprof.phyforcedamage=entityprofile(entid).phyforcedamage
 entityelement(e).eleprof.rotatethrow=entityprofile(entid).rotatethrow
 entityelement(e).eleprof.explodable=entityprofile(entid).explodable
 entityelement(e).eleprof.explodedamage=entityprofile(entid).explodedamage
 `
 rem Copy over found data and or load it
 configureobj=0 : gosub _entity_configueelementforuse
 `
return

_entity_fillgrideleproffromprofile:
 `
 rem Name
 grideleprof.name$=entityprofileheader(entid).desc$
 `
 rem AI values
 grideleprof.aiinit$=entityprofile(entid).aiinit$
 grideleprof.aimain$=entityprofile(entid).aimain$
 grideleprof.aidestroy$=entityprofile(entid).aidestroy$
 grideleprof.aishoot$=entityprofile(entid).aishoot$
 `
 rem AI use vars
 grideleprof.usekey$=entityprofile(entid).usekey$
 grideleprof.ifused$=entityprofile(entid).ifused$
 grideleprof.ifusednear$=entityprofile(entid).ifusednear$
 `
 rem Spawn
 grideleprof.spawnatstart=entityprofile(entid).spawnatstart
 grideleprof.spawnmax=entityprofile(entid).spawnmax
 grideleprof.spawndelay=entityprofile(entid).spawndelay
 grideleprof.spawnqty=entityprofile(entid).spawnqty
 grideleprof.spawnupto=entityprofile(entid).spawnupto
 grideleprof.spawnafterdelay=entityprofile(entid).spawnafterdelay
 grideleprof.spawnwhendead=entityprofile(entid).spawnwhendead
 grideleprof.spawndelayrandom=entityprofile(entid).spawndelayrandom
 grideleprof.spawnqtyrandom=entityprofile(entid).spawnqtyrandom
 grideleprof.spawnvel=entityprofile(entid).spawnvel
 grideleprof.spawnvelrandom=entityprofile(entid).spawnvelrandom
 grideleprof.spawnangle=entityprofile(entid).spawnangle
 grideleprof.spawnanglerandom=entityprofile(entid).spawnanglerandom
 grideleprof.spawnlife=entityprofile(entid).spawnlife
 `
 rem Scale, Cone
 grideleprof.scale=entityprofile(entid).scale
 grideleprof.coneheight=entityprofile(entid).coneheight
 grideleprof.coneangle=entityprofile(entid).coneangle
 `
 rem Textre and Effect Data
 grideleprof.uniqueelement=0
 grideleprof.texd$=entityprofile(entid).texd$
 grideleprof.texaltd$=entityprofile(entid).texaltd$
 grideleprof.effect$=entityprofile(entid).effect$
 grideleprof.transparency=entityprofile(entid).transparency
 grideleprof.castshadow=entityprofile(entid).castshadow
 grideleprof.reducetexture=entityprofile(entid).reducetexture
 `
 rem Strength and Quantity
 grideleprof.strength=entityprofile(entid).strength
 grideleprof.lives=entityprofile(entid).lives
 grideleprof.isimmobile=entityprofile(entid).isimmobile
 grideleprof.cantakeweapon=entityprofile(entid).cantakeweapon
 grideleprof.hasweapon$=entityprofile(entid).hasweapon$
 grideleprof.quantity=entityprofile(entid).quantity
 grideleprof.isobjective=entityprofile(entid).isobjective
 grideleprof.hurtfall=entityprofile(entid).hurtfall
 grideleprof.speed=entityprofile(entid).speed
 `
 rem Decal and Sound Name
 grideleprof.basedecal$=entitydecal$(entid,0)
 grideleprof.soundset$=entityprofile(entid).soundset$
 grideleprof.soundset1$=entityprofile(entid).soundset1$
 `
 rem Marker Data
 grideleprof.markerindex=entityprofile(entid).markerindex
 grideleprof.light=entityprofile(entid).light
 grideleprof.trigger=entityprofile(entid).trigger
 `
 rem Copy over EXTRAS data (from X10)
 grideleprof.ex=entityprofile(entid).ex
 `
 rem Data Extracted From GUN and FLAK
 tgunid$=entityprofile(entid).isweapon$
 gosub _entity_getgunidandflakid
 grideleprof.rateoffire=85
 grideleprof.weaponisammo=0
 if tgunid>0
  grideleprof.accuracy=gun(tgunid).settings.accuracy
  grideleprof.reloadqty=gun(tgunid).settings.reloadqty
  grideleprof.fireiterations=gun(tgunid).settings.iterate
  grideleprof.ex.impactforce=gun(tgunid).settings.impactforce  
  if tflakid=0
   grideleprof.damage=gun(tgunid).settings.damage
  else
   grideleprof.damage=flak(tflakid).profile.damage
   grideleprof.lifespan=flak(tflakid).profile.lifespan
   grideleprof.throwspeed=flak(tflakid).profile.zinc
   grideleprof.throwangle=flak(tflakid).profile.yinc
   grideleprof.bounceqty=flak(tflakid).profile.bounceonhit
   grideleprof.explodeonhit=flak(tflakid).profile.explodeonhit
   grideleprof.weaponisammo=tflakid
  endif
 endif
 `
 rem Physics Data
 grideleprof.physics=entityprofile(entid).physics
 grideleprof.phyalways=entityprofile(entid).phyalways
 grideleprof.phyweight=entityprofile(entid).phyweight
 grideleprof.phyfriction=entityprofile(entid).phyfriction
 grideleprof.phyforcedamage=entityprofile(entid).phyforcedamage
 grideleprof.rotatethrow=entityprofile(entid).rotatethrow
 grideleprof.explodable=entityprofile(entid).explodable
 grideleprof.explodedamage=entityprofile(entid).explodedamage
 `
return
