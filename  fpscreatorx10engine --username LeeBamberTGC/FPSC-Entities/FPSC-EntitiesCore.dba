rem
rem ENTITY
rem

_entity_validatearraysize:
 `
 rem ensure enough space in entity profile arrays
 if entidmaster+32>entidmastermax
  entidmastermax=entidmaster+32
  dim entitybodypart(entidmastermax,100) as integer
  dim entityanim(entidmastermax,animmax) as entityanimtype
  dim entityprofileheader(entidmastermax) as entityprofileheadertype
  dim entityprofile(entidmastermax) as entityprofiletype
  dim entitydecal$(entidmastermax,100) as string
  dim entitydecal(entidmastermax,100) as integer
  entitybankmax=entidmastermax
  dim entitybank$(entitybankmax)
 endif
 `
return

_entity_savebank:

rem FPSCV104RC6 - scan entire entityelement, delete all entitybank entries not used
if entidmaster>0
 dim entitybankused(entidmaster)
 for tttentid=1 to entidmaster
  entitybankused(tttentid)=0
 next tttentid
 for ttte=1 to entityelementlist
  tttentid=entityelement(ttte).bankindex
  if tttentid>0
   entitybankused(tttentid)=1
  endif
 next ttte
 for tttentid=1 to entidmaster
  if entitybankused(tttentid)=0
   rem remove entity entry if not used when save FPM
   entitybank$(tttentid)=""
  endif
 next tttentid
 rem shuffle to remove empty entries
 for tttentid=1 to entidmaster
  rem not used to record where entities have been moved to
  entitybankused(tttentid)=0
 next tttentid
 treadentid=1 : tlargest=0
 for tttentid=1 to entidmaster
  if treadentid<=entidmaster
   while entitybank$(treadentid)=""
    inc treadentid : if treadentid>entidmaster then exit
   endwhile
   if treadentid<=entidmaster
    entitybank$(tttentid)=entitybank$(treadentid)
    entityprofileheader(tttentid)=entityprofileheader(treadentid)
    entityprofile(tttentid)=entityprofile(treadentid)
    for tt=0 to 100 : entitybodypart(tttentid,tt)=entitybodypart(treadentid,tt) : next tt
    for tt=0 to animmax : entityanim(tttentid,tt)=entityanim(treadentid,tt) : next tt
    for tt=0 to 100 : entitydecal$(tttentid,tt)=entitydecal$(treadentid,tt) : next tt
    for tt=0 to 100 : entitydecal(tttentid,tt)=entitydecal(treadentid,tt) : next tt
    entitybankused(treadentid)=tttentid
    tlargest=tttentid
   else
    entitybank$(tttentid)=""
   endif
  else
   entitybank$(tttentid)=""
  endif
  inc treadentid
 next tttentid
 rem new list size
 if entidmaster<>tlargest
  entidmaster=tlargest
  entityorsegmententrieschanged=1
 endif
 rem update bank index numbers in entityelements
 for ttte=1 to entityelementlist
  tttentid=entityelement(ttte).bankindex
  if tttentid>0
   rem new entity entry place index
   entityelement(ttte).bankindex=entitybankused(tttentid)
  endif
 next ttte
 undim entitybankused()
endif

rem Save segment bank
if file exist(myownrootdir$+"mapbank\testmap\map.ent")=1 then delete file myownrootdir$+"mapbank\testmap\map.ent"
open to write 1,myownrootdir$+"mapbank\testmap\map.ent"
 write file 1,entidmaster
 if entidmaster>0
  for entid=1 to entidmaster
   write string 1,entitybank$(entid)
  next entid
 endif
close file 1

return

_entity_deletebank:

rem Destroy old entities
if entidmastermax>0
 rem V104RC6 changed from entidmaster
 for entid=1 to entidmastermax
  entobj=entitybankoffset+entid
  if object exist(entobj)=1 then delete object entobj
  entitybank$(entid)=""
 next entid
endif

rem Destroy profile data
undim entityprofile()
dim entityprofile(100) as entityprofiletype
entidmastermax=100
entidmaster=0

return

_entity_loadbank:

rem If ent file exists
filename$=levelmapptah$+"map.ent"
if file exist(filename$)=1
 `
 rem Destroy old entities
 gosub _entity_deletebank
 `
 rem Load entity bank
 open to read 1,levelmapptah$+"map.ent"
  read file 1,entidmaster
  if entidmaster>0
   gosub _entity_validatearraysize
   for entid=1 to entidmaster
    read string 1,entitybank$(entid)
   next entid
  endif
 close file 1
 `
 rem Load in all entity objects and data
 gosub _entity_loadentitiesnow
 `
rem No file
endif

return

_entity_loadentitiesnow:

rem Load images in support of entityprofles (for shadow blob and order icons for entities)
loadinternalimageexcompress("gamecore\decals\blob\blob.dds",attachmenticonimagestart+0,5)
loadinternalimageexcompress("gamecore\decals\teamfollow\decal.dds",attachmenticonimagestart+1,5)
loadinternalimageexcompress("gamecore\decals\teamgo\decal.dds",attachmenticonimagestart+2,5)
loadinternalimageexcompress("gamecore\decals\teamhold\decal.dds",attachmenticonimagestart+3,5)   
loadinternalimageexcompress("gamecore\decals\healthbar\healthbarbackground.png",attachmenticonimagestart+4,5)   
loadinternalimageexcompress("gamecore\decals\healthbar\healthbar.png",attachmenticonimagestart+5,5)   

rem Load glass normals for refraction patterns
dim glasstexarrslot(10)
for twindowglasstype=1 to 10
 ttexdir$="gamecore\glasstypes\x10glass"+str$(twindowglasstype)+"_N.dds"
 glasstexarrslot(twindowglasstype)=loadinternalimagecompressquality(ttexdir$,0,-1)
next twindowglasstype

rem Load entities specified by bank
entdir$="entitybank\"
if entidmaster>0
 for entid=1 to entidmaster
  ent$=entitybank$(entid)
  entpath$=getpath(ent$)
  gosub _entity_load
  if desc$=""
   rem where entities have been lost, delete from list
   entitybank$(entid)=""
  endif
 next entid
endif

rem X10 also load in global effect shader for ragdoll skinning (cannot use parent-slot shader)
if gskinningforagdolleffect=0
 gskinningforagdolleffect=loadinternaleffectunique("effectbank\skinning\skinning.fx",1)
endif
rem X10 global effect for all carried weapons (instance and non-instance)
if gsimpleinstancevweapeffect=0
 gsimpleinstancevweapeffect=loadinternaleffectunique("effectbank\simple\simple.fx",1)
endif
if gsimplevweapeffect=0
 gsimplevweapeffect=loadinternaleffectunique("effectbank\simple\simple.fx",1)
endif

return

_entity_updatebank:

rem If ent file exists
filename$=levelmapptah$+"map.ent"
if file exist(filename$)=1

rem Clear non-present entries
for entid=entidmaster+1 to entitybankmax
 entitybank$(entid)=""
next entid

rem Update entity bank
open to read 2,filename$
 read file 2,tvalmax
 if tvalmax>0
  for tvalindex=1 to tvalmax
   read string 2,tent$
   addentityfile$=tent$
   gosub _entity_adduniqueentity
  next tvalindex
 endif
close file 2

rem No file
endif

return

_entity_adduniqueentity:

rem Ensure 'entitybank\' is not part of entity filename
entdir$="entitybank\"
if lower$(left$(addentityfile$,11))="entitybank\"
 addentityfile$=right$(addentityfile$,len(addentityfile$)-11)
endif

rem Check if entity already loaded in
talreadyloaded=0
for t=1 to entidmaster
 if entitybank$(t)=addentityfile$ then talreadyloaded=1 : entid=t
next t
if talreadyloaded=0
 `
 rem Allocate one more entity item in array
 if entidmaster>entitybankmax-4
  dim tempentitybank$(entitybankmax)
  for t=0 to entitybankmax : tempentitybank$(t)=entitybank$(t) : next t
  inc entitybankmax
  undim entitybank$(0)
  dim entitybank$(entitybankmax)
  for t=0 to entitybankmax-1 : entitybank$(t)=tempentitybank$(t) : next t
 endif
 `
 rem Add entity to bank
 inc entidmaster : gosub _entity_validatearraysize
 entitybank$(entidmaster)=addentityfile$
 `
 rem Load extra entity
 entid=entidmaster
 ent$=entitybank$(entid)
 entpath$=getpath(ent$)
 gosub _entity_load
 `
endif

return

_entity_loadextra:

rem load if entity is unique (unloaded - uses addentityfile$)
gosub _entity_adduniqueentity

rem Allocate one more into entity element array too
if entityelementlist>entityelementmax-4
 dim tempentityelement(entityelementmax) as entitytype
 for t=0 to entityelementmax : tempentityelement(t)=entityelement(t) : next t
 undim entityelement()
 undim entitydebug$(0)
 inc entityelementmax
 dim entityelement(entityelementmax) as entitytype
 dim entitydebug$(entityelementmax)
 dim entityelementwhichslot(entityelementmax)
 dim entityelementusingode(entityelementmax)
 dim entityelementwhichobj(entityelementmax)
 dim entityelementtexarrayindex(entityelementmax)
 dim entityelementusingrefraction(entityelementmax)
 dim lastentityraycast(entityelementmax)
 dim lastentityraycast2#(entityelementmax)  
 dim lastentityshadowlength#(entityelementmax)
 for t=0 to entityelementmax-1 : entityelement(t)=tempentityelement(t) : next t
endif

rem Ensure we subtract the offset used by the entity(which would be part of the seg-info)
addentityx=addentityx-entityprofile(entid).offx
addentityz=addentityz-entityprofile(entid).offz
addentityy=addentityy-entityprofile(entid).offy

rem Add reference to entity as element
gosub _entity_addelement

return

_entity_addelement:
 `
 rem find spare
 for e=1 to entityelementlist
  if entityelement(e).bankindex=0 then exit
 next e
 if e>entityelementlist
  rem add new
  inc entityelementlist
  if entityelementlist>entityelementmax
   entityelementmax=entityelementlist
   dim entityelement(entityelementmax) as entitytype
   dim entitydebug$(entityelementmax)
   dim entityelementwhichslot(entityelementmax)
   dim entityelementusingode(entityelementmax)
   dim entityelementwhichobj(entityelementmax)   
   dim entityelementtexarrayindex(entityelementmax)
   dim entityelementusingrefraction(entityelementmax)
   dim lastentityraycast(entityelementmax)
   dim lastentityraycast2#(entityelementmax)  
   dim lastentityshadowlength#(entityelementmax)
  endif
  e=entityelementlist
 endif
 `
 rem create element entry data
 gosub _entity_fillelementfromprofile
 entityelement(e).editorfixed=0
 entityelement(e).maintype=1
 entityelement(e).bankindex=entid
 entityelement(e).x=addentityx+entityprofile(entid).offx
 entityelement(e).y=addentityy+entityprofile(entid).offy
 entityelement(e).z=addentityz+entityprofile(entid).offz
 entityelement(e).rx=addentityrx+entityprofile(entid).rotx
 entityelement(e).ry=addentityry+entityprofile(entid).roty
 entityelement(e).rz=addentityrz+entityprofile(entid).rotz
 `
return

_entity_loadtexturesandeffect:

rem If entity object not exist, reset var
if entobj>0
 if object exist(entobj)=0 then entobj=0
endif

rem Only characters need a higher quality texture, rest use divide standard settings
tfullorhalfdivide=0
if segobjusedformapeditor=0
 if entityprofile(entid).ischaracter=1
  tfullorhalfdivide=2
 else
  if entityprofile(entid).reducetexture<>0
   if entityprofile(entid).reducetexture=-1
    tfullorhalfdivide=1
   else
    tfullorhalfdivide=2
   endif
  endif
 endif
endif
`
rem Apply TEXTURE to entity object
tcanceltheeffect=0
tuseeffecttexture=0
tfile$=entityprofile(entid).texd$
tfilealt$=entityprofile(entid).texaltd$
if tfile$<>""
 `
 rem optional texture path for getting at any texture (gamecore gun textures, etc)
 if entityprofile(entid).texpath$<>""
  texdir$=entityprofile(entid).texpath$+tfile$
  texaltdir$=entityprofile(entid).texpath$+tfilealt$
 else
  texdir$=entdir$+entpath$+tfile$
  texaltdir$=entdir$+entpath$+tfilealt$
 endif
 if entityprofile(entid).transparency=0
  texuseid=loadinternaltextureex(texdir$,1,tfullorhalfdivide)
 else
  texuseid=loadinternaltextureex(texdir$,5,tfullorhalfdivide)
 endif
 if texuseid=0
  rem if not local texture, look in texture bank
  texdir$=entityprofile(entid).texd$
  texaltdir$=entityprofile(entid).texaltd$
 endif
 `
 rem X10 new texture system
 usetexturearrayforentity=0
 if entityprofile(entid).transparency=0
  texid=loadinternalimagecompressquality(texdir$,1,tfullorhalfdivide)
 else
  texid=loadinternalimagecompressquality(texdir$,5,tfullorhalfdivide)
 endif
 entityprofile(entid).texdid=texid
 if entobj>0
  ttexturenameD2orD=5 : rem X10 texture arrays can only be _1_D.TGA (not D2)
  ttexdir$=left$(texdir$,len(texdir$)-8)+"_1_N.dds"
  if file exist(ttexdir$)=1
   rem Texture Array pre-loads all five alternatives in a new texture-array-resource
   entityprofile(entid).texdid=1
   usetexturearrayforentity=2
  else
   ttexturenameD2orD=6
   ttexdir$=left$(texdir$,len(texdir$)-5)+"N.dds"
   if file exist(ttexdir$)=1
    rem ogre_D.TGA
    ttexturenameD2orD=5
   else
    ttexdir$=left$(texdir$,len(texdir$)-6)+"N.dds"
    if file exist(ttexdir$)=1
     rem ogre_D2.TGA
     ttexturenameD2orD=6
    else
     ttexdir$=left$(texdir$,len(texdir$)-7)+"N.dds"
     if file exist(ttexdir$)=1
      rem ai_1_D.TGA (but ai_N.TGA normal)
      ttexturenameD2orD=7
     else
      ttexdir$=left$(texdir$,len(texdir$)-8)+"N.dds"
      if file exist(ttexdir$)=1
       rem ai_1_D2.TGA (but ai_N.TGA normal)
       ttexturenameD2orD=8
      else
       rem X10 - 221007 - custom texture can be located in MYDOC folder
       rem so we need also to check for _N and _S next to a MYDOC based texture
       rem (for example assets\newtex_N and newtex_S) DDS BMP and JPG supported
       storetexdir$=texdir$
       texdir$=myownrootdir$+"\"+texdir$
       ttexdir$=left$(texdir$,len(texdir$)-5)+"N.dds"
       if file exist(ttexdir$)=1
        ttexturenameD2orD=5
       else
        ttexdir$=left$(texdir$,len(texdir$)-5)+"N.bmp"
        if file exist(ttexdir$)=1
         ttexturenameD2orD=5
        else
         ttexdir$=left$(texdir$,len(texdir$)-5)+"N.jpg"
         if file exist(ttexdir$)=1
          ttexturenameD2orD=5
         else
          rem X10 - 251007 - if not found in MYDOC, must restore original texdir or switches mess up
          texdir$=storetexdir$
         endif
        endif
       endif
      endif    
     endif    
    endif
   endif
  endif
  rem use N+S, just plane D?
  ttexdir$=left$(texdir$,len(texdir$)-ttexturenameD2orD)+"N.dds"
  if file exist(ttexdir$)=1
   rem using N and S textures for entity
   rem Base texture
   texture object entobj,0,texid
   rem texture array or not
   if usetexturearrayforentity=2
    rem texture arrays for all three D N and S
    entityprofile(entid).tex1id=0
    entityprofile(entid).tex2id=0
   else
    rem X10 - 121007 - static entities require D D S N layout of texture
    if configureobj<>0 : rem flag set in universe construction
     rem light map takes zero, 1-diffuse/alpha, 2-specular/illum, 3-normal/height
     ttexdir$=left$(texdir$,len(texdir$)-ttexturenameD2orD)+"D.dds"
     entityprofile(entid).tex1id=loadinternalimagecompressquality(ttexdir$,1,tfullorhalfdivide)
     texture object entobj,1,entityprofile(entid).tex1id
     ttexdir$=left$(texdir$,len(texdir$)-ttexturenameD2orD)+"S.dds"
     entityprofile(entid).tex2id=loadinternalimagecompressquality(ttexdir$,1,tfullorhalfdivide)
     texture object entobj,2,entityprofile(entid).tex2id
     ttexdir$=left$(texdir$,len(texdir$)-ttexturenameD2orD)+"N.dds"
     entityprofile(entid).tex3id=loadinternalimagecompressquality(ttexdir$,1,tfullorhalfdivide)
     texture object entobj,3,entityprofile(entid).tex3id
    else
     rem texture N and S if not using texture array
     ttexdir$=left$(texdir$,len(texdir$)-ttexturenameD2orD)+"N.dds"
     entityprofile(entid).tex1id=loadinternalimagecompressquality(ttexdir$,1,tfullorhalfdivide)
     texture object entobj,1,entityprofile(entid).tex1id
     ttexdir$=left$(texdir$,len(texdir$)-ttexturenameD2orD)+"S.dds"
     entityprofile(entid).tex2id=loadinternalimagecompressquality(ttexdir$,1,tfullorhalfdivide)
     texture object entobj,2,entityprofile(entid).tex2id
    endif
   endif
  else
   rem not using N and S by default
   rem X10 check if a window shader, if so, we use special normalmap and camera source
   if right$(lower$(entityprofile(entid).effect$),10)="cubeent.fx"
    rem use D + N + REFR
    texture object entobj,0,texid
    debugviewtext(175,entityprofile(entid).model$+" C")
    if goriginalglassobject=0
     set texture array entobj,1,glasstexarrslot(1),glasstexarrslot(2),glasstexarrslot(3),glasstexarrslot(4),glasstexarrslot(5),glasstexarrslot(6),glasstexarrslot(7),glasstexarrslot(8),glasstexarrslot(9),glasstexarrslot(10)
     goriginalglassobject=entobj
    else
     set texture array entobj,1,goriginalglassobject,1
    endif 
    debugviewtext(175,entityprofile(entid).model$+" D")
    texture object entobj,2,texid : rem overridden by IMAGE 8 later on
   else
    rem use use D on its own
    `texture object entobj,texid
    rem X10 - V109 - 120309 - but still uses shader D+N+S, so load defaults
    texture object entobj,0,texid
    ttexdir$="texturebank\common\defaultnormals.dds"
    if gdefaultnormalmap=0 then gdefaultnormalmap=loadinternalimagecompressquality(ttexdir$,1,tfullorhalfdivide)
    texture object entobj,1,gdefaultnormalmap
    ttexdir$="texturebank\common\defaultspecular.dds"
    if gdefaultspecularmap=0 then gdefaultspecularmap=loadinternalimagecompressquality(ttexdir$,1,tfullorhalfdivide)
    texture object entobj,2,gdefaultspecularmap
   endif
  endif
 endif 
 `
 rem Load ALT texture if available
 if len(texaltdir$)>3
  texaltdid=loadinternalimagecompressquality(texaltdir$,1,tfullorhalfdivide)
  entityprofile(entid).texaltdid=texaltdid
 else
  entityprofile(entid).texaltdid=0
 endif
 `
else
 `
 rem FPSCV101 - add texturenames from file into filecollection (or exes will not find them)
 if entobj>0
  limbtexturename$=findmaterialtexturesinmodelfile(entdir$+entpath$+entityprofile(entid).model$,entdir$+entpath$)
 endif
 `
endif
`
rem Only if entity is a character can we prepare shaders this soon
rem 250607 - too soon for non-instance status to be determined, so
rem we call this later now in createelements
if entityprofile(entid).ischaracter=1
 rem by default, treat as instance effects so we can instance
 rem properly, but if later 'characterinstancingmode' proves to be zero
 rem we can create the characters as regular clones and skinning
 entityprofile(entid).characterinstancingmode=1
 gosub _entity_setparententityshaders
endif
`
rem X10 store texture array usage
entityprofile(entid).usetexturearrayforentity=usetexturearrayforentity
`
rem X10 if entity uses 'alternate texture' use a texture array pair 
if entityprofile(entid).texaltdid>0 and usetexturearrayforentity=0
 `
 rem texture Array Pair - light switches and toggling entities
 if entobj>0
  rem NOTE: important, textures must be loaded with the -1 so they can be read (used to create texture array)
  texarrslot1=loadinternalimagecompressquality(texdir$,0,-1)
  texarrslot2=loadinternalimagecompressquality(texaltdir$,0,-1)
  set texture array entobj,0,texarrslot1,texarrslot2,0,0,0,0,0,0,0,0
  texture object entobj,0,0 : rem default to first in array
  if texarrslot1>0 then imagebank$(texarrslot1-imagebankoffset)="" : delete image texarrslot1
  if texarrslot2>0 then imagebank$(texarrslot2-imagebankoffset)="" : delete image texarrslot2
 endif
 `
else
 `
 rem X10 Texture Array pre-loads all five alternatives in a new texture-array-resource
 if usetexturearrayforentity>0
  `
  rem Do this for D, N and S (if flagged as all texture arrays, otherwise just D)
  if usetexturearrayforentity=2 then tsmax=2 else tsmax=0
  for s=0 to tsmax
   `
   rem DNS
   if s=0 then s$="D"
   if s=1 then s$="N"
   if s=2 then s$="S"
   `
   rem load temp images
   ttexdir$=left$(texdir$,len(texdir$)-7)+"1_"+s$+".dds"
   texarrslot1=loadinternalimagecompressquality(ttexdir$,0,-1)
   ttexdir$=left$(texdir$,len(texdir$)-7)+"2_"+s$+".dds"
   texarrslot2=loadinternalimagecompressquality(ttexdir$,0,-1)
   ttexdir$=left$(texdir$,len(texdir$)-7)+"3_"+s$+".dds"
   texarrslot3=loadinternalimagecompressquality(ttexdir$,0,-1)
   ttexdir$=left$(texdir$,len(texdir$)-7)+"4_"+s$+".dds"
   texarrslot4=loadinternalimagecompressquality(ttexdir$,0,-1)
   ttexdir$=left$(texdir$,len(texdir$)-7)+"5_"+s$+".dds"
   texarrslot5=loadinternalimagecompressquality(ttexdir$,0,-1)
   `
   rem make texture array
   if texarrslot5>0
    set texture array entobj,s,texarrslot1,texarrslot2,texarrslot3,texarrslot4,texarrslot5,0,0,0,0,0
    texture object entobj,s,0 : rem default to first in array
   endif
   `
   rem textures used to create array are temporary and can be deleted
   if texarrslot1>0 then imagebank$(texarrslot1-imagebankoffset)="" : delete image texarrslot1
   if texarrslot2>0 then imagebank$(texarrslot2-imagebankoffset)="" : delete image texarrslot2
   if texarrslot3>0 then imagebank$(texarrslot3-imagebankoffset)="" : delete image texarrslot3
   if texarrslot4>0 then imagebank$(texarrslot4-imagebankoffset)="" : delete image texarrslot4
   if texarrslot5>0 then imagebank$(texarrslot5-imagebankoffset)="" : delete image texarrslot5
   `
  next s
  `
 endif
 `
endif
`
rem Set any entity transparency
if entobj>0 then set object transparency entobj,entityprofile(entid).transparency
`
return

_entity_coreobjectsetup:
 `
 rem Prepare a master entity object
 rem called after loading or cloning a main object
 `
 rem until static bonemodel scales when not animaating, loop
 if entityprofile(coreentid).ischaracter=1
  loop object coreobj : stop object coreobj
 endif
 `
 rem Hide object away
 position object coreobj,100000,100000,100000
 `
 rem X10 V109 - 090309 - ensure scale is zero never
 if entityprofile(coreentid).scale=0 then entityprofile(coreentid).scale=100
 if entityprofile(coreentid).scale<30 then set object radius coreobj,0
 `
 rem X10 offset fro characters (there physics boxes must be above floor)
 if entityprofile(coreentid).ischaracter=1
  if gmultiplayergame=0 : rem 230907 arena chars sinking into floor
   `
   rem V109 - 060209 - account for the SCALE of characters (who float above floor when scale < 100)
   `if entityprofile(coreentid).scale<>0
   ` tlowercharactery#=(object size y(coreobj)/100.0)*(100.0-entityprofile(coreentid).scale)/2.0
   `else
   ` tlowercharactery#=0
   `endif
   `offset limb coreobj,0,0,((object size y(coreobj)/2)*-1)-tlowercharactery#,0
   offset limb coreobj,0,0,((object size y(coreobj,1)/2)*-1),0
   `
  endif
 endif
 `
 rem X10 set shadows for parent entity object
 rem which will be cloned so future cloning does not incur a tangent/shadow calculation (pauses gameplay)
 if entityprofile(coreentid).ischaracter=1
  if entityprofile(coreentid).ismarker=0
   rem only shadow none markers
   tobjshadowreach#=0 : set shadow shading on coreobj,-1,tobjshadowreach#,1
  endif
 else
  rem done later in seperate shader setup subroutine
  rem in call _entity_setparententityshaders
 endif
 `
return

_entity_load:

rem Entity Object Index
entobj=entitybankoffset+entid

rem debug info
mytimer=timer()

rem Load Entity profile data
gosub _entity_loaddata

rem Only load characters for entity-local-testing
desc$=entityprofileheader(entid).desc$
if scanforentitiescharactersonly=1
 if entityprofile(entid).ischaracter=0
  desc$=""
 endif
endif

rem Only if profile data exists
if desc$<>""
 `
 rem progress report as this is a slow phase
 debugviewtext(175,strarr$(136)+str$(entid)+"\"+str$(entidmaster)+" ("+entityprofile(entid).model$+")")
 `
 rem Load the model
 tfile$=entdir$+entpath$+entityprofile(entid).model$
 if lower$(right$(tfile$,2))=".x"
  tdbofile$=left$(tfile$,len(tfile$)-2)+".dbo"
  rem X10 - 261107 - remove last temp file from program files (DBO)
  tdbofile$=turnfilenameuserlocal(tdbofile$)
 else
  tdbofile$=""
 endif
 if tdbofile$<>"" and file exist(tdbofile$)=1 then tfile$=tdbofile$
 if file exist(tfile$)=0 then tfile$=entityprofile(entid).model$
 if file exist(tfile$)=1
  `
  rem if DBO version exists, use that (quicker)
  hardscalegeometrychange=0
  if file exist(tdbofile$)=1
   tfile$=tdbofile$
   tdbofile$=""
  else
   rem allowed to save DBO (once only)
   if entityprofile(entid).hardscalex>0
    rem when convert to DBO, use a hard scale to change the geometry before saving
    hardscalegeometrychange=1
   endif
  endif
  `
  rem X10 - 021207 - submit BINDBO file as relative (not absolute which filecollection ignores)
  `addfiletocollection(tfile$)
  if mid$(tfile$,2)=":"
   trelativeprofile$=right$(tfile$,len(tfile$)-len(myownrootdir$))
   addfiletocollection(trelativeprofile$)
  else
   addfiletocollection(tfile$)
  endif
  `
  rem X10 - 250308 - if a DBO is loaded that has no texture specified, there is no way to find
  rem the texture file from the BINFILES location, so we use a special case LOAD from the entity folder
  if len(entityprofile(entid).texd$)<3 and lower$(right$(tfile$,4))=".dbo"
   rem we will move to the entity folder so we can load the textures locally for the load
   if path exist(entdir$+entpath$)=0
    rem V110 - 080110 - if path does not exist (standalone), just load normally
    load object tfile$,entobj
   else
    rememberolddir$=get dir$()
    set dir entdir$+entpath$
    if file exist(tfile$)=0
     rem tfile must be relative, so use an absolute path to load it
     load object rememberolddir$+"\"+tfile$,entobj
    else
     rem assumed to be absolute path
     load object tfile$,entobj
    endif
    set dir rememberolddir$
   endif
  else
   rem default load object 
   load object tfile$,entobj
  endif
  `
  rem Load entity (compile does not need the dynamic objects)
  set object collision off entobj
  if object exist(entobj)=1
   `
   rem X10 - object only for main scene, refract scene and reflect scene (and shadow in shadow scene)
   set object mask entobj,%110010,%0100,%10
   `
   rem Save if DBO not exist for entity (for fast loading)
   if len(tdbofile$)>1
    `
    rem X10 - 161007 - hardscalegeometrychange
    if hardscalegeometrychange=1
     hardscalegeometrychange=0
     position object entobj,0,0,0
     scale object entobj,entityprofile(entid).hardscalex,entityprofile(entid).hardscaley,entityprofile(entid).hardscalez*10
     make mesh from object entobj,entobj
     delete object entobj
     make object entobj,entobj,0
     delete mesh entobj
    endif
    `
    rem Save the X file(obj) as DBO file (for subsequent loading)
    if 0
     rem X10 - 131107 - removed because a DBO saved in GAMEEXE will CRASH mapeditor,
     rem and if BUILD GAME right away, then load that level it will crash!!
     `save object tdbofile$,entobj : rem GAME EXE DOES NOT SAVE DBOS!!
    endif
    if file exist(tdbofile$)=1
     delete object entobj
     load object tdbofile$,entobj
     set object collision off entobj
    endif
    `
   endif
   `
   rem X10 create LOD variations if available (model.x > model_MED.x and model_LOW.x)
   rem and build them into the entity object (for later cloning)
   if 1 : rem allow any entity to have LOD - entityprofile(entid).ischaracter=1
    tspareobjectnumber=entityprofileslotclonestart : rem not used yet        
    rem X10 - 260907 - if using MED, remaining LOD should be LOW, LOW
    tlodmed$="med"
    tfile$=entdir$+entpath$+entityprofile(entid).model$
    if lower$(right$(entityprofile(entid).model$,6))="_med.x"
     tfile$=entdir$+entpath$+left$(entityprofile(entid).model$,len(entityprofile(entid).model$)-6)+".x"
     tlodmed$="low"
    endif
    rem Load LOD levels
    if lower$(right$(tfile$,2))=".x"
     rem first level of lod
     lodfile$=left$(tfile$,len(tfile$)-2)+"_"+tlodmed$+".dbo"
     rem X10 - 261107 - remove last temp file from program files (DBO)
     lodfile$=turnfilenameuserlocal(lodfile$)
     if file exist(lodfile$)=0 then lodfile$=left$(tfile$,len(tfile$)-2)+"_"+tlodmed$+".x"
     if file exist(lodfile$)=1
      load object lodfile$,tspareobjectnumber
      lodfile$=left$(tfile$,len(tfile$)-2)+"_"+tlodmed$+".dbo"
      rem X10 - 261107 - remove last temp file from program files (DBO)
      lodfile$=turnfilenameuserlocal(lodfile$)      
      if file exist(lodfile$)=0 then save object lodfile$,tspareobjectnumber
      add lod to object entobj,tspareobjectnumber,0,entityprofile(entid).ex.autolodmed
      delete object tspareobjectnumber
      addfiletocollection(lodfile$)
     endif
     rem second level of lod
     lodfile$=left$(tfile$,len(tfile$)-2)+"_low.dbo"
     rem X10 - 261107 - remove last temp file from program files (DBO)
     lodfile$=turnfilenameuserlocal(lodfile$)      
     if file exist(lodfile$)=0 then lodfile$=left$(tfile$,len(tfile$)-2)+"_low.x"
     if file exist(lodfile$)=1
      load object lodfile$,tspareobjectnumber
      lodfile$=left$(tfile$,len(tfile$)-2)+"_low.dbo"
      rem X10 - 261107 - remove last temp file from program files (DBO)
      lodfile$=turnfilenameuserlocal(lodfile$)      
      if file exist(lodfile$)=0 then save object lodfile$,tspareobjectnumber
      add lod to object entobj,tspareobjectnumber,1,entityprofile(entid).ex.autolodlow
      delete object tspareobjectnumber
      addfiletocollection(lodfile$)
     endif
    endif
   endif
   `
   rem Apply texture and effect to entity profile obj
   gosub _entity_loadtexturesandeffect
   `
   rem X10 parent applies any pivot
   if entityprofile(entid).fixnewy<>0
    rotate object entobj,0,entityprofile(entid).fixnewy,0
    fix object pivot entobj
   endif
   `
   rem Prepare a master entity object (scale,fixnewy,loop,pos,offsetlimb)
   coreobj=entobj : coreentid=entid : gosub _entity_coreobjectsetup
   `
   rem X10 entity profile clones (0-4)
   entityprofile(entid).slotcloneobj=0
   if entityprofile(entid).ischaracter=1
    rem entityprofile().slotcloneobj+0,1,2,3,4 = used as animation slots for instances
    rem LEE, make sure entityprofileslotclonestart is reset to entityprofileslotclonestartmaster each level!
    entityprofile(entid).slotcloneobj=entityprofileslotclonestart
    for o=0 to entityprofileslotclonequantity-1
     tscobj=entityprofile(entid).slotcloneobj+o
     clone object tscobj,entobj,1
     position object tscobj,10000,10000,10000
     gosub _slot_prepareclone
    next o
    inc entityprofileslotclonestart,entityprofileslotclonequantity
   endif
   `
   rem if entity has decals, find indexes to decals (which are already preloaded)
   entityprofile(entid).bloodscorch=0
   if entityprofile(entid).decalmax>0
    for tq=0 to entityprofile(entid).decalmax-1
     decal$=entitydecal$(entid,tq)
     if lower$(decal$)="blood"
      if bloodmode$="off"
       rem X10 - 101007 - if no blood, use another decal
       gosub _agerating_handleblood : rem decal$="kidblood" or nothing
      else 
       rem X10 - 251007 - only allow blood splat with real blood
       rem as kidblood looks quite gory when left on the walls!!
       entityprofile(entid).bloodscorch=1
      endif
     endif
     gosub _decal_find
     if decalid<0 then decalid=0
     entitydecal(entid,tq)=decalid
    next tq
   endif
   `
  endif
 else
  debugstring(right$(tfile$,70),strarr$(100))
 endif
 `
 rem Resolve default weapon gun ids
 if entityprofile(entid).isweapon$<>""
  findgun$=lower$(entityprofile(entid).isweapon$) : gosub _gun_findweaponindexbyname
  entityprofile(entid).isweapon=foundgunid
  if foundgunid>0 then gun(foundgunid).activeingame=1
 else
  entityprofile(entid).isweapon=0
 endif
 rem Finding hasweapon also in createlemenents (as eleprof may have changed the weapon!)
 if entityprofile(entid).hasweapon$<>""
  findgun$=lower$(entityprofile(entid).hasweapon$) : gosub _gun_findweaponindexbyname
  entityprofile(entid).hasweapon=foundgunid
  if foundgunid>0 and entityprofile(entid).isammo=0 then gun(foundgunid).activeingame=1
 else
  entityprofile(entid).hasweapon=0
 endif
 `
 rem see if we can find head automatically
 if entityprofile(entid).ischaracter=1
  if entityprofile(entid).headlimb=-1
   if object exist(entobj)=1
    perform checklist for object limbs entobj
    for tc=1 to checklist quantity()
     if lower$(checklist string$(tc))="bip01_head"
      entityprofile(entid).headlimb=tc-1
      tc=checklist quantity()+1
     endif
    next tc
   endif
  endif
  if entityprofile(entid).firespotlimb=-1
   if object exist(entobj)=1
    perform checklist for object limbs entobj
    for tc=1 to checklist quantity()
     if lower$(checklist string$(tc))="firespot"
      entityprofile(entid).firespotlimb=tc-1
      tc=checklist quantity()+1
     endif
    next tc
   endif
  endif
 endif
 `
 rem assign physics weight and friction (if not set)
 if entityprofile(entid).physics<>0
  tfriction=(object size x(entobj)*75)+(object size y(entobj)*75)+(object size z(entobj)*75)
  tweight=(object size x(entobj)*25)+(object size y(entobj)*25)+(object size z(entobj)*25)
  tweight=(tweight/50)*50 : tfriction=(tfriction/50)*50
  if tweight<200 then tweight=200
`  if entityprofile(entid).phyweight=0 then entityprofile(entid).phyweight=tweight
`  if entityprofile(entid).phyfriction=0 then entityprofile(entid).phyfriction=tfriction
  entityprofile(entid).phyweight=tweight
  entityprofile(entid).phyfriction=tfriction
 endif
 `
rem no profile exists endif
endif

rem debug info and timestamp list (if logging)
debugviewtext(-1,"Built "+ent$+" in "+str$(timer()-mytimer)+"ms")
timestampactivity(0,"Loaded "+str$(entid)+":"+ent$)

return

_entity_setupelementobject:

rem INSTANCE cannot have many of the old X9 variations
rem new system is required for this now

rem place entity at correct position and orientation
if object exist(obj)=1
 `
 rem V109 - 020209 - return scaling feature to X10
 tscale=entityprofile(entid).scale
 if tscale<>0 then scale object obj,tscale,tscale,tscale
 `
 `tscale=entityelement(e).eleprof.scale EA does not support SCALE value in eleprof!
 `tscale=entityprofile(entid).scale
`test if tscale<>0 then scale object obj,tscale,tscale,tscale
 `moved to parent entity creation
 `if entityprofile(entid).fixnewy<>0
 ` rotate object obj,0,entityprofile(entid).fixnewy,0
 ` fix object pivot obj
 `endif
 `
 position object obj,entityelement(e).x,entityelement(e).y,entityelement(e).z
 rotate object obj,entityelement(e).rx,entityelement(e).ry,entityelement(e).rz
 `set object speed obj,125
 `
 rem setup lighting properties of entity
 `set object diffuse obj,rgb(128,128,128)
 `set object ambience obj,rgb(255,255,255)
 `set object emissive obj,0
 `set object specular obj,0
 `
 rem dynamic entity settings
 `if entityelement(e).staticflag=0
  `  
  remstart
  rem x9 - new x10 does not apply per element shaders (slow)
  rem Load and Apply ''unique'' FX effect
  if guseeffectonentitiesstate=1
   tfile$=entityelement(e).eleprof.effect$
   if tfile$<>""
    teffectid=loadinternaleffectunique(tfile$,1)
    entityelement(e).eleprof.usingeffect=teffectid
    entityelement(e).eleprof.uniqueelement=1
   endif
  else
   rem fastbone for quick speed test (if system supports Vertex Shader
   if entityprofile(entid).ischaracter=1
    tthisentobjshallbetextured=0
    if gignorefastbone=0
     if total object frames(obj)>1
      rem and MUST have animation to bone animate
      if object exist(obj)=1
       if get maximum vertex shader version()>=2.0
        teffectid=0
        teffectid=loadinternaleffectunique("effectbank\fastbone\fastbone.fx",1)
        if teffectid>0
         entityelement(e).eleprof.usingeffect=teffectid
         entityelement(e).eleprof.uniqueelement=1
         tthisentobjshallbetextured=1
        endif
       endif
      endif
     endif
    endif
    if tthisentobjshallbetextured=0
     rem this works, but if texture customised it gets wiped out I think (needs investigation)
     if entityelement(e).eleprof.texdid=0
      rem repair texture if not being uniquelement textured below
      entityelement(e).eleprof.texdid=entityprofile(entid).texdid
      texture object obj,entityelement(e).eleprof.texdid
     endif
    endif
   else
    rem when full shader mode not used (simple.fx)
    rem moved to profile obj
    `teffectid=loadinternaleffectunique("effectbank\simple\simple.fx",1)
    `if teffectid>0
    ` entityelement(e).eleprof.usingeffect=teffectid
    ` entityelement(e).eleprof.uniqueelement=1
    ` tthisentobjshallbetextured=1
    `endif 
    `rem replace texture (as we hacked in a LOAD)   
    `entityelement(e).eleprof.texdid=entityprofile(entid).texdid
    `texture object obj,entityelement(e).eleprof.texdid
    `rem should replace FULL SHADER EFFECT mode with
    `rem (a) for performance or (b) for visual quality
    `rem and remove flags like 'guseeffectonentitiesstate'
   endif
  endif
  remend
 `else
  rem if staic, universe needs this entity to be a shared FX (because the object will be deleted!)
  `x9 if guseeffectonentitiesstate=1
  ` if entityelement(e).eleprof.usingeffect>0
  `  entityelement(e).eleprof.uniqueelement=1
  `  for tstage=0 to entityelement(e).eleprof.texidmax
  `   if tstage=0 then texture object obj,tstage,entityelement(e).eleprof.texdid
  `   if tstage=1 then texture object obj,tstage,entityelement(e).eleprof.tex1id
  `   if tstage=2 then texture object obj,tstage,entityelement(e).eleprof.tex2id
  `   if tstage=3 then texture object obj,tstage,entityelement(e).eleprof.tex3id
  `   if tstage=4 then texture object obj,tstage,entityelement(e).eleprof.tex4id
  `  next tstage
  ` endif
  `endif
 `endif
 `
 rem If element unique, can take its own texture, effect and transparency
 `teletransparency=entityelement(e).eleprof.transparency
 `if entityelement(e).eleprof.uniqueelement=1
 ` teffectid=entityelement(e).eleprof.usingeffect
 ` if teffectid>0
 `  set object effect obj,teffectid
 ` else
 `  texture object obj,0,entityelement(e).eleprof.texdid
 ` endif
 `endif
 `
 rem Set entity element transparency also, so that it is placed correctly in render order
 `set object transparency obj,teletransparency
 `
 rem If transparent, no need to Z write
 `if teletransparency>0
 ` if teletransparency>=2
 `  disable object zwrite obj
 `  enable object zbias obj,0.0,-0.000001
 ` endif
 `endif
 `
 rem pre-use step for characters
 `if total object frames(obj)>0
 ` set object frame obj,0
 ` if entityprofile(entid).ischaracter=1
 `  if entityprofile(entid).animmax>=1
 `   teai=0 : if entityanim(entid,1).start>0 then teai=1
 `   tbaseframe=teai : gosub _entity_getactualframestart : tfstart=tactualframe
 `   tbaseframe=teai : gosub _entity_getactualframefinish : tffinish=tactualframe
 `   loop object obj,tfstart,tffinish
 `  else
 `   loop object obj : stop object obj
 `  endif
 ` endif
 `endif
 `
 rem weapon and ammo are none collidable
 if entityprofile(entid).isweapon>0 or entityprofile(entid).isammo>0
  entityelement(e).collisionactive=0
  set object collision off obj
 else
  set object collision on obj
 endif
 `
 rem do not allow player to stop at entity characters (so can run through them)
 if entityprofile(entid).ischaracter=1
  entityelement(e).collisionactive=0
  set object collision off obj
 endif
 `
endif

rem child spawns should remain invisible for now
if entityelement(e).spawn.leaderid>0
 if entityelement(e).spawn.leader=0
  if object exist(obj)=1
   entityelement(e).collisionactive=0
   set object collision off obj
   hide object obj
  endif
 endif
endif

rem makrers by default are hidden
if entityprofile(entid).ismarker>0
 if object exist(obj)=1
  entityelement(e).collisionactive=0
  set object collision off obj
  hide object obj
 endif
endif

return

_entity_createelementasobject:

rem preset entity data
entityelement(e).obj=obj

rem X10 - 031007 - moved from end of subroutine (need to give this clone a unique skinning shader or it will overwrite instanced skinning if put at end)
rem create a clone corpse here so we have smoother game in main loop
if entityelement(e).profileobj>0
 if object exist(entityelement(e).profileobj)=1
  if entityelement(e).staticflag=0 and entityprofile(entid).ischaracter=1
   preclonedcorpseobj=preclonedcorpseobjbase+e
   clone object preclonedcorpseobj,entitybankoffset+entid,2
   set object effect preclonedcorpseobj,gskinningforagdolleffect
   rem X10 - 251007 - ensure ragdoll corpses also use transparency (so render after sky)
   tmintransmode=entityprofile(entid).transparency
   if tmintransmode<2 then tmintransmode=2
   set object transparency preclonedcorpseobj,tmintransmode          
   rem do not attach clones-for-corpses to universe, as ragdolls have no universe position
   position object preclonedcorpseobj,0,0,0
   hide object preclonedcorpseobj
  endif
 endif
endif

rem X10 this will be set inside the entity properties (0-4 or random)
if loadsavedlevel$<>""
 rem X10 - 131007 - if in process of loading saved position, take texture array indez from there
 entityelementtexarrayindex(e)=saveloadgamepositionentity(e).texturearrayindex
else
 rem Generate texture array index a fresh
 if entityprofile(entid).ischaracter=1
  rem character
  if entityelement(e).eleprof.ex.texturearray>0 and entityelement(e).eleprof.ex.texturearray<=5
   entityelementtexarrayindex(e)=entityelement(e).eleprof.ex.texturearray-1
  else
   entityelementtexarrayindex(e)=rnd(4)
  endif
 else
  if entityelement(e).eleprof.ex.glassstyle>0 and entityelement(e).eleprof.ex.glassstyle<=10
   rem glass refraction style
   entityelementtexarrayindex(e)=entityelement(e).eleprof.ex.glassstyle-1
  else
   if entityprofile(entid).texaltdid>0
    rem switches default is zero
    entityelementtexarrayindex(e)=0
   else
    entityelementtexarrayindex(e)=rnd(9)
   endif
  endif
 endif
endif

rem delete any existing object and create new one
tgoaheadandsetup=0
if object exist(obj)=1 then delete object obj
if entityelement(e).profileobj>0
 if object exist(entityelement(e).profileobj)=1
  if entityelement(e).spawn.leader=1 and entityelement(e).spawn.max>0
   rem spawning entitiy leaders do not need visual obj (they are invisible makrings), but need obj for object XY ref
   make object triangle obj,0,0,0,0,0,0,0,0,0
   hide object obj
  else
   rem special clone which keeps the animation data in once place (smaller mem footprint)
   if entityelement(e).staticflag=1 and entityprofile(entid).ischaracter=1
    rem if static, and obj has animation (character) - hide it
    make object triangle obj,0,0,0,0,0,0,0,0,0
    hide object obj
   else
    rem FPSCV10X - old U57 clone does not copy multi-materials over
    rem V110 - 140110 - clone fixed for multimaterials, allow static entities
    rem with no texture specified to be cloned (Model Pack 3, etc)
    rem if entityprofile(entid).texd$="" or entityelement(e).staticflag=0
    if entityelement(e).staticflag=0
     te=e : tobj=obj : tentid=entid : gosub _entity_createdynamicentityobj
    else
     rem entity used for static building later (or dynamic entity with no texture specified)
     if 1
      rem make static entity from original
      clone object obj,entityelement(e).profileobj
     else
      `rem no static entities - test mode
      `make object triangle obj,0,0,0,0,0,0,0,0,0
      `hide object obj
     endif
    endif
    tgoaheadandsetup=1
   endif
  endif
 else
  rem some elements can be empty - result of editing
  make object triangle obj,0,0,0,0,0,0,0,0,0
  hide object obj
 endif
else
 rem some elements can be empty - result of editing
 make object triangle obj,0,0,0,0,0,0,0,0,0
 hide object obj
endif

rem Setup element object (position and orientations)
if tgoaheadandsetup=1
 gosub _entity_setupelementobject
else
 if obj>0
  if object exist(obj)=1
   position object obj,entityelement(e).x,entityelement(e).y,entityelement(e).z
   rotate object obj,entityelement(e).rx,entityelement(e).ry,entityelement(e).rz
  endif
 endif
endif

rem FPSCV101 - static entities that "do not specify a texture" draw from local TGA (however when used inside UNIVERSE.DBO the relative location of the texture is lost)
rem so we must manually insert a texture so the static entity has the path to get the actual texture
if entityelement(e).staticflag=1 and entityprofile(entid).texd$=""
 if obj>0
  if object exist(obj)=1
   tprofileobjnum=entityelement(e).profileobj
   if tprofileobjnum>0
    if object exist(tprofileobjnum)=1
     tscanfile$=entdir$+entpath$+entityprofile(entid).model$
     if lower$(right$(tscanfile$,2))=".x"
      if file exist(tscanfile$)=0
       tscanfile$=left$(tscanfile$,len(tscanfile$)-2)+".dbo"
       rem X10 - 261107 - remove last temp file from program files (DBO)
       tscanfile$=turnfilenameuserlocal(tscanfile$)      
      endif
     endif
     ttrythisone$=findmaterialtexturesinmodelfile(tscanfile$,entdir$+entpath$)
     limbtexid=loadinternalimagecompressquality(ttrythisone$,5,0)
     if limbtexid>0
      entityelement(e).eleprof.texd$=ttrythisone$
      addfiletocollection(entityelement(e).eleprof.texd$)
      entityelement(e).eleprof.texdid=limbtexid
      texture object obj,limbtexid
     endif
    endif
   endif
  endif
 endif
endif

rem X10 - 120907 - if have weapon, and have melee weapins in model, hide melee weapons
if obj>0
 if entityelement(e).eleprof.hasweapon<>0
  tprofileobjnum=entityelement(e).profileobj
  if object exist(obj)=1 and object exist(tprofileobjnum)=1
   perform checklist for object limbs tprofileobjnum
   for tc=1 to checklist quantity()
    rem hide the bone and the mesh associated with the bone (+1)
    if upper$(checklist string$(tc))="MELEE-WEAPON-LEFT"
     hide limb tprofileobjnum,tc-1
     hide limb obj,tc-1
     hide limb tprofileobjnum,tc
     hide limb obj,tc
    endif
    if upper$(checklist string$(tc))="MELEE-WEAPON-RIGHT"
     hide limb tprofileobjnum,tc-1
     hide limb obj,tc-1
     hide limb tprofileobjnum,tc
     hide limb obj,tc
    endif
   next tc
  endif
 endif
endif

rem X10 V109 - 130309 - zero-cull if scale really small
if obj>0
 if entityprofile(entid).scale<30 then set object radius obj,0
endif

return

_entity_createdynamicentityobj:
 `
 rem protect vars (passed tobj,tentid,e in)
 storee=e : e=te
 storeobj=obj : obj=tobj
 storeentid=entid : entid=tentid
 `
 rem used above and also for when respawning previously cloned entities (controlspawn)
 if entityprofile(entid).ischaracter=1
  rem X10 initialise element by wiping out slot usage, and defining a new slot to use
  animslottype=0 : gosub _slot_default_create
 else
  rem X10 - 221007 - only instance if not been customised (custom texture/effect)
  gosub _entity_iseleprofunique
  if entityelement(e).eleprof.uniqueelement=1
   rem Non-instanced so we can have a custom version of this entity
   clone object obj,entityelement(e).profileobj
   rem X10 - 221007 - this is skipped in final element creation, so do it for custom elements
   entobj=tobj : gosub _entity_updatetextureandeffectfromeleprof
   rem X10 - 221007 - if custom shader, apply this now (as configure later does not do it, nor does parentshader which acts only on parent objects)
   if (len(entityprofile(entid).effect$)>0 or len(entityelement(e).eleprof.effect$)>0) and lower$(entityprofile(entid).effect$)<>lower$(entityelement(e).eleprof.effect$)
    teffectid=loadinternaleffect(entityelement(e).eleprof.effect$)
    set object effect entobj,teffectid
   endif
  else
   rem X10 GPU Instancing
   if entityprofile(entid).animmax>0
    rem X10 - 050208 - if entity is not a character, and animates, must be CLONE so can LOOP OBJECT on it
    clone object obj,entityelement(e).profileobj,2
   else
    rem instance everything else that does not animate
    instance object obj,entityelement(e).profileobj,entityelementtexarrayindex(e)
    `
    rem lee - 280308 - if instancing an entity, ensure profile object reflects instancing!
    rem not extensively tested with other levels and performance optimization possible here
    storeentobj=entobj : entobj=entityelement(e).profileobj
    gosub _entity_setparententityshaderonly
    entobj=storeentobj
    `
   endif
  endif
  rem 040807 - need to be part of scene culling otherwise massive slowdown
  attach object to static obj
 endif
 `
 rem restore
 e=storee : obj=storeobj : entid=storeentid
 `
return

_entity_getgunidandflakid:

rem Use Weapon Name to get GUNID and FLAKID
if tgunid$<>""
 findgun$=lower$(tgunid$)
 gosub _gun_findweaponindexbyname
 tgunid=foundgunid
 tflakid$=gun(tgunid).settings.flakname$
 if tflakid$<>""
  flak$=lower$(tflakid$) : gosub _flak_findindex
  tflakid=tindex
 else
  tflakid=0
 endif
else
 tgunid=0 : tflakid=0
endif

return

_entity_createattachment:
 `
 rem Load all VWEAPS for each entity that wants weapon attachments
 entid=entityelement(e).bankindex
 entityelement(e).attachmentobj=0
 entityelement(e).attachmentbaseobj=0
 entityelement(e).attachmentweapontype=0
 entityelement(e).attachmentobjfirespotlimb=0
 if entityprofile(entid).ischaracter=1
  if object exist(eleobj+e)=1
   if entityprofile(entid).firespotlimb>-1
    `
    rem all vweaps (that are active)
    rem FPSCV104 - changed so MULTIPLAYER=ALL weapons, SINGLEPLAYER=only weapon being held (quicker/bugfree/load)
    ttattachindex=0
    for tgindex=1 to gunmax
     if gun(tgindex).activeingame=1
      tweaponname$=gun(tgindex).name$
      if tweaponname$<>""
       `
       rem FPSCV104 - either multiplayer or single player entity has this gun in their hands
       tthasweapon$=lower$(entityelement(e).eleprof.hasweapon$)
       if tthasweapon$=tweaponname$ or gmultiplayergame=1
        `
        rem go and load this gun (attached to calling entity instance)
        inc ttattachindex
        inc entityattachmentindex
        ttobj=entityattachmentsoffset+entityattachmentindex
        if ttattachindex=1 then entityelement(e).attachmentbaseobj=ttobj
        if object exist(ttobj)=1 then delete object ttobj
        tfile$="gamecore\Guns\"+tweaponname$+"\vweap.x"
        rem FPSCV10X some weapons do not have vweap.x models
        if file exist(tfile$)=1
         if entityprofile(entid).characterinstancingmode=1
          if entityprofile(entid).objattachmentmaster=0
           load object tfile$,ttobj : addfiletocollection(tfile$)
           rem X10 possible instancing of guns
           entityprofile(entid).objattachmentmaster=ttobj
           rem X10 - 221007 - first object also needs to be part of static universe
           attach object to static ttobj
          else
           rem use an instance if already loaded (can save 15k ticks in scene with 50 chars)
           instance object ttobj,entityprofile(entid).objattachmentmaster
           rem 040807 - need to be part of scene culling otherwise massive slowdown
           attach object to static ttobj
          endif
         else
          rem faster to load if instances are less than X
          load object tfile$,ttobj : addfiletocollection(tfile$)
          rem 040807 - need to be part of scene culling otherwise massive slowdown
          attach object to static ttobj
          `made the gun disappear 300707 entityprofile(entid).objattachmentmaster=ttobj
          rem 010807 - need for texture to be retained during build though
          rem X10 - V109 - 110309 - find VWEAP texture if GUN_D2 too small
          texuseid=0
          tfile$="gamecore\Guns\"+tweaponname$+"\gun_D2.dds"
          if file exist(tfile$)=1
           if file size(tfile$)<2048
            tfile$=findvweaptexture(tfile$)
            texuseid=loadinternaltexture(tfile$)
            if texuseid=0 then tfile$="gamecore\Guns\"+tweaponname$+"\gun_D2.dds"
           endif
          endif
          if texuseid=0 then texuseid=loadinternaltexture(tfile$)
          addfiletocollection(tfile$)
          set object transparency ttobj,2
          set object collision off ttobj
          texture object ttobj,texuseid
         endif
        else
         rem invisible weapon attachment
         make object triangle ttobj,0,0,0,0,0,0,0,0,0
        endif
        hide object ttobj
        rem X10 - object only for main scene, refract scene and reflect scene (and shadow in shadow scene)
        set object mask ttobj,%110010,%0100,%10
        `
       endif
       `
      endif
     endif
    next tgindex
    rem Opportunity for default first weapon to be attached
    tobj=eleobj+e : gosub _entity_switchattachment
    `
   endif
  endif
 endif
 `
 rem Create blob shadow for characters (X10 and for team icon)
 entityelement(e).attachmentblobobj=0 : rem X10 - 011007 - clear for this element
 if entityprofile(entid).ischaracter=1
  if object exist(eleobj+e)=1
   `
   rem blob shadow / action-icon prompt (entityelement(e).attachmentblobobj+0)
   inc entityattachmentindex
   ttobj=entityattachmentsoffset+entityattachmentindex
   entityelement(e).attachmentblobobj=ttobj
   make object plain ttobj,40,40
   rem 040807 - need to be part of scene culling otherwise massive slowdown
   attach object to static ttobj 
   xrotate object ttobj,90
   set object light ttobj,0
   disable object zwrite ttobj
   set object cull ttobj,1
   position object ttobj,-50000,-50000,50000
   ttexid=attachmenticonimagestart+0
   texture object ttobj,ttexid
   set object transparency ttobj,2
   set object mask ttobj,%100010,%0000,%00
   `
   rem health bar border (entityelement(e).attachmentblobobj+1)
   inc entityattachmentindex : ttobj=ttobj+1
   make object plain ttobj,261/10.0,14/10.0
   rem 040807 - need to be part of scene culling otherwise massive slowdown
   attach object to static ttobj 
   set object light ttobj,0
   disable object zwrite ttobj
   set object cull ttobj,1
   position object ttobj,-50000,-50000,50000
   ttexid=attachmenticonimagestart+4
   texture object ttobj,ttexid
   set object transparency ttobj,2
   set object mask ttobj,%100000,%0000,%00
   if entityelement(e).eleprof.ex.showhealthbar=0 or gmultiplayergame=1 then hide object ttobj
   `
   rem health bar (entityelement(e).attachmentblobobj+2)
   inc entityattachmentindex : ttobj=ttobj+1
   make object plain ttobj,255/10.0,8/10.0
   rem 040807 - need to be part of scene culling otherwise massive slowdown
   attach object to static ttobj 
   set object light ttobj,0
   disable object zwrite ttobj
   set object cull ttobj,1
   position object ttobj,-50000,-50000,50000
   ttexid=attachmenticonimagestart+5
   texture object ttobj,ttexid
   set object transparency ttobj,2
   set object mask ttobj,%100000,%0000,%00
   if entityelement(e).eleprof.ex.showhealthbar=0 or gmultiplayergame=1 then hide object ttobj
   `
  endif
 endif
 `
return

_entity_switchattachment:
 `
 rem uses tobj, e, entid, [hasweapon$ can be changed]
 thasweapon$=lower$(entityelement(e).eleprof.hasweapon$)
 tvweapobj=entityelement(e).attachmentobj
 `
 rem unglue old VWEAP (if any)
 if tvweapobj>0
  rem re-hide object
  if object exist(tvweapobj)=1
   unglue object tvweapobj
   position object tvweapobj,0,0,0
   hide object tvweapobj
  endif
 endif
 `
 rem reset entity so not carrying
 entityelement(e).attachmentobjfirespotlimb=0
 entityelement(e).attachmentweapontype=0
 entityelement(e).attachmentobj=0
 entityelement(e).currentweapon=0
 `
 rem pick new VWEAP model to attach
 tvweapobj=0
 ttattachindex=0
 if gmultiplayergame=1
  rem arena characters have all guns attached to them
  for tgindex=1 to gunmax
   if gun(tgindex).activeingame=1
    if gun(tgindex).name$<>"" then inc ttattachindex
    if lower$(gun(tgindex).name$)=thasweapon$ then tvweapobj=entityelement(e).attachmentbaseobj+(ttattachindex-1) : exit
   endif
  next tgindex
 else
  rem FPSCV10X - single play characters have one gun - but still need to return gunindex
  ttattachindex=1
  for tgindex=1 to gunmax
   if gun(tgindex).activeingame=1
    if lower$(gun(tgindex).name$)=thasweapon$ then tvweapobj=entityelement(e).attachmentbaseobj+(ttattachindex-1) : exit
   endif
  next tgindex
 endif
 tentid=entityelement(e).bankindex
 if tvweapobj>0
  rem FPSCV10X - removing VWEAP.X no longer crashes
  if object exist(tvweapobj)=0
   tvweapobj=0
  else
   if entityprofile(tentid).firespotlimb=-1
    tvweapobj=0
   else
    if object exist(tobj)=1
     if limb exist(tobj,entityprofile(tentid).firespotlimb)=0
      tvweapobj=0
     endif
    else
     tvweapobj=0
    endif
   endif
  endif
 endif
 if tvweapobj>0
  entityelement(e).attachmentweapontype=gun(tgindex).weapontype
  entityelement(e).currentweapon=tgindex
 endif
 `
 rem if new gun selected
 if tvweapobj>0
  rem new attached object
  entityelement(e).attachmentobj=tvweapobj
  rem glue new VWEAP to entity(character)
  position object tvweapobj,0,0,0
  rem try manual position, not glue
  `x9glue object to limb tvweapobj,tobj,entityprofile(tentid).firespotlimb
  rem relocate firepsot within VWEAP model for entity use
  entityelement(e).attachmentobjfirespotlimb=0
  perform checklist for object limbs tvweapobj
  for tc=1 to checklist quantity()
   if lower$(checklist string$(tc))="firespot"
    entityelement(e).attachmentobjfirespotlimb=tc-1
    tc=checklist quantity()+1
   endif
  next tc
  rem finally show thw weapon (if not spawn child)
  if entityelement(e).spawn.leaderid=0
   show object tvweapobj
  else
   hide object tvweapobj
  endif
 endif
 `
return

_entity_iseleprofunique:
 `
 rem Entity unique if texture or effect different
 tokay=0
 if (len(entityprofile(entid).texd$)>0 or len(entityelement(e).eleprof.texd$)>0) and entityprofile(entid).texd$<>entityelement(e).eleprof.texd$ then tokay=1
 if (len(entityprofile(entid).texaltd$)>0 or len(entityelement(e).eleprof.texaltd$)>0) and entityprofile(entid).texaltd$<>entityelement(e).eleprof.texaltd$ then tokay=1
 if (len(entityprofile(entid).effect$)>0 or len(entityelement(e).eleprof.effect$)>0) and entityprofile(entid).effect$<>entityelement(e).eleprof.effect$ then tokay=1
 if tokay=1
  entityelement(e).eleprof.uniqueelement=1
 else
  entityelement(e).eleprof.uniqueelement=0
 endif
 `
return

_entity_updatetextureandeffectfromeleprof:
 `
 rem Texture and Effect (use entityprofile loader)
 storeentdefaults as entityprofiletype
 storeentdefaults=entityprofile(entid)
 entityprofile(entid).texd$=entityelement(e).eleprof.texd$
 entityprofile(entid).texaltd$=entityelement(e).eleprof.texaltd$
 entityprofile(entid).texdid=entityelement(e).eleprof.texdid
 entityprofile(entid).texaltdid=entityelement(e).eleprof.texaltdid
 entityprofile(entid).effect$=entityelement(e).eleprof.effect$
 entityprofile(entid).usingeffect=entityelement(e).eleprof.usingeffect
 entityprofile(entid).tex1id=entityelement(e).eleprof.tex1id
 entityprofile(entid).tex2id=entityelement(e).eleprof.tex2id
 entityprofile(entid).tex3id=entityelement(e).eleprof.tex3id
 entityprofile(entid).tex4id=entityelement(e).eleprof.tex4id
 entityprofile(entid).texidmax=entityelement(e).eleprof.texidmax
 entityprofile(entid).transparency=entityelement(e).eleprof.transparency
 entityprofile(entid).reducetexture=entityelement(e).eleprof.reducetexture
 gosub _entity_loadtexturesandeffect
 entityelement(e).eleprof.texd$=entityprofile(entid).texd$
 entityelement(e).eleprof.texaltd$=entityprofile(entid).texaltd$
 entityelement(e).eleprof.texdid=entityprofile(entid).texdid
 entityelement(e).eleprof.texaltdid=entityprofile(entid).texaltdid
 entityelement(e).eleprof.effect$=entityprofile(entid).effect$
 entityelement(e).eleprof.usingeffect=entityprofile(entid).usingeffect
 entityelement(e).eleprof.tex1id=entityprofile(entid).tex1id
 entityelement(e).eleprof.tex2id=entityprofile(entid).tex2id
 entityelement(e).eleprof.tex3id=entityprofile(entid).tex3id
 entityelement(e).eleprof.tex4id=entityprofile(entid).tex4id
 entityelement(e).eleprof.texidmax=entityprofile(entid).texidmax
 entityelement(e).eleprof.transparency=entityprofile(entid).transparency
 entityelement(e).eleprof.reducetexture=entityprofile(entid).reducetexture
 entityprofile(entid)=storeentdefaults
 `
return

_entity_isgrideleprofunique:
 `
 rem Entity unique if texture or effect different
 tokay=0
 if (len(entityprofile(entid).texd$)>0 or len(grideleprof.texd$)>0) and entityprofile(entid).texd$<>grideleprof.texd$ then tokay=1
 if (len(entityprofile(entid).texaltd$)>0 or len(grideleprof.texaltd$)>0) and entityprofile(entid).texaltd$<>grideleprof.texaltd$ then tokay=1
 if (len(entityprofile(entid).effect$)>0 or len(grideleprof.effect$)>0) and entityprofile(entid).effect$<>grideleprof.effect$ then tokay=1
 if tokay=1
  grideleprof.uniqueelement=1
 else
  grideleprof.uniqueelement=0
 endif
 `
return

_entity_updatetextureandeffectfromgrideleprof:
 `
 rem Texture and Effect (use entityprofile loader)
 storeentdefaults as entityprofiletype
 storeentdefaults=entityprofile(entid)
 entityprofile(entid).texd$=grideleprof.texd$
 entityprofile(entid).texaltd$=grideleprof.texaltd$
 entityprofile(entid).texdid=grideleprof.texdid
 entityprofile(entid).texaltdid=grideleprof.texaltdid
 entityprofile(entid).effect$=grideleprof.effect$
 entityprofile(entid).usingeffect=grideleprof.usingeffect
 entityprofile(entid).tex1id=grideleprof.tex1id
 entityprofile(entid).tex2id=grideleprof.tex2id
 entityprofile(entid).tex3id=grideleprof.tex3id
 entityprofile(entid).tex4id=grideleprof.tex4id
 entityprofile(entid).texidmax=grideleprof.texidmax
 entityprofile(entid).transparency=grideleprof.transparency
 entityprofile(entid).reducetexture=grideleprof.reducetexture
 gosub _entity_loadtexturesandeffect
 grideleprof.texd$=entityprofile(entid).texd$
 grideleprof.texaltd$=entityprofile(entid).texaltd$
 grideleprof.texdid=entityprofile(entid).texdid
 grideleprof.texaltdid=entityprofile(entid).texaltdid
 grideleprof.effect$=entityprofile(entid).effect$
 grideleprof.usingeffect=entityprofile(entid).usingeffect
 grideleprof.tex1id=entityprofile(entid).tex1id
 grideleprof.tex2id=entityprofile(entid).tex2id
 grideleprof.tex3id=entityprofile(entid).tex3id
 grideleprof.tex4id=entityprofile(entid).tex4id
 grideleprof.texidmax=entityprofile(entid).texidmax
 grideleprof.transparency=entityprofile(entid).transparency
 grideleprof.reducetexture=entityprofile(entid).reducetexture
 entityprofile(entid)=storeentdefaults
 `
return

_entity_configueelementforuse:
 `
 rem Resolve AI indexes from AI script filenames
 aifile$=entityelement(e).eleprof.aiinit$ : gosub _ai_findlibindex : entityelement(e).eleprof.aiinit=libindex
 aifile$=entityelement(e).eleprof.aimain$ : gosub _ai_findlibindex : entityelement(e).eleprof.aimain=libindex
 aifile$=entityelement(e).eleprof.aidestroy$ : gosub _ai_findlibindex : entityelement(e).eleprof.aidestroy=libindex
 aifile$=entityelement(e).eleprof.aishoot$ : gosub _ai_findlibindex : entityelement(e).eleprof.aishoot=libindex
 `
 rem prevent main AI from running in (multiplayer)
 if gmultiplayergame=1
  rem server entities by default
  entityelement(e).servercontrolled=1
  if entityprofile(entid).ischaracter=1
   rem characters are ALL possible players NO MAIN LOGIC - SERVER CONTROLLED ZOMBIE ENTITIES
   aifile$="default.fpi" : gosub _ai_findlibindex : entityelement(e).eleprof.aimain=libindex
  endif
 endif
 `
 rem Configure AI for element
 entityelement(e).active=1
 entityelement(e).dormant=1
 entityelement(e).collisionactive=1
 entityelement(e).ai.libinit=entityelement(e).eleprof.aiinit
 entityelement(e).ai.libmain=entityelement(e).eleprof.aimain
 entityelement(e).ai.libdestroy=entityelement(e).eleprof.aidestroy
 entityelement(e).ai.libshoot=entityelement(e).eleprof.aishoot
 entityelement(e).ai.libindex=entityelement(e).ai.libinit
 entityelement(e).mover.da=entityelement(e).ry
 entityelement(e).ai.waypoint.state=0
 entityelement(e).ai.alphafade=0
 entityelement(e).ai.state=0
 `
 rem Configure animation defaults
 if entityprofile(entid).ischaracter=1
  entityelement(e).animspeed=2.0
 else
  entityelement(e).animspeed=4.0
 endif
 `
 rem Spawn values
 entityelement(e).spawn.atstart=entityelement(e).eleprof.spawnatstart
 entityelement(e).spawn.max=entityelement(e).eleprof.spawnmax
 entityelement(e).spawn.delay=entityelement(e).eleprof.spawndelay
 entityelement(e).spawn.qty=entityelement(e).eleprof.spawnqty
 entityelement(e).spawn.upto=entityelement(e).eleprof.spawnupto
 entityelement(e).spawn.afterdelay=entityelement(e).eleprof.spawnafterdelay
 entityelement(e).spawn.whendead=entityelement(e).eleprof.spawnwhendead
 entityelement(e).spawn.delayrandom=entityelement(e).eleprof.spawndelayrandom
 entityelement(e).spawn.qtyrandom=entityelement(e).eleprof.spawnqtyrandom
 entityelement(e).spawn.vel=entityelement(e).eleprof.spawnvel
 entityelement(e).spawn.velrandom=entityelement(e).eleprof.spawnvelrandom
 entityelement(e).spawn.angle=entityelement(e).eleprof.spawnangle
 entityelement(e).spawn.anglerandom=entityelement(e).eleprof.spawnanglerandom
 entityelement(e).spawn.life=entityelement(e).eleprof.spawnlife
 `
 rem Spawn off means spawn-ready to be used, so..
 if entityelement(e).spawn.atstart=0 and entityelement(e).spawn.max=0
  entityelement(e).spawn.max=1
  if entityelement(e).spawn.afterdelay=0 and entityelement(e).spawn.whendead=0
   entityelement(e).spawn.afterdelay=1
  endif
  if entityelement(e).spawn.qty=0 then entityelement(e).spawn.qty=1
  if entityelement(e).spawn.upto=0 then entityelement(e).spawn.upto=1
 endif
 `
 rem Configure health from strength
 if entityelement(e).eleprof.strength>0
  entityelement(e).health=entityelement(e).eleprof.strength
 else
  entityelement(e).health=1
 endif
 `
 rem Moved from SETUP, as FX name can change here
 if guseeffectonentitiesstate=1
  tfile$=entityelement(e).eleprof.effect$
  if tfile$<>""
   if entityelement(e).staticflag=0
    rem dynamic entities cannot use scene FX, must be entity FX..
    rem for backwards EA compatibility with old entity eleprofs, bump.fx has become bumpent.fx
    if lower$(tfile$)="effectbank\bump\bump.fx" then tfile$="effectbank\bumpent\bumpent.fx"
    entityelement(e).eleprof.effect$=tfile$
    entityelement(e).eleprof.uniqueelement=1
   else
    rem if entity static, this routine called from UNIVERSE code to prepare static entities
    rem ENSURE the bumpent.fx is replaced with BUMP.FX as the former FX file would be wrong
    if lower$(tfile$)="effectbank\bumpent\bumpent.fx" then tfile$="effectbank\bump\bump.fx"
    if lower$(tfile$)="effectbank\bumpbone\bumpbone.fx" then tfile$="effectbank\bump\bump.fx"
    entityelement(e).eleprof.effect$=tfile$
   endif
  endif
 endif
 `
 rem Texture and Effect (use entityprofile loader)
 `gosub _entity_iseleprofunique 221007 - moved from here to when entity element 'created' (so we can clone instead of instance for custom elements)
 entobj=configureobj : gosub _entity_updatetextureandeffectfromeleprof
 `
 rem Resolve default weapon gun ids
 if entityelement(e).eleprof.hasweapon$<>""
  findgun$=lower$(entityelement(e).eleprof.hasweapon$) : gosub _gun_findweaponindexbyname
  entityelement(e).eleprof.hasweapon=foundgunid
  if foundgunid>0 and entityprofile(entid).isammo=0 then gun(foundgunid).activeingame=1
 else
  entityelement(e).eleprof.hasweapon=0
 endif
 `
return

_entity_setparententityshaderonly:
 `
 rem apply shader to entity profile object
 rem lee - 280308 - seperated here so I can call it after INSTANCING
 rem as the shader changes if the entity has instancing in effect
 entityprofile(entid).usingeffect=0
 if segobjusedformapeditor=0
  if entobj>0
   if object exist(entobj)=1
    rem Use default shaders
    if entityprofile(entid).ischaracter=1
     if entityprofile(entid).characterinstancingmode=1
      rem instanced skinning
      teffectid=loadinternaleffect("effectbank\skinning\skinning.fx")
     else
      rem non-instance skinning
      teffectid=gskinningforagdolleffect
     endif
    else
     if right$(lower$(entityprofile(entid).effect$),10)="cubeent.fx"
      dirbefore$=get dir$() : set dir commoneffects$
      tfile$="refract.fx" : teffectid=loadinternaleffect(tfile$)
      addfiletocollection(commoneffects$+tfile$)
      set dir dirbefore$
      rem X10 - refractive entities are not in refract/reflect or shadow scene
      grefractionshadereffect=teffectid
      set object mask entobj,%100000,%0,%0
     else
      teffectid=loadinternaleffect("effectbank\simple\simple.fx")
     endif
    endif
    if teffectid>0
     rem set the effect
     entityprofile(entid).usingeffect=teffectid
     set object effect entobj,teffectid
    endif
   endif
  endif
 endif
 `
return

_entity_setparententityshaders:
 `
 rem X10 Set all parent entity shaders
 rem this new 10 function is done 'after' map_load where universe constructs
 rem itself using unmodified static entities
 gosub _entity_setparententityshaderonly
 `
 rem Set shadow for thie entity too (now we know its not used as universe static entity)
 if entityprofile(entid).ischaracter=0
  if entobj>0
   if object exist(entobj)=1
    rem characters already have shadows set when originally loaded
    if entityprofile(entid).ismarker=0
     if entityprofile(entid).isimmobile=0
      rem only shadow none markers and dynamic
      tobjshadowreach#=0 : set shadow shading on entobj,-1,tobjshadowreach#,1
     endif
    endif
   endif
  endif   
 endif
 `
return

_entity_createelements:

rem add shaders and shadows to parent entity objects
for entid=1 to entidmaster
 entobj=entitybankoffset+entid
 gosub _entity_setparententityshaders
next entid

rem pre-create element data (load from eleprof)
for e=1 to entityelementlist
 entobj=0 : entid=entityelement(e).bankindex
 configureobj=0 : gosub _entity_configueelementforuse
next e

rem spawn all elements (one element with a max.spawn of 5 means we duplicate another 4 here)
countnewselementsize=0
for spawne=1 to entityelementlist
 if entityelement(spawne).staticflag=0
  inc countnewselementsize,1+entityelement(spawne).spawn.max
 endif
next spawne

dim newentityelement(countnewselementsize) as entitytype
newentityelementlist=0
for spawne=1 to entityelementlist
 if entityelement(spawne).staticflag=0
  for te=1 to 1+entityelement(spawne).spawn.max
   inc newentityelementlist
   newentityelement(newentityelementlist)=entityelement(spawne)
   if te=1
    rem leader
    newentityelement(newentityelementlist).spawn.leader=1
    newentityelement(newentityelementlist).spawn.leadercount=0
    newentityelement(newentityelementlist).spawn.leaderid=0
    newentityelement(newentityelementlist).spawn.x=entityelement(spawne).x
    newentityelement(newentityelementlist).spawn.y=entityelement(spawne).y
    newentityelement(newentityelementlist).spawn.z=entityelement(spawne).z
    newentityelement(newentityelementlist).active=1
    newentityelement(newentityelementlist).dormant=0
    theleader=newentityelementlist
   else
    rem follower - uses MAX range to group followers to each leader
    newentityelement(newentityelementlist).spawn.leader=0
    newentityelement(newentityelementlist).spawn.leadercount=0
    newentityelement(newentityelementlist).spawn.leaderid=theleader
    newentityelement(newentityelementlist).active=0
    newentityelement(newentityelementlist).dormant=1
    newentityelement(newentityelementlist).health=0
    newentityelement(newentityelementlist).eleprof.lives=0
   endif
  next te
 endif
next spawne
undim entityelement()
undim entitydebug$()
entityelementlist=newentityelementlist
entityelementmax=entityelementlist
dim entityelement(entityelementmax) as entitytype
dim entitybreadcrumbs(entityelementmax,50) as entitybreadcrumbstype
dim entitydebug$(entityelementmax)
for e=1 to entityelementmax
 entityelement(e)=newentityelement(e)
next e
undim newentityelement()
dim entityelementwhichslot(entityelementmax)
dim entityelementusingode(entityelementmax)
dim entityelementwhichobj(entityelementmax)
dim entityelementtexarrayindex(entityelementmax)
dim entityelementusingrefraction(entityelementmax)
dim lastentityraycast(entityelementmax)
dim lastentityraycast2#(entityelementmax)  
dim lastentityshadowlength#(entityelementmax)

rem create instances for all elements (create dynamic entities only)
debugviewtext(302,strarr$(102))
eleobj=entityobjectoffset
ttick=0 : ttickmax=entityelementlist/10
if ttickmax<1 then ttickmax=1
for e=1 to entityelementlist
 obj=eleobj+e
 if obj>0
  if entityelement(e).staticflag=0
   inc ttick : if ttick>ttickmax then ttick=0 : debugviewtext(302,strarr$(103)+str$(e)+"/"+str$(entityelementlist)+" ("+entityprofile(tentid).model$+")")
   entid=entityelement(e).bankindex
   if entityprofile(entid).ismarker=0
    entityelement(e).profileobj=entitybankoffset+entid
    gosub _entity_createelementasobject
   endif
  endif
 endif
next e

rem X10 set flag for all refraction entities
for e=1 to entityelementlist
 obj=eleobj+e
 if obj>0
  if object exist(obj)=1
   tentid=entityelement(e).bankindex
   if right$(lower$(entityprofile(tentid).effect$),10)="cubeent.fx"
    entityelementusingrefraction(e)=1
   else
    entityelementusingrefraction(e)=0
   endif
  endif
 endif
next e

rem after leader creations, do not need leader flag if entity does not spawn
for e=1 to entityelementlist
 if entityelement(e).spawn.leader=1
  tentid=entityelement(e).bankindex
  if entityelement(e).spawn.max=0
   entityelement(e).spawn.leader=0
  endif
 endif
next e

rem Create Entity Attachments
debugviewtext(304,strarr$(104))
entityattachmentindex=0
eleobj=entityobjectoffset
ttick=0 : ttickmax=entityelementlist/10
if ttickmax<1 then ttickmax=1
for e=1 to entityelementlist
 inc ttick : if ttick>ttickmax then ttick=0 : debugviewtext(306,str$(e)+"\"+str$(entityelementlist)+" "+entityelement(e).eleprof.name$)
 gosub _entity_createattachment
next e

rem X10 apply effects to gun attachments
for e=1 to entityelementlist
 entid=entityelement(e).bankindex
 if entityprofile(entid).objattachmentmaster<>0
  rem for instanced guns
  ttobj=entityprofile(entid).objattachmentmaster
  tweaponname$=lower$(entityelement(e).eleprof.hasweapon$)
  `
  rem X10 - V109 - 110309 - find VWEAP texture if GUN_D2 too small
  rem X10 - V110 - 070509 - fixed ttfile$ to tfile$ (VWEAP crash using instances)
  texuseid=0
  tfile$="gamecore\Guns\"+tweaponname$+"\gun_D2.tga"
  if file exist(tfile$)=1
   if file size(tfile$)<2048
    tfile$=findvweaptexture(tfile$)
    texuseid=loadinternaltexture(tfile$)
    if texuseid=0 then tfile$="gamecore\Guns\"+tweaponname$+"\gun_D2.tga"
   endif
  endif
  if texuseid=0 then texuseid=loadinternaltexture(tfile$)
  `
  if entityprofile(entid).characterinstancingmode=1
   teffectid=gsimpleinstancevweapeffect
  else
   teffectid=gsimplevweapeffect
  endif
  set object transparency ttobj,2
  set object collision off ttobj
  texture object ttobj,texuseid
  if teffectid>0 then set object effect ttobj,teffectid
 endif        
next e

rem if entity is server controlled, hide entity initially (multiplayer)
if gmultiplayergame=1
 for e=1 to entityelementlist
  if entityelement(e).servercontrolled=1
   obj=entityelement(e).obj
   if obj>0
    if object exist(obj)=1
     hide object tobj
    endif
   endif
  endif
 next e
endif

rem Assign characters as fake players and set default weapon
fakeplayercount=2
for e=1 to entityelementlist
 entid=entityelement(e).bankindex
 if entityprofile(entid).ischaracter=1
  entityelement(e).fakeplayerid=fakeplayercount
  inc fakeplayercount
 endif
 entityelement(e).currentweapon=entityelement(e).eleprof.hasweapon
 entityelement(e).currentclipammo=9999
 entityelement(e).currentammo=0 : rem V110 - 130110 - filled later if flagged (startingentitiesoff)
next e
rem recreate array to new size
playermax=fakeplayercount-1
dim player(playermax) as playertype
dim playersound(playermax,520) as integer
dim playersoundset$(playermax) as string
dim playersoundsetindex(playermax) as integer
dim playermovementstep(playermax) as integer
dim playerinventory(playermax,100) as inventorytype

rem Transfer sound sets to player data
fakeplayercount=2
playersoundset$(1)=""
for e=1 to entityelementlist
 entid=entityelement(e).bankindex
 if entityprofile(entid).ismarker=1 and entityprofile(entid).lives>0
  playersoundset$(1)=entityelement(e).eleprof.soundset$
 endif
 if entityprofile(entid).ischaracter=1
  playersoundset$(fakeplayercount)=entityelement(e).eleprof.soundset$
  entityelement(e).fakeplrindex=fakeplayercount
  inc fakeplayercount
 endif
next e

rem Activate any decals
for e=1 to entityelementlist
 entid=entityelement(e).bankindex
 if entityprofile(entid).decalmax>0
  for tq=0 to entityprofile(entid).decalmax-1
   `
   rem create particle 
   tdecal$=entitydecal$(entid,tq)
   if lower$(left$(tdecal$,15))="particles-smoke"
    particletype=1
    particlex#=entityelement(e).x
    particley#=entityelement(e).y
    particlez#=entityelement(e).z
    gosub _particles_create
   else
    if lower$(left$(tdecal$,15))="particles-steam"
     particletype=2
     particlex#=entityelement(e).x
     particley#=entityelement(e).y
     particlez#=entityelement(e).z
     gosub _particles_create
    else
     rem create regular decal
     decalid=entitydecal(entid,tq)
     if decalid>0
      decal(decalid).active=1
     endif
    endif
   endif
   `
  next tq
 endif
next e

rem V109 - 140109 - Only remove decals for particles after all particles created
for e=1 to entityelementlist
 entid=entityelement(e).bankindex
 if entityprofile(entid).decalmax>0
  for tq=0 to entityprofile(entid).decalmax-1
   `
   rem remove decals that produce a particle effect (as particles created for them)
   tdecal$=entitydecal$(entid,tq)
   if lower$(left$(tdecal$,15))="particles-smoke"
    rem remove placeholder decal
    entitydecal(entid,tq)=0
    tq=entityprofile(entid).decalmax
    entityprofile(entid).decalmax=0
   else
    if lower$(left$(tdecal$,15))="particles-steam"
     rem remove placeholder decal
     entitydecal(entid,tq)=0
     tq=entityprofile(entid).decalmax
     entityprofile(entid).decalmax=0
    endif
   endif
   `
  next tq
 endif
next e

rem Load any soundsets not belonging to characters or players
debugviewtext(306,strarr$(105))
for e=1 to entityelementlist
 entityelement(e).soundset=0
 entid=entityelement(e).bankindex
 tokay=0 : tsoundis3d=1
 if entityprofile(entid).ischaracter=0 and entityprofile(entid).ismarker=0 then tokay=1
 if entityprofile(entid).ismarker=1 and entityprofile(entid).lives=0 then tokay=1
 if entityprofile(entid).ismarker=3 or entityprofile(entid).ismarker=4 then tokay=1
 if lower$(entityprofile(entid).aimain$)="musicinzone.fpi" then tsoundis3d=0 : rem 200707 music zone
 if tokay=1
  if entityelement(e).eleprof.soundset$<>""
   rem load as 3D sound ready for playing or looping in game (generator)
   tfile$=entityelement(e).eleprof.soundset$
   if file exist(rootdir$+tfile$)=1 or file exist(myownrootdir$+tfile$)=1
    addfiletocollection(tfile$)
    entityelement(e).soundset=loadinternalsoundcore(rootdir$+tfile$,tsoundis3d)
   endif
  endif
  if entityelement(e).eleprof.soundset1$<>""
   rem load as 3D sound ready for playing or looping in game (generator)
   tfile$=entityelement(e).eleprof.soundset1$
   if file exist(rootdir$+tfile$)=1 or file exist(myownrootdir$+tfile$)=1
    addfiletocollection(tfile$)
    entityelement(e).soundset1=loadinternalsoundcore(rootdir$+tfile$,tsoundis3d)
   endif
  endif
 endif
next e

return

_entity_attachelementstogame:

rem associate dynamic entities with game universe (vislinking)
eleobj=entityobjectoffset
for e=1 to entityelementlist
 obj=eleobj+e
 if obj>0
  entid=entityelement(e).bankindex
  if entityelement(e).staticflag=0
   if object exist(obj)=1
    attach object to static obj
   endif
  endif
 endif
next e

rem was here
gosub _player_resetobjectives

return

_entity_calculateobjectivestotal:

rem count all objective entities
missiongoaltotal=0
for e=1 to entityelementlist
 mi=entityelement(e).eleprof.isobjective
 if missiongoaltotal<mi then missiongoaltotal=mi
next e

rem count all as complete
for mi=1 to 99 : playerobjective(mi)=1 : next mi

rem and clear those awaiting to be filled in my entity
for e=1 to entityelementlist
 mi=entityelement(e).eleprof.isobjective
 if mi>0 then playerobjective(mi)=0
next e

return

_entity_deleteelements:

rem Quick deletes
if entityelementlist>0
 delete objects entityobjectoffset+1, entityobjectoffset+entityelementlist
endif
if entityattachmentindex>0
 delete objects entityattachmentsoffset+1, entityattachmentsoffset+entityattachmentindex
endif

return

_entity_scanfornewentitiesnoload:

rem Scan for entities
entdir$="entitybank\"
empty array filelist$()
buildfilelist(entdir$,"")

rem If entities exist
if array count(filelist$())>0
 for chkfile=0 to array count(filelist$())
  `
  rem entity name from folder
  ent$=filelist$(chkfile)
  `
  rem Check if filename valid
  if right$(ent$,4)=".fpe"
  `
  rem Check entity exists in bank
  tokay=1
  if entidmaster>0
   for entid=1 to entidmaster
    if entitybank$(entid)=ent$ then tokay=0
   next entid
  endif
  if tokay=1
    `
   rem Find Free entity Index
   freeentid=-1
   if entidmaster>0
    for entid=1 to entidmaster
     if entitybank$(entid)="" then freeentid=entid : exit
    next entid
   endif
   `
   rem New entity or Free One
   if freeentid=-1
    inc entidmaster : gosub _entity_validatearraysize
    entid=entidmaster
   else
    entid=freeentid
   endif
   `
   rem Load entity
   dim entitybank$(entid)
   entitybank$(entid)=ent$
   `
  endif
  `
  endif
  `
 next chkfile
endif

return


_entity_scanfornewentities:

rem Load all entity names
gosub _entity_scanfornewentitiesnoload

rem Load entities themselves
for entid=1 to endidmaster
 ent$=entitybank$(entid)
 entpath$=getpath(ent$)
 gosub _entity_load
next entid

return

_entity_addtoselection:

rem Load entity from file requester
set dir currententitydir$
ent$=browseropen$(9)
entdir$="entitybank\"
ent$=right$(ent$,len(ent$)-len(rootdir$+entdir$))
currententitydir$=get dir$()
set dir rootdir$
`
rem Check if filename valid
entnewloaded=0 : entid=0
if right$(ent$,4)=".fpe"
 `
 rem Check entity exists in bank
 tokay=1
 if entidmaster>0
  for entid=1 to entidmaster
   if entitybank$(entid)=ent$ then tokay=0 : tfoundid=entid : exit
  next entid
 endif
 if tokay=1
  `
  rem Find Free entity Index
  freeentid=-1
  if entidmaster>0
   for entid=1 to entidmaster
    if entityprofileheader(entid).desc$="" then freeentid=entid : exit
   next entid
  endif
  `
  rem New entity or Free One
  if freeentid=-1
   inc entidmaster : gosub _entity_validatearraysize
   entid=entidmaster
   entnewloaded=1
  else
   entid=freeentid
  endif
  `
  rem Load entity
  entitybank$(entid)=ent$
  entpath$=getpath(ent$)
  gosub _entity_load
  `
 else
  `
  rem already got, assign ID from existing
  entid=tfoundid
  `
 endif
 `
endif

return

_entity_delete:
 `
 rem Remove trace of entity (and object)
 tdelobj=entitybankoffset+entid
 if tdelobj>0
  if object exist(tdelobj)=1 then delete object tdelobj
  entityprofileheader(entid).desc$=""
  entitybank$(entid)=""
  entityprofile(entid).aiinit$=""
  entityprofile(entid).aimain$=""
  entityprofile(entid).aidestroy$=""
  entityprofile(entid).aishoot$=""
  entityprofile(entid).soundset$=""
  entityprofile(entid).soundset1$=""
  entityprofile(entid).usekey$=""
  entityprofile(entid).ifused$=""
  entityprofile(entid).ifusednear$=""
  entityprofile(entid).spawnatstart=0
  entityprofile(entid).spawnmax=0
  entityprofile(entid).spawnupto=0
  entityprofile(entid).spawnafterdelay=0
  entityprofile(entid).spawnwhendead=0
  entityprofile(entid).spawndelay=0
  entityprofile(entid).spawnqty=0
  entityprofile(entid).spawndelayrandom=0
  entityprofile(entid).spawnqtyrandom=0
  entityprofile(entid).spawnvel=0
  entityprofile(entid).spawnvelrandom=0
  entityprofile(entid).spawnangle=0
  entityprofile(entid).spawnanglerandom=0
  entityprofile(entid).spawnlife=0
  entityprofile(entid).model$=""
  entityprofile(entid).offx=0.0
  entityprofile(entid).offy=0.0
  entityprofile(entid).offz=0.0
  entityprofile(entid).rotx=0.0
  entityprofile(entid).roty=0.0
  entityprofile(entid).rotz=0.0
  entityprofile(entid).scale=0.0
  entityprofile(entid).fixnewy=0.0
  entityprofile(entid).forwardfacing=0
  entityprofile(entid).defaultheight=0.0
  entityprofile(entid).defaultstatic=0
  entityprofile(entid).collisionmode=0
  entityprofile(entid).materialindex=0
  entityprofile(entid).debrisshapeindex=0
  entityprofile(entid).coneheight=0.0
  entityprofile(entid).coneangle=0.0
  entityprofile(entid).hurtfall=0
  entityprofile(entid).texpath$=""
  entityprofile(entid).texd$=""
  entityprofile(entid).texdid=0
  entityprofile(entid).texaltd$=""
  entityprofile(entid).texaltdid=0
  entityprofile(entid).tex1id=0
  entityprofile(entid).tex2id=0
  entityprofile(entid).tex3id=0
  entityprofile(entid).tex4id=0
  entityprofile(entid).texidmax=0
  entityprofile(entid).effect$=""
  entityprofile(entid).usingeffect=0
  entityprofile(entid).castshadow=0
  entityprofile(entid).transparency=0
  entityprofile(entid).reducetexture=0
  entityprofile(entid).strength=0
  entityprofile(entid).lives=0
  entityprofile(entid).speed=0
  entityprofile(entid).isimmobile=0
  entityprofile(entid).ischaracter=0
  entityprofile(entid).cantakeweapon=0
  entityprofile(entid).isweapon$=""
  entityprofile(entid).isweapon=0
  entityprofile(entid).isammo=0
  entityprofile(entid).hasweapon$=""
  entityprofile(entid).hasweapon=0
  entityprofile(entid).ishealth=0
  entityprofile(entid).isflak=0
  entityprofile(entid).limbmax=0
  entityprofile(entid).headlimb=0
  entityprofile(entid).firespotlimb=0
  entityprofile(entid).animmax=0
  entityprofile(entid).quantity=0
  entityprofile(entid).ismarker=0
  entityprofile(entid).markerindex=0
  entityprofile(entid).isobjective=0
  entityprofile(entid).decalmax=0
  entityprofile(entid).bloodscorch=0
  entityprofile(entid).rateoffire=0
  entityprofile(entid).damage=0
  entityprofile(entid).accuracy=0
  entityprofile(entid).reloadqty=0
  entityprofile(entid).fireiterations=0
  entityprofile(entid).lifespan=0
  entityprofile(entid).throwspeed=0.0
  entityprofile(entid).throwangle=0.0
  entityprofile(entid).bounceqty=0
  entityprofile(entid).explodeonhit=0
  entityprofile(entid).weaponisammo=0
  entityprofile(entid).spare1=0
  entityprofile(entid).physics=0
  entityprofile(entid).phyalways=0
  entityprofile(entid).phyweight=0
  entityprofile(entid).phyfriction=0
  entityprofile(entid).phyforcedamage=0
  entityprofile(entid).rotatethrow=0
  entityprofile(entid).explodable=0
  entityprofile(entid).explodedamage=0
 endif
 `
return

`
` SLOT functions used to manage character clone instancing
`

_slot_default_create:
 tttentid=entityelement(e).bankindex
 if entityprofile(tttentid).characterinstancingmode=0
  rem no instancing
  ttentobj=entitybankoffset+tttentid
  clone object obj,ttentobj,1
  rem 040807 - need to be part of scene culling otherwise massive slowdown
  attach object to static obj
  rem Prepare a master entity object (scale,fixnewy,loop,pos,offsetlimb)
  coreobj=obj : coreentid=tttentid : gosub _entity_coreobjectsetup
  rem apply texture from array, if available
  if entityprofile(tttentid).usetexturearrayforentity>0
   if entityelementtexarrayindex(e)>=0
    rem X10 partial _D texture arrays used
    texture object obj,0,entityelementtexarrayindex(e)
    if entityprofile(tttentid).tex1id=0
     rem X10 full texture arrays used
     texture object obj,1,entityelementtexarrayindex(e)
     texture object obj,2,entityelementtexarrayindex(e)
    endif
   endif
  endif
 else
  entityelementusingode(e)=0
  entityelementwhichslot(e)=-1
  tttentid=entityelement(e).bankindex
  if entityprofile(tttentid).slotcloneobj>0
   gosub _slot_play_from_slot
  endif
 endif
return

_slot_playframe:
 tttentid=entityelement(e).bankindex
 if entityprofile(tttentid).characterinstancingmode=0
  rem no instancing speed test
  rem do nothing when frame change requested for now
 else
  rem does not play frame, simply sets the correct parentslot
  rem gets e and obj, and ''playframeanimset''
  if entityprofile(tttentid).slotcloneobj>0
   rem playframeanimset=-1 = special trigger, make object a clone and free slot
   rem only if a parent slot managed entity
   animslottype=playframeanimset
   tuseslot=entityelementwhichslot(e)
   if tuseslot>=0
    currentanimtype=entityprofileslot(tuseslot)
    if animslottype<>currentanimtype
     gosub _slot_play_from_slot
     parentslotjustcreated=1
    endif
   else
    rem currently a clone, try to play using regular parentslot resource
    if noslots=0
     gosub _slot_play_from_slot
     parentslotjustcreated=1
    endif
   endif
  endif
 endif
return

_slot_onlyifslotunique:
 `
 rem takes E from AI.dba, only needed for instanced based entities
 tokay=0
 if entityprofile(entid).characterinstancingmode=1
  rem when reload, ifweapon=0 must also ensure that instanced entities
  rem do not share the reload animation (same goes for other non-sharables)
  for onlyifs=0 to entityprofileslotclonequantity-1
   if entityprofileslot(onlyifs)=animslottype
    tokay=1
    exit
   endif
  next onlyifs
 else
  rem Also deny a non-instanced reload based on some random value
  rem so mass-characters all reload at slightly different times
  rem X10 - 131007 - changed from <190 as this was only 1 in 20 of being unique?!?
  if rnd(200)<150 then tokay=1
 endif
 `
return

_slot_play_from_slot:
 `
 rem if instance already using slot, remove it
 if entityelementwhichslot(e)<>-1
  gosub _slot_end_slot_use
 endif
 `
 rem only if looking for new slot
 if animslottype<>-1
  rem look for slot type
  useslot=-1
  for s=0 to entityprofileslotclonequantity-1
   if entityprofileslot(s)=animslottype
    useslot=s
    exit
   endif
  next s
  if useslot=-1
   rem use a new slot
   for s=0 to entityprofileslotclonequantity-1
    if entityprofileslot(s)=0
     useslot=s
     entityprofileslot(useslot)=animslottype
     exit
    endif
   next s
  endif
  if useslot<>-1
   rem find new or existing slot to run animation from
   noslots=0
  else
   rem no more anim resources, so use clone
   noslots=1
  endif
 else
  rem not looking for slot, want to force a clone (corpse/collapse?)
  noslots=1
 endif
 gosub _slot_make_new
 `
return

_slot_make_new:
 `
 rem if no slots left, just wait until one is free
 rem destroy if exists (but not if no slots to use)
 if object exist(obj)=1 and noslots=0
  ox#=object position x(obj)
  oy#=object position y(obj)
  oz#=object position z(obj)
  ry#=object angle y(obj)
  if entityelementusingode(e)>0
   ttobj=obj : gosub _physics_destroyjustragdoll
   entityelementusingode(e)=0
   if ragdollcountingame>0 then dec ragdollcountingame
  endif
  rem 090807 - ensure remove old objects from culling system
  detach object from static obj : delete object obj
 endif
 `
 rem create new instance from new parent slot
 whotoanimateobj=0
 if noslots=1 
  if 0
   `ttentobj=entitybankoffset+tttentid
   `clone object obj,ttentobj,1
   `texture object obj,0,entityelementtexarrayindex(e)
   `if entityprofile(tttentid).tex1id=0
   ` rem X10 full texture arrays used
   ` texture object obj,1,entityelementtexarrayindex(e)
   ` texture object obj,2,entityelementtexarrayindex(e)
   `endif
   `whotoanimateobj=obj
   `entityelementwhichslot(e)=-1
   `tscobj=obj : gosub _slot_prepareclone
  else
   rem keep using current object but free from slot
   whotoanimateobj=obj
  endif
 else
  rem X10 GPU Instancing (with texture array ID)
  rem there is an initial slowdown hit when first instance a new parent
  rem can defeat this by hitting the instance object for each parent at start of game
  instance object obj,entityprofile(tttentid).slotcloneobj+useslot,entityelementtexarrayindex(e)
  rem 040807 - need to be part of scene culling otherwise massive slowdown
  attach object to static obj 
  whotoanimateobj=entityprofile(tttentid).slotcloneobj+useslot
  entityprofileslotref(useslot)=entityprofileslotref(useslot)+1
  entityelementwhichslot(e)=useslot
  rem this gets wiped when delete/instance
  if entityprofile(tttentid).scale<30
   rem X10 - V109 - 160309 - avoids cull bug for very large objects out of view (offset)
   set object radius obj,0
  else
   set object radius obj,lastentityshadowlength#(e)
  endif
 endif
 position object obj,ox#,oy#,oz#
 set object collision off obj
 yrotate object obj,ry#
 `
 rem animate parent slot for new animation
 entityelementwhichobj(e)=whotoanimateobj
 `
return

_slot_prepareclone:
 rem tscobj=entityprofile().slotcloneobj+o
 set object collision off tscobj
 set object speed tscobj,1
 tmintransmode=entityprofile(entid).transparency
 if tmintransmode<2 then tmintransmode=2
 set object transparency tscobj,tmintransmode
 show object tscobj
return

_slot_end_slot_use:
 `
 tttentid=entityelement(e).bankindex
 if entityprofile(tttentid).slotcloneobj>0
  useslot=entityelementwhichslot(e)
  if useslot>=0
   entityelementwhichslot(e)=-1
   entityprofileslotref(useslot)=entityprofileslotref(useslot)-1
   if entityprofileslotref(useslot)<=0
    rem free slot so can be used a new
    entityprofileslotref(useslot)=0
    entityprofileslot(useslot)=0
    rem stop animation to save CPU time
    stop object entityprofile(tttentid).slotcloneobj+useslot
   endif
  endif
 endif
 `
return

_slot_ode_collapse:
 `
 rem entity id
 tttentid=entityelement(e).bankindex
 `
 rem gather exit info
 if object exist(obj)=1
  ox#=object position x(obj)
  oy#=object position y(obj)
  oz#=object position z(obj)
  ry#=object angle y(obj)
  if entityprofile(tttentid).characterinstancingmode=1
   useslot=entityelementwhichslot(e)
   if useslot>=0
    ff#=object frame(entityprofile(tttentid).slotcloneobj+useslot)
   else
    ff#=object frame(obj)
   endif
  else
   ff#=object frame(obj)
  endif
 endif
 `
 rem if instance already using slot, remove it
 if entityelementwhichslot(e)<>-1
  gosub _slot_end_slot_use
 endif
 `
 rem entitiy has no slot (clone)
 entityelementwhichslot(e)=-1
 `
 rem destroy if exists
 if object exist(obj)=1
  if entityelementusingode(e)>0
   ttobj=obj : gosub _physics_destroyjustragdoll
   entityelementusingode(e)=0
   if ragdollcountingame>0 then dec ragdollcountingame
  endif
  rem 090807 - ensure remove old objects from culling system
  `101007 - respawn speed - detach object from static obj : delete object obj
  detach object from static obj : hide object obj
 endif
 `
 ttentobj=entitybankoffset+tttentid
 rem 030707 - move the CLONE operation to a pre-game step
 rem so the clone activity does not slow down the game smoothness
 preclonedcorpseobj=preclonedcorpseobjbase+e
 entityelement(e).obj=preclonedcorpseobj
 obj=entityelement(e).obj
 show object obj
 rem X10 - 241007 - old ragdolls must be re-integrated for full update work
 exclude object off obj
 if entityprofile(tttentid).usetexturearrayforentity>0
  if entityelementtexarrayindex(e)>=0
   rem X10 partial _D texture arrays used
   texture object obj,0,entityelementtexarrayindex(e)
   if entityprofile(tttentid).tex1id=0
    rem X10 full texture arrays used
    texture object obj,1,entityelementtexarrayindex(e)
    texture object obj,2,entityelementtexarrayindex(e)
   endif
  endif
 endif
 offset limb obj,0,0,0,0
 oy#=oy#-(object size y(obj)/2)
 set object collision off obj
 yrotate object obj,ry#
 `
 rem X10 - V109 - 120309 - account for scale and raise object out of floor
 tscaleprop#=(100-entityprofile(tttentid).scale)/100.0
 traisefromfloor#=3.0+((object size y(obj)/2)*tscaleprop#)
 `
 rem Raise object slightly so feet not sticking in floor
 `position object obj,ox#,oy#+3,oz#
 position object obj,ox#,oy#+traisefromfloor#,oz#
 `
 rem X10 new parameter, 3 will force an immediate frame data
 rem update and take into account the world position of the object!
 set object frame obj,ff#,3
 `
 rem V109 - 110209 - return scaling feature to X10
 tscale=entityprofile(tttentid).scale
 if tscale<>0 then scale object obj,tscale,tscale,tscale
 `
 rem make entity collapse with clone (0.6 recommended by Paul)
 gosub _physics_createragdoll
 `
 tobj=obj : gosub _physics_ensurephysicsobjvalid
 inc ragdollcountingame
 phyobjele(obj)=e
 `
 rem then apply a force equal to the force that created the ragdoll
 if entityelement(e).force.active<>0
  tforce#=entityelement(e).force.active
  if tforce#<10 then tforce#=10
  if tforce#>700 then tforce#=700
  tdx#=entityelement(e).force.ix*tforce#*0.1
  tdy#=entityelement(e).force.iy*tforce#*0.1
  tdz#=entityelement(e).force.iz*tforce#*0.1
  tda1#=wrapvalue(atanfull(tdx#,tdz#))
  if tda1#>180 then tda1#=tda1#-360
  gosub _physics_limitforce
  tdx1#=tdx#*1.1 : tdy1#=tdy#*1.1 : tdz1#=tdz#*1.1
  if tdy#<0 then tdy#=0
  rem can be larger force for larger objects (characters)
  tdx#=entityelement(e).x-entityelement(e).force.originx
  tdy#=entityelement(e).y-entityelement(e).force.originy
  tdz#=entityelement(e).z-entityelement(e).force.originz
  tda2#=wrapvalue(atanfull(tdx#,tdz#))
  if tda2#>180 then tda2#=tda2#-360
  tda#=tda2#-tda1#
  rem ragdoll is forced back and spun based on force/origin angle and force direction
  if tda#<-20.0 then tda#=-20.0
  if tda#>20.0 then tda#=20.0
  ode set angular velocity obj,0,tda#/2.0,0
  ode set linear velocity obj,tdx1#*4,(tdy1#)-40,tdz1#*4 : rem magnify to set max. impact force ratio
  entityelement(e).force.active=0
 endif
 `
 rem X10 even though ragdoll force may move it, we place an undesirable flag
 rem down in the AI to avoid corpse standing, and to make the enemy aware
 rem of places they should not hang around
 entityelement(e).eleprof.aiss.corpsecontainer=((oy#+5.0)/100.0)
 entityelement(e).eleprof.aiss.corpsex=ox#
 entityelement(e).eleprof.aiss.corpsez=oz#
 if entityelement(e).eleprof.aiss.corpsecontainer>=0 and entityelement(e).eleprof.aiss.corpsecontainer<20
  AI SET UNDESIRABLE GRID SPACE entityelement(e).eleprof.aiss.corpsecontainer,entityelement(e).eleprof.aiss.corpsex,entityelement(e).eleprof.aiss.corpsez
 else
  entityelement(e).eleprof.aiss.corpsecontainer=-1
 endif
 `
 rem record position at time of ragdoll 
 entityelement(e).x=ox#
 entityelement(e).y=oy#
 entityelement(e).z=oz#
 `
 rem gravity on
 gosub _physics_gravityon
 `
 rem set this entity as a rag doll
 entityelement(e).active=0
 entityelementusingode(e)=100
 `
return

`
` FUNCTION TO FIND ENTITY ELEMENT INDEX FROM OBJ VALUE
`
function findentityfromobj(objclicked)
 entitytoselect=0
 for e=1 to entityelementlist
  if objclicked=entityelement(e).obj
   entitytoselect=e : exit
  endif
 next e
endfunction entitytoselect

`
` FUNCTION TO FIND ALL TEXTURES IN MODEL FILE (for file collection)
`
function findmaterialtexturesinmodelfile(file$,texpath$)
 `
 rem V110 - NOTE - ONLY works with X TEXT files!!
 rem To determine if a model file requires
 rem texture files, we scan the file for a
 rem match to the text .TGA or .JPG (and use texfile$)
 returntexfile$=""
 if file exist(file$)=1
 filesize=file size(file$)
 mbi=255
 open to read 11,file$
 make memblock from file mbi,11
 close file 11
 for b=0 to filesize-1
  if memblock byte(mbi,b+0)=asc(".")
   `
   tfoundpiccy=0
   if memblock byte(mbi,b+1)=asc("T") or memblock byte(mbi,b+1)=asc("t")
    if memblock byte(mbi,b+2)=asc("G") or memblock byte(mbi,b+2)=asc("g")
     if memblock byte(mbi,b+3)=asc("A") or memblock byte(mbi,b+3)=asc("a")
      tfoundpiccy=1
     endif
    endif
   endif
   if memblock byte(mbi,b+1)=asc("J") or memblock byte(mbi,b+1)=asc("j")
    if memblock byte(mbi,b+2)=asc("P") or memblock byte(mbi,b+2)=asc("p")
     if memblock byte(mbi,b+3)=asc("G") or memblock byte(mbi,b+3)=asc("g")
      tfoundpiccy=1
     endif
    endif
   endif
   `
   if tfoundpiccy=1
      rem trace back
      for c=b to b-255 step -1
       if memblock byte(mbi,c)>=asc(" ") and memblock byte(mbi,c)<=asc("z") and memblock byte(mbi,c)<>34
        rem part of filename
       else
        rem no more filename
        exit
       endif
      next c
      texfile$=""
      for d=c+1 to b+3
       texfile$=texfile$+chr$(memblock byte(mbi,d))
      next d
      addfiletocollection(texpath$+texfile$)
      if returntexfile$="" then returntexfile$=texpath$+texfile$
      inc b,4
   endif
   `
  endif
 next b
 delete memblock mbi
 endif
 `
endfunction returntexfile$

